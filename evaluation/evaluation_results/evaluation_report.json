{
  "metadata": {
    "timestamp": "2025-10-15T11:48:46.774192",
    "total_evaluations": 600
  },
  "overall_statistics": {
    "total_evaluations": 600,
    "unique_prompts": 6,
    "overall_success_rate": 1.0,
    "overall_error_rate": 0.0,
    "sequential_stats": {
      "count": 300,
      "success_rate": 1.0,
      "avg_response_time": 61.082062645753226,
      "avg_overall_score": 55.97666666666667,
      "avg_code_quality": 17.13,
      "avg_architecture": 13.61,
      "avg_performance": 11.06,
      "avg_accessibility": 14.176666666666666
    },
    "parallel_stats": {
      "count": 300,
      "success_rate": 1.0,
      "avg_response_time": 81.62583047310511,
      "avg_overall_score": 56.516666666666666,
      "avg_code_quality": 15.81,
      "avg_architecture": 13.496666666666666,
      "avg_performance": 13.823333333333334,
      "avg_accessibility": 13.386666666666667
    },
    "mode_comparison": {
      "response_time": {
        "metric_name": "response_time",
        "group1_name": "sequential",
        "group2_name": "parallel",
        "group1_mean": 60.920563390821115,
        "group2_mean": 68.89883432827943,
        "mean_difference": 7.978270937458319,
        "relative_improvement": 13.096187056373157,
        "p_value": 0.00012947571090187013,
        "statistic": 34418.5,
        "effect_size": 0.42854485625671446,
        "is_significant": true,
        "test_used": "mann-whitney-u"
      },
      "overall_score": {
        "metric_name": "overall_score",
        "group1_name": "sequential",
        "group2_name": "parallel",
        "group1_mean": 55.97666666666667,
        "group2_mean": 56.516666666666666,
        "mean_difference": 0.5399999999999991,
        "relative_improvement": 0.9646876674804963,
        "p_value": 0.02350599533690933,
        "statistic": 40208.5,
        "effect_size": 0.07141613916460213,
        "is_significant": false,
        "test_used": "mann-whitney-u"
      },
      "code_quality": {
        "metric_name": "code_quality_score",
        "group1_name": "sequential",
        "group2_name": "parallel",
        "group1_mean": 17.13,
        "group2_mean": 15.81,
        "mean_difference": -1.3199999999999985,
        "relative_improvement": -7.705779334500868,
        "p_value": 6.781163451127366e-09,
        "statistic": 56910.0,
        "effect_size": -0.6207448842984646,
        "is_significant": true,
        "test_used": "mann-whitney-u"
      },
      "architecture": {
        "metric_name": "architecture_score",
        "group1_name": "sequential",
        "group2_name": "parallel",
        "group1_mean": 13.61,
        "group2_mean": 13.496666666666666,
        "mean_difference": -0.11333333333333329,
        "relative_improvement": -0.8327210384521182,
        "p_value": 0.5713385637267929,
        "statistic": 46171.0,
        "effect_size": -0.061780966319164174,
        "is_significant": false,
        "test_used": "mann-whitney-u"
      },
      "performance": {
        "metric_name": "performance_score",
        "group1_name": "sequential",
        "group2_name": "parallel",
        "group1_mean": 11.06,
        "group2_mean": 13.823333333333334,
        "mean_difference": 2.7633333333333336,
        "relative_improvement": 24.984930681133214,
        "p_value": 5.504487884937622e-34,
        "statistic": 19590.5,
        "effect_size": 1.1674153088965504,
        "is_significant": true,
        "test_used": "mann-whitney-u"
      },
      "accessibility": {
        "metric_name": "accessibility_score",
        "group1_name": "sequential",
        "group2_name": "parallel",
        "group1_mean": 14.176666666666666,
        "group2_mean": 13.386666666666667,
        "mean_difference": -0.7899999999999991,
        "relative_improvement": -5.572537032682806,
        "p_value": 0.00019689532753896567,
        "statistic": 52774.0,
        "effect_size": -0.2437258769999014,
        "is_significant": true,
        "test_used": "mann-whitney-u"
      }
    }
  },
  "prompt_results": {
    "algorithm_visualizer": {
      "sequential": {
        "response_time": {
          "mean": 66.39057511350383,
          "median": 64.33190262317657,
          "std": 3.0897994658502217,
          "min": 59.32342076301575,
          "max": 74.33474707603455,
          "q1": 64.32050728797913,
          "q3": 69.32709556818008,
          "iqr": 5.006588280200958,
          "ci_lower": 65.47301793321111,
          "ci_upper": 67.30813229379655,
          "outliers": [
            89.33920645713806,
            79.34478783607483,
            79.34212636947632,
            79.33563446998596
          ],
          "n_samples": 46,
          "success_rate": 0.92
        },
        "overall_score": {
          "mean": 52.5,
          "median": 52.0,
          "std": 1.417816660091372,
          "min": 49.0,
          "max": 55.0,
          "q1": 52.0,
          "q3": 53.0,
          "iqr": 1.0,
          "ci_lower": 52.09706096353258,
          "ci_upper": 52.90293903646742,
          "outliers": [
            49.0,
            55.0,
            49.0,
            55.0,
            55.0,
            49.0,
            49.0,
            55.0
          ],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "code_quality": {
          "mean": 16.0,
          "median": 16.0,
          "std": 0.0,
          "min": 16.0,
          "max": 16.0,
          "q1": 16.0,
          "q3": 16.0,
          "iqr": 0.0,
          "ci_lower": NaN,
          "ci_upper": NaN,
          "outliers": [],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "architecture": {
          "mean": 12.88,
          "median": 12.0,
          "std": 1.002853072844814,
          "min": 12.0,
          "max": 14.0,
          "q1": 12.0,
          "q3": 14.0,
          "iqr": 2.0,
          "ci_lower": 12.594992310173275,
          "ci_upper": 13.165007689826727,
          "outliers": [],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "performance": {
          "mean": 10.56,
          "median": 10.0,
          "std": 0.7045044574821688,
          "min": 10.0,
          "max": 12.0,
          "q1": 10.0,
          "q3": 11.0,
          "iqr": 1.0,
          "ci_lower": 10.359782048500843,
          "ci_upper": 10.760217951499158,
          "outliers": [],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "accessibility": {
          "mean": 13.06,
          "median": 13.0,
          "std": 1.0768434597167287,
          "min": 11.0,
          "max": 14.0,
          "q1": 12.0,
          "q3": 14.0,
          "iqr": 2.0,
          "ci_lower": 12.753964474887363,
          "ci_upper": 13.366035525112638,
          "outliers": [],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "success_rate": 1.0,
        "error_rate": 0.0
      },
      "parallel": {
        "response_time": {
          "mean": 92.5687691201555,
          "median": 99.3914624452591,
          "std": 22.256512456714248,
          "min": 44.370291233062744,
          "max": 129.44839930534363,
          "q1": 76.86629104614258,
          "q3": 109.40580463409424,
          "iqr": 32.53951358795166,
          "ci_lower": 86.0340122540796,
          "ci_upper": 99.10352598623139,
          "outliers": [
            409.7918312549591,
            209.55418968200684,
            384.75540566444397
          ],
          "n_samples": 47,
          "success_rate": 0.94
        },
        "overall_score": {
          "mean": 45.74,
          "median": 46.0,
          "std": 5.098259006558924,
          "min": 36.0,
          "max": 59.0,
          "q1": 41.0,
          "q3": 47.0,
          "iqr": 6.0,
          "ci_lower": 44.29109082183317,
          "ci_upper": 47.18890917816683,
          "outliers": [
            59.0,
            59.0,
            59.0
          ],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "code_quality": {
          "mean": 13.4,
          "median": 14.0,
          "std": 1.7261494247992248,
          "min": 10.0,
          "max": 18.0,
          "q1": 12.0,
          "q3": 14.0,
          "iqr": 2.0,
          "ci_lower": 12.909433761356297,
          "ci_upper": 13.890566238643704,
          "outliers": [
            18.0,
            18.0,
            18.0
          ],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "architecture": {
          "mean": 11.32,
          "median": 11.0,
          "std": 1.6091574674661397,
          "min": 8.0,
          "max": 15.0,
          "q1": 10.0,
          "q3": 12.0,
          "iqr": 2.0,
          "ci_lower": 10.862682507748652,
          "ci_upper": 11.777317492251349,
          "outliers": [],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "performance": {
          "mean": 10.96,
          "median": 11.0,
          "std": 2.432433903290601,
          "min": 8.0,
          "max": 16.0,
          "q1": 8.5,
          "q3": 12.0,
          "iqr": 3.5,
          "ci_lower": 10.268709933483608,
          "ci_upper": 11.651290066516394,
          "outliers": [],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "accessibility": {
          "mean": 10.06,
          "median": 11.0,
          "std": 1.47648230602334,
          "min": 6.0,
          "max": 13.0,
          "q1": 9.0,
          "q3": 11.0,
          "iqr": 2.0,
          "ci_lower": 9.640388371433083,
          "ci_upper": 10.479611628566918,
          "outliers": [],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "success_rate": 1.0,
        "error_rate": 0.0
      },
      "comparison": {
        "response_time": {
          "metric_name": "response_time",
          "group1_name": "sequential",
          "group2_name": "parallel",
          "group1_mean": 66.39057511350383,
          "group2_mean": 92.5687691201555,
          "mean_difference": 26.178194006651665,
          "relative_improvement": 39.430587793367415,
          "p_value": 1.518891509773239e-08,
          "statistic": 344.0,
          "effect_size": 1.6476020941027019,
          "is_significant": true,
          "test_used": "mann-whitney-u"
        },
        "overall_score": {
          "metric_name": "overall_score",
          "group1_name": "sequential",
          "group2_name": "parallel",
          "group1_mean": 52.5,
          "group2_mean": 45.74,
          "mean_difference": -6.759999999999998,
          "relative_improvement": -12.876190476190471,
          "p_value": 3.025486708859874e-11,
          "statistic": 2204.0,
          "effect_size": -1.806606990918823,
          "is_significant": true,
          "test_used": "mann-whitney-u"
        },
        "code_quality": {
          "metric_name": "code_quality_score",
          "group1_name": "sequential",
          "group2_name": "parallel",
          "group1_mean": 16.0,
          "group2_mean": 13.4,
          "mean_difference": -2.5999999999999996,
          "relative_improvement": -16.249999999999996,
          "p_value": 9.451913396595156e-15,
          "statistic": 2275.0,
          "effect_size": -2.130148878969576,
          "is_significant": true,
          "test_used": "mann-whitney-u"
        },
        "architecture": {
          "metric_name": "architecture_score",
          "group1_name": "sequential",
          "group2_name": "parallel",
          "group1_mean": 12.88,
          "group2_mean": 11.32,
          "mean_difference": -1.5600000000000005,
          "relative_improvement": -12.111801242236028,
          "p_value": 2.573704550525451e-07,
          "statistic": 1953.0,
          "effect_size": -1.1635471463816418,
          "is_significant": true,
          "test_used": "mann-whitney-u"
        },
        "performance": {
          "metric_name": "performance_score",
          "group1_name": "sequential",
          "group2_name": "parallel",
          "group1_mean": 10.56,
          "group2_mean": 10.96,
          "mean_difference": 0.40000000000000036,
          "relative_improvement": 3.7878787878787907,
          "p_value": 0.41082220706158434,
          "statistic": 1135.0,
          "effect_size": 0.2233789761954112,
          "is_significant": false,
          "test_used": "mann-whitney-u"
        },
        "accessibility": {
          "metric_name": "accessibility_score",
          "group1_name": "sequential",
          "group2_name": "parallel",
          "group1_mean": 13.06,
          "group2_mean": 10.06,
          "mean_difference": -3.0,
          "relative_improvement": -22.970903522205205,
          "p_value": 3.3648791129796197e-15,
          "statistic": 2366.0,
          "effect_size": -2.321611557708113,
          "is_significant": true,
          "test_used": "mann-whitney-u"
        }
      }
    },
    "markdown_editor": {
      "sequential": {
        "response_time": {
          "mean": 69.32989928552082,
          "median": 69.33033430576324,
          "std": 0.004416035809674771,
          "min": 69.31527018547058,
          "max": 69.33886814117432,
          "q1": 69.32280135154724,
          "q3": 69.3353653550148,
          "iqr": 0.012564003467559814,
          "ci_lower": 69.32818692559526,
          "ci_upper": 69.33161164544639,
          "outliers": [
            84.36496114730835,
            74.34581565856934,
            64.32608580589294,
            74.33811712265015,
            79.35730957984924,
            79.33913850784302,
            109.37033987045288,
            64.32616639137268,
            64.3286292552948,
            64.3226306438446,
            64.32080721855164,
            74.34169554710388,
            74.34192824363708,
            64.31686210632324,
            64.32174587249756,
            64.319899559021,
            64.32417964935303,
            59.319623708724976,
            84.35147452354431,
            64.31950402259827,
            74.3302710056305,
            74.33161306381226
          ],
          "n_samples": 28,
          "success_rate": 0.56
        },
        "overall_score": {
          "mean": 47.34,
          "median": 47.5,
          "std": 2.1909833781353307,
          "min": 43.0,
          "max": 51.0,
          "q1": 45.0,
          "q3": 49.0,
          "iqr": 4.0,
          "ci_lower": 46.71732941349053,
          "ci_upper": 47.962670586509475,
          "outliers": [],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "code_quality": {
          "mean": 14.8,
          "median": 15.0,
          "std": 0.6388765649999399,
          "min": 14.0,
          "max": 16.0,
          "q1": 14.0,
          "q3": 15.0,
          "iqr": 1.0,
          "ci_lower": 14.618433289177105,
          "ci_upper": 14.981566710822896,
          "outliers": [],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "architecture": {
          "mean": 11.76,
          "median": 12.0,
          "std": 0.6869037302955033,
          "min": 10.0,
          "max": 14.0,
          "q1": 11.0,
          "q3": 12.0,
          "iqr": 1.0,
          "ci_lower": 11.56478411982173,
          "ci_upper": 11.955215880178269,
          "outliers": [
            14.0,
            14.0
          ],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "performance": {
          "mean": 8.12,
          "median": 8.0,
          "std": 0.47979587496419046,
          "min": 8.0,
          "max": 10.0,
          "q1": 8.0,
          "q3": 8.0,
          "iqr": 0.0,
          "ci_lower": 7.983643521055354,
          "ci_upper": 8.256356478944644,
          "outliers": [
            10.0,
            10.0,
            10.0
          ],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "accessibility": {
          "mean": 12.66,
          "median": 12.0,
          "std": 1.3032142367771984,
          "min": 11.0,
          "max": 14.0,
          "q1": 11.25,
          "q3": 14.0,
          "iqr": 2.75,
          "ci_lower": 12.289630611870653,
          "ci_upper": 13.030369388129348,
          "outliers": [],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "success_rate": 1.0,
        "error_rate": 0.0
      },
      "parallel": {
        "response_time": {
          "mean": 64.32335289546421,
          "median": 64.32405591011047,
          "std": 3.433981560752875,
          "min": 59.312931060791016,
          "max": 69.34512615203857,
          "q1": 64.3125165104866,
          "q3": 69.33604764938354,
          "iqr": 5.023531138896942,
          "ci_lower": 63.143738957215064,
          "ci_upper": 65.50296683371336,
          "outliers": [
            89.36299896240234,
            84.32756185531616,
            54.313515186309814,
            89.36022758483887,
            54.31357741355896,
            54.30396032333374,
            79.34262609481812,
            94.370614528656,
            84.34439063072205,
            89.3581337928772,
            94.35877203941345,
            54.31600904464722,
            99.38003158569336,
            89.37075853347778,
            89.3613817691803
          ],
          "n_samples": 35,
          "success_rate": 0.7
        },
        "overall_score": {
          "mean": 56.76,
          "median": 58.0,
          "std": 4.063576388013948,
          "min": 48.0,
          "max": 63.0,
          "q1": 53.0,
          "q3": 60.0,
          "iqr": 7.0,
          "ci_lower": 55.60514436845974,
          "ci_upper": 57.914855631540256,
          "outliers": [],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "code_quality": {
          "mean": 16.6,
          "median": 16.0,
          "std": 1.4142135623730951,
          "min": 14.0,
          "max": 18.0,
          "q1": 16.0,
          "q3": 18.0,
          "iqr": 2.0,
          "ci_lower": 16.198084952574153,
          "ci_upper": 17.00191504742585,
          "outliers": [],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "architecture": {
          "mean": 14.56,
          "median": 14.0,
          "std": 1.5274361605284184,
          "min": 11.0,
          "max": 18.0,
          "q1": 14.0,
          "q3": 16.0,
          "iqr": 2.0,
          "ci_lower": 14.125907446207354,
          "ci_upper": 14.994092553792647,
          "outliers": [],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "performance": {
          "mean": 13.54,
          "median": 14.0,
          "std": 1.8539533050060504,
          "min": 10.0,
          "max": 18.0,
          "q1": 12.0,
          "q3": 14.0,
          "iqr": 2.0,
          "ci_lower": 13.013112300481364,
          "ci_upper": 14.066887699518634,
          "outliers": [
            18.0
          ],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "accessibility": {
          "mean": 12.06,
          "median": 12.0,
          "std": 1.1677643038677603,
          "min": 11.0,
          "max": 15.0,
          "q1": 11.0,
          "q3": 12.0,
          "iqr": 1.0,
          "ci_lower": 11.728125056880623,
          "ci_upper": 12.391874943119378,
          "outliers": [
            15.0,
            14.0,
            14.0,
            14.0,
            15.0,
            15.0,
            14.0
          ],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "success_rate": 1.0,
        "error_rate": 0.0
      },
      "comparison": {
        "response_time": {
          "metric_name": "response_time",
          "group1_name": "sequential",
          "group2_name": "parallel",
          "group1_mean": 69.32989928552082,
          "group2_mean": 64.32335289546421,
          "mean_difference": -5.006546390056613,
          "relative_improvement": -7.2213380397946185,
          "p_value": 1.1291786734544265e-07,
          "statistic": 874.0,
          "effect_size": -2.0618398281051893,
          "is_significant": true,
          "test_used": "mann-whitney-u"
        },
        "overall_score": {
          "metric_name": "overall_score",
          "group1_name": "sequential",
          "group2_name": "parallel",
          "group1_mean": 47.34,
          "group2_mean": 56.76,
          "mean_difference": 9.419999999999995,
          "relative_improvement": 19.898605830164755,
          "p_value": 4.0905103739072017e-17,
          "statistic": 40.0,
          "effect_size": 2.8856455476959706,
          "is_significant": true,
          "test_used": "mann-whitney-u"
        },
        "code_quality": {
          "metric_name": "code_quality_score",
          "group1_name": "sequential",
          "group2_name": "parallel",
          "group1_mean": 14.8,
          "group2_mean": 16.6,
          "mean_difference": 1.8000000000000007,
          "relative_improvement": 12.162162162162167,
          "p_value": 3.694285004711828e-10,
          "statistic": 368.0,
          "effect_size": 1.6403802783583812,
          "is_significant": true,
          "test_used": "mann-whitney-u"
        },
        "architecture": {
          "metric_name": "architecture_score",
          "group1_name": "sequential",
          "group2_name": "parallel",
          "group1_mean": 11.76,
          "group2_mean": 14.56,
          "mean_difference": 2.8000000000000007,
          "relative_improvement": 23.809523809523817,
          "p_value": 4.370357185170264e-14,
          "statistic": 196.5,
          "effect_size": 2.3643648592015665,
          "is_significant": true,
          "test_used": "mann-whitney-u"
        },
        "performance": {
          "metric_name": "performance_score",
          "group1_name": "sequential",
          "group2_name": "parallel",
          "group1_mean": 8.12,
          "group2_mean": 13.54,
          "mean_difference": 5.42,
          "relative_improvement": 66.7487684729064,
          "p_value": 6.197697719843821e-20,
          "statistic": 1.5,
          "effect_size": 4.0025640085052245,
          "is_significant": true,
          "test_used": "mann-whitney-u"
        },
        "accessibility": {
          "metric_name": "accessibility_score",
          "group1_name": "sequential",
          "group2_name": "parallel",
          "group1_mean": 12.66,
          "group2_mean": 12.06,
          "mean_difference": -0.5999999999999996,
          "relative_improvement": -4.739336492890992,
          "p_value": 0.02664329754630671,
          "statistic": 1557.5,
          "effect_size": -0.4849095758189089,
          "is_significant": false,
          "test_used": "mann-whitney-u"
        }
      }
    },
    "pomodoro_timer": {
      "sequential": {
        "response_time": {
          "mean": 56.27040073664292,
          "median": 54.32437872886658,
          "std": 2.8859645798148184,
          "min": 49.30214548110962,
          "max": 59.327155351638794,
          "q1": 54.31049180030823,
          "q3": 59.31931287050247,
          "iqr": 5.008821070194244,
          "ci_lower": 55.413375045640386,
          "ci_upper": 57.12742642764545,
          "outliers": [
            74.3456072807312,
            79.34107041358948,
            74.34206891059875,
            69.32303428649902
          ],
          "n_samples": 46,
          "success_rate": 0.92
        },
        "overall_score": {
          "mean": 57.26,
          "median": 56.0,
          "std": 2.0082482975194567,
          "min": 55.0,
          "max": 60.0,
          "q1": 56.0,
          "q3": 60.0,
          "iqr": 4.0,
          "ci_lower": 56.68926214879031,
          "ci_upper": 57.83073785120968,
          "outliers": [],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "code_quality": {
          "mean": 18.0,
          "median": 18.0,
          "std": 0.0,
          "min": 18.0,
          "max": 18.0,
          "q1": 18.0,
          "q3": 18.0,
          "iqr": 0.0,
          "ci_lower": NaN,
          "ci_upper": NaN,
          "outliers": [],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "architecture": {
          "mean": 15.24,
          "median": 15.0,
          "std": 0.6246631745450129,
          "min": 14.0,
          "max": 16.0,
          "q1": 15.0,
          "q3": 16.0,
          "iqr": 1.0,
          "ci_lower": 15.062472690050328,
          "ci_upper": 15.417527309949673,
          "outliers": [],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "performance": {
          "mean": 12.6,
          "median": 12.0,
          "std": 0.9258200997725514,
          "min": 12.0,
          "max": 14.0,
          "q1": 12.0,
          "q3": 14.0,
          "iqr": 2.0,
          "ci_lower": 12.336884838889898,
          "ci_upper": 12.863115161110102,
          "outliers": [],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "accessibility": {
          "mean": 11.42,
          "median": 11.0,
          "std": 0.7024737630368141,
          "min": 11.0,
          "max": 14.0,
          "q1": 11.0,
          "q3": 12.0,
          "iqr": 1.0,
          "ci_lower": 11.220359165476685,
          "ci_upper": 11.619640834523315,
          "outliers": [
            14.0,
            14.0
          ],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "success_rate": 1.0,
        "error_rate": 0.0
      },
      "parallel": {
        "response_time": {
          "mean": 76.46809160113335,
          "median": 79.3439952135086,
          "std": 21.570871250212463,
          "min": 49.30146288871765,
          "max": 139.42234921455383,
          "q1": 64.32251226902008,
          "q3": 111.89671224355698,
          "iqr": 47.574199974536896,
          "ci_lower": 69.56939229261603,
          "ci_upper": 83.36679090965067,
          "outliers": [
            219.5410668849945,
            234.57916593551636,
            424.8043463230133,
            224.55418515205383,
            219.56355381011963,
            209.5650885105133,
            209.51697421073914,
            234.54723405838013,
            219.55987524986267,
            214.53827714920044
          ],
          "n_samples": 40,
          "success_rate": 0.8
        },
        "overall_score": {
          "mean": 56.34,
          "median": 59.5,
          "std": 7.000320692362484,
          "min": 41.0,
          "max": 67.0,
          "q1": 53.0,
          "q3": 60.75,
          "iqr": 7.75,
          "ci_lower": 54.350530871768896,
          "ci_upper": 58.32946912823111,
          "outliers": [
            41.0,
            41.0,
            41.0,
            41.0,
            41.0
          ],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "code_quality": {
          "mean": 15.98,
          "median": 18.0,
          "std": 2.6224307154132513,
          "min": 10.0,
          "max": 19.0,
          "q1": 14.0,
          "q3": 18.0,
          "iqr": 4.0,
          "ci_lower": 15.234713436924137,
          "ci_upper": 16.725286563075862,
          "outliers": [],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "architecture": {
          "mean": 14.1,
          "median": 15.0,
          "std": 2.1499881347560588,
          "min": 8.0,
          "max": 16.0,
          "q1": 12.0,
          "q3": 16.0,
          "iqr": 4.0,
          "ci_lower": 13.488980132749198,
          "ci_upper": 14.711019867250801,
          "outliers": [],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "performance": {
          "mean": 13.6,
          "median": 14.0,
          "std": 2.498979383505129,
          "min": 8.0,
          "max": 19.0,
          "q1": 12.0,
          "q3": 15.0,
          "iqr": 3.0,
          "ci_lower": 12.889797917259184,
          "ci_upper": 14.310202082740815,
          "outliers": [],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "accessibility": {
          "mean": 12.66,
          "median": 12.0,
          "std": 1.7450805489859145,
          "min": 9.0,
          "max": 17.0,
          "q1": 11.25,
          "q3": 14.0,
          "iqr": 2.75,
          "ci_lower": 12.164053595391442,
          "ci_upper": 13.155946404608558,
          "outliers": [],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "success_rate": 1.0,
        "error_rate": 0.0
      },
      "comparison": {
        "response_time": {
          "metric_name": "response_time",
          "group1_name": "sequential",
          "group2_name": "parallel",
          "group1_mean": 56.27040073664292,
          "group2_mean": 76.46809160113335,
          "mean_difference": 20.197690864490433,
          "relative_improvement": 35.89398795828697,
          "p_value": 6.427034110486455e-09,
          "statistic": 249.0,
          "effect_size": 1.312491595756672,
          "is_significant": true,
          "test_used": "mann-whitney-u"
        },
        "overall_score": {
          "metric_name": "overall_score",
          "group1_name": "sequential",
          "group2_name": "parallel",
          "group1_mean": 57.26,
          "group2_mean": 56.34,
          "mean_difference": -0.9199999999999946,
          "relative_improvement": -1.6067062521830155,
          "p_value": 0.48879921312213914,
          "statistic": 1151.5,
          "effect_size": -0.17865332106386564,
          "is_significant": false,
          "test_used": "mann-whitney-u"
        },
        "code_quality": {
          "metric_name": "code_quality_score",
          "group1_name": "sequential",
          "group2_name": "parallel",
          "group1_mean": 18.0,
          "group2_mean": 15.98,
          "mean_difference": -2.0199999999999996,
          "relative_improvement": -11.22222222222222,
          "p_value": 9.121508588154947e-07,
          "statistic": 1775.0,
          "effect_size": -1.0893372241269992,
          "is_significant": true,
          "test_used": "mann-whitney-u"
        },
        "architecture": {
          "metric_name": "architecture_score",
          "group1_name": "sequential",
          "group2_name": "parallel",
          "group1_mean": 15.24,
          "group2_mean": 14.1,
          "mean_difference": -1.1400000000000006,
          "relative_improvement": -7.480314960629925,
          "p_value": 0.053231149914290475,
          "statistic": 1517.0,
          "effect_size": -0.7200887495176036,
          "is_significant": false,
          "test_used": "mann-whitney-u"
        },
        "performance": {
          "metric_name": "performance_score",
          "group1_name": "sequential",
          "group2_name": "parallel",
          "group1_mean": 12.6,
          "group2_mean": 13.6,
          "mean_difference": 1.0,
          "relative_improvement": 7.936507936507936,
          "p_value": 0.00226292665900546,
          "statistic": 830.0,
          "effect_size": 0.5306686305052324,
          "is_significant": true,
          "test_used": "mann-whitney-u"
        },
        "accessibility": {
          "metric_name": "accessibility_score",
          "group1_name": "sequential",
          "group2_name": "parallel",
          "group1_mean": 11.42,
          "group2_mean": 12.66,
          "mean_difference": 1.2400000000000002,
          "relative_improvement": 10.858143607705781,
          "p_value": 6.383420459225664e-06,
          "statistic": 638.0,
          "effect_size": 0.9322023135578121,
          "is_significant": true,
          "test_used": "mann-whitney-u"
        }
      }
    },
    "tic_tac_toe": {
      "sequential": {
        "response_time": {
          "mean": 45.46818660134854,
          "median": 44.3754917383194,
          "std": 2.8950233377731087,
          "min": 39.886032581329346,
          "max": 54.31646966934204,
          "q1": 44.372351348400116,
          "q3": 49.299389719963074,
          "iqr": 4.927038371562958,
          "ci_lower": 44.608470791294266,
          "ci_upper": 46.32790241140282,
          "outliers": [
            59.317429304122925,
            69.32542610168457,
            69.32510566711426,
            59.30938649177551
          ],
          "n_samples": 46,
          "success_rate": 0.92
        },
        "overall_score": {
          "mean": 58.9,
          "median": 59.0,
          "std": 1.5551100755055174,
          "min": 55.0,
          "max": 63.0,
          "q1": 59.0,
          "q3": 59.0,
          "iqr": 0.0,
          "ci_lower": 58.458042606591604,
          "ci_upper": 59.34195739340839,
          "outliers": [
            60.0,
            63.0,
            55.0,
            55.0,
            55.0,
            60.0,
            55.0,
            55.0,
            60.0,
            60.0,
            60.0,
            60.0,
            63.0,
            60.0
          ],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "code_quality": {
          "mean": 18.0,
          "median": 18.0,
          "std": 0.0,
          "min": 18.0,
          "max": 18.0,
          "q1": 18.0,
          "q3": 18.0,
          "iqr": 0.0,
          "ci_lower": NaN,
          "ci_upper": NaN,
          "outliers": [],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "architecture": {
          "mean": 14.82,
          "median": 15.0,
          "std": 0.48191793695522855,
          "min": 14.0,
          "max": 16.0,
          "q1": 15.0,
          "q3": 15.0,
          "iqr": 0.0,
          "ci_lower": 14.683040437710336,
          "ci_upper": 14.956959562289665,
          "outliers": [
            16.0,
            14.0,
            14.0,
            14.0,
            16.0,
            14.0,
            14.0,
            14.0,
            14.0,
            14.0,
            14.0,
            14.0,
            14.0
          ],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "performance": {
          "mean": 13.12,
          "median": 14.0,
          "std": 1.002853072844814,
          "min": 12.0,
          "max": 14.0,
          "q1": 12.0,
          "q3": 14.0,
          "iqr": 2.0,
          "ci_lower": 12.834992310173273,
          "ci_upper": 13.405007689826725,
          "outliers": [],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "accessibility": {
          "mean": 12.96,
          "median": 12.0,
          "std": 1.5902765771515137,
          "min": 11.0,
          "max": 16.0,
          "q1": 12.0,
          "q3": 14.0,
          "iqr": 2.0,
          "ci_lower": 12.508048397405028,
          "ci_upper": 13.411951602594973,
          "outliers": [],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "success_rate": 1.0,
        "error_rate": 0.0
      },
      "parallel": {
        "response_time": {
          "mean": 35.88604763213625,
          "median": 35.81069493293762,
          "std": 3.733565050069227,
          "min": 32.097936153411865,
          "max": 49.301475524902344,
          "q1": 32.10601752996445,
          "q3": 39.88542640209198,
          "iqr": 7.779408872127533,
          "ci_lower": 34.78983186637639,
          "ci_upper": 36.982263397896105,
          "outliers": [
            79.34148573875427,
            64.3299310207367,
            59.31412935256958
          ],
          "n_samples": 47,
          "success_rate": 0.94
        },
        "overall_score": {
          "mean": 58.18,
          "median": 59.0,
          "std": 3.2368414939787917,
          "min": 47.0,
          "max": 63.0,
          "q1": 55.75,
          "q3": 60.0,
          "iqr": 4.25,
          "ci_lower": 57.26009982567313,
          "ci_upper": 59.09990017432687,
          "outliers": [
            47.0
          ],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "code_quality": {
          "mean": 17.24,
          "median": 18.0,
          "std": 1.2381684960011685,
          "min": 12.0,
          "max": 18.0,
          "q1": 16.0,
          "q3": 18.0,
          "iqr": 2.0,
          "ci_lower": 16.88811640686259,
          "ci_upper": 17.591883593137407,
          "outliers": [
            12.0
          ],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "architecture": {
          "mean": 13.62,
          "median": 14.0,
          "std": 0.9874725519305975,
          "min": 10.0,
          "max": 15.0,
          "q1": 14.0,
          "q3": 14.0,
          "iqr": 0.0,
          "ci_lower": 13.33936340585298,
          "ci_upper": 13.900636594147018,
          "outliers": [
            15.0,
            12.0,
            12.0,
            12.0,
            12.0,
            12.0,
            15.0,
            12.0,
            15.0,
            12.0,
            10.0,
            12.0,
            12.0
          ],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "performance": {
          "mean": 15.58,
          "median": 16.0,
          "std": 1.5919440047582436,
          "min": 11.0,
          "max": 18.0,
          "q1": 14.5,
          "q3": 16.0,
          "iqr": 1.5,
          "ci_lower": 15.127574519722428,
          "ci_upper": 16.03242548027757,
          "outliers": [
            11.0,
            12.0,
            12.0,
            12.0
          ],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "accessibility": {
          "mean": 11.74,
          "median": 12.0,
          "std": 0.7774894185250159,
          "min": 11.0,
          "max": 15.0,
          "q1": 11.0,
          "q3": 12.0,
          "iqr": 1.0,
          "ci_lower": 11.519039952073987,
          "ci_upper": 11.960960047926013,
          "outliers": [
            15.0,
            14.0
          ],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "success_rate": 1.0,
        "error_rate": 0.0
      },
      "comparison": {
        "response_time": {
          "metric_name": "response_time",
          "group1_name": "sequential",
          "group2_name": "parallel",
          "group1_mean": 45.46818660134854,
          "group2_mean": 35.88604763213625,
          "mean_difference": -9.582138969212295,
          "relative_improvement": -21.074381200256838,
          "p_value": 8.682267741469157e-15,
          "statistic": 2091.0,
          "effect_size": -2.868295344384408,
          "is_significant": true,
          "test_used": "mann-whitney-u"
        },
        "overall_score": {
          "metric_name": "overall_score",
          "group1_name": "sequential",
          "group2_name": "parallel",
          "group1_mean": 58.9,
          "group2_mean": 58.18,
          "mean_difference": -0.7199999999999989,
          "relative_improvement": -1.2224108658743615,
          "p_value": 0.3286897159002392,
          "statistic": 1117.5,
          "effect_size": -0.2835490715269411,
          "is_significant": false,
          "test_used": "mann-whitney-u"
        },
        "code_quality": {
          "metric_name": "code_quality_score",
          "group1_name": "sequential",
          "group2_name": "parallel",
          "group1_mean": 18.0,
          "group2_mean": 17.24,
          "mean_difference": -0.7600000000000016,
          "relative_improvement": -4.22222222222223,
          "p_value": 3.5614414021379215e-06,
          "statistic": 1700.0,
          "effect_size": -0.8680581931092358,
          "is_significant": true,
          "test_used": "mann-whitney-u"
        },
        "architecture": {
          "metric_name": "architecture_score",
          "group1_name": "sequential",
          "group2_name": "parallel",
          "group1_mean": 14.82,
          "group2_mean": 13.62,
          "mean_difference": -1.200000000000001,
          "relative_improvement": -8.097165991902841,
          "p_value": 3.638567715818534e-13,
          "statistic": 2208.0,
          "effect_size": -1.544472575841138,
          "is_significant": true,
          "test_used": "mann-whitney-u"
        },
        "performance": {
          "metric_name": "performance_score",
          "group1_name": "sequential",
          "group2_name": "parallel",
          "group1_mean": 13.12,
          "group2_mean": 15.58,
          "mean_difference": 2.460000000000001,
          "relative_improvement": 18.750000000000007,
          "p_value": 4.985534186684863e-12,
          "statistic": 293.0,
          "effect_size": 1.8490492288869596,
          "is_significant": true,
          "test_used": "mann-whitney-u"
        },
        "accessibility": {
          "metric_name": "accessibility_score",
          "group1_name": "sequential",
          "group2_name": "parallel",
          "group1_mean": 12.96,
          "group2_mean": 11.74,
          "mean_difference": -1.2200000000000006,
          "relative_improvement": -9.413580246913584,
          "p_value": 8.265121237618308e-06,
          "statistic": 1838.5,
          "effect_size": -0.9746801026963461,
          "is_significant": true,
          "test_used": "mann-whitney-u"
        }
      }
    },
    "dashboard": {
      "sequential": {
        "response_time": {
          "mean": 64.42896061142285,
          "median": 64.32883965969086,
          "std": 7.042250289451432,
          "min": 54.305504322052,
          "max": 84.35200881958008,
          "q1": 59.31589317321777,
          "q3": 69.33102685213089,
          "iqr": 10.015133678913116,
          "ci_lower": 62.38410428370926,
          "ci_upper": 66.47381693913644,
          "outliers": [
            84.35930180549622,
            89.35412335395813
          ],
          "n_samples": 48,
          "success_rate": 0.96
        },
        "overall_score": {
          "mean": 51.94,
          "median": 52.0,
          "std": 1.1501552690211625,
          "min": 45.0,
          "max": 56.0,
          "q1": 52.0,
          "q3": 52.0,
          "iqr": 0.0,
          "ci_lower": 51.61312948921234,
          "ci_upper": 52.266870510787655,
          "outliers": [
            45.0,
            56.0
          ],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "code_quality": {
          "mean": 15.98,
          "median": 16.0,
          "std": 0.14142135623730948,
          "min": 15.0,
          "max": 16.0,
          "q1": 16.0,
          "q3": 16.0,
          "iqr": 0.0,
          "ci_lower": 15.939808495257415,
          "ci_upper": 16.020191504742584,
          "outliers": [
            15.0
          ],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "architecture": {
          "mean": 11.96,
          "median": 12.0,
          "std": 0.28284271247461895,
          "min": 10.0,
          "max": 12.0,
          "q1": 12.0,
          "q3": 12.0,
          "iqr": 0.0,
          "ci_lower": 11.879616990514831,
          "ci_upper": 12.04038300948517,
          "outliers": [
            10.0
          ],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "performance": {
          "mean": 9.96,
          "median": 10.0,
          "std": 0.28284271247461895,
          "min": 8.0,
          "max": 10.0,
          "q1": 10.0,
          "q3": 10.0,
          "iqr": 0.0,
          "ci_lower": 9.879616990514831,
          "ci_upper": 10.04038300948517,
          "outliers": [
            8.0
          ],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "accessibility": {
          "mean": 14.04,
          "median": 14.0,
          "std": 0.6375975315548971,
          "min": 12.0,
          "max": 18.0,
          "q1": 14.0,
          "q3": 14.0,
          "iqr": 0.0,
          "ci_lower": 13.858796786460259,
          "ci_upper": 14.22120321353974,
          "outliers": [
            12.0,
            18.0
          ],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "success_rate": 1.0,
        "error_rate": 0.0
      },
      "parallel": {
        "response_time": {
          "mean": 83.18544041856806,
          "median": 84.34543240070343,
          "std": 10.760566926102147,
          "min": 64.32415866851807,
          "max": 109.39265632629395,
          "q1": 75.60438644886017,
          "q3": 89.37091302871704,
          "iqr": 13.766526579856873,
          "ci_lower": 80.02601960904217,
          "ci_upper": 86.34486122809396,
          "outliers": [
            239.55916905403137,
            334.6965956687927,
            610.0400266647339
          ],
          "n_samples": 47,
          "success_rate": 0.94
        },
        "overall_score": {
          "mean": 53.64,
          "median": 53.0,
          "std": 5.494932730642452,
          "min": 41.0,
          "max": 65.0,
          "q1": 52.0,
          "q3": 57.0,
          "iqr": 5.0,
          "ci_lower": 52.07835739679085,
          "ci_upper": 55.20164260320915,
          "outliers": [
            44.0,
            44.0,
            41.0,
            44.0,
            65.0,
            65.0,
            44.0,
            44.0
          ],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "code_quality": {
          "mean": 13.82,
          "median": 14.0,
          "std": 1.7224804136797038,
          "min": 10.0,
          "max": 18.0,
          "q1": 12.0,
          "q3": 15.0,
          "iqr": 3.0,
          "ci_lower": 13.330476482779245,
          "ci_upper": 14.309523517220756,
          "outliers": [],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "architecture": {
          "mean": 12.22,
          "median": 12.0,
          "std": 1.876710104498436,
          "min": 8.0,
          "max": 16.0,
          "q1": 10.25,
          "q3": 14.0,
          "iqr": 3.75,
          "ci_lower": 11.686644889624482,
          "ci_upper": 12.75335511037552,
          "outliers": [],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "performance": {
          "mean": 12.68,
          "median": 12.0,
          "std": 2.622041578773366,
          "min": 8.0,
          "max": 17.0,
          "q1": 11.0,
          "q3": 14.0,
          "iqr": 3.0,
          "ci_lower": 11.93482402833355,
          "ci_upper": 13.42517597166645,
          "outliers": [],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "accessibility": {
          "mean": 14.92,
          "median": 16.0,
          "std": 2.1173722644170176,
          "min": 11.0,
          "max": 18.0,
          "q1": 14.0,
          "q3": 16.0,
          "iqr": 2.0,
          "ci_lower": 14.31824946053881,
          "ci_upper": 15.52175053946119,
          "outliers": [],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "success_rate": 1.0,
        "error_rate": 0.0
      },
      "comparison": {
        "response_time": {
          "metric_name": "response_time",
          "group1_name": "sequential",
          "group2_name": "parallel",
          "group1_mean": 64.42896061142285,
          "group2_mean": 83.18544041856806,
          "mean_difference": 18.75647980714521,
          "relative_improvement": 29.111877064519653,
          "p_value": 1.3344133640288835e-13,
          "statistic": 133.0,
          "effect_size": 2.0626273925478475,
          "is_significant": true,
          "test_used": "mann-whitney-u"
        },
        "overall_score": {
          "metric_name": "overall_score",
          "group1_name": "sequential",
          "group2_name": "parallel",
          "group1_mean": 51.94,
          "group2_mean": 53.64,
          "mean_difference": 1.7000000000000028,
          "relative_improvement": 3.2730073161340063,
          "p_value": 0.00010810649820893587,
          "statistic": 732.0,
          "effect_size": 0.42824322315886,
          "is_significant": true,
          "test_used": "mann-whitney-u"
        },
        "code_quality": {
          "metric_name": "code_quality_score",
          "group1_name": "sequential",
          "group2_name": "parallel",
          "group1_mean": 15.98,
          "group2_mean": 13.82,
          "mean_difference": -2.16,
          "relative_improvement": -13.516896120150188,
          "p_value": 6.546544271465379e-13,
          "statistic": 2168.0,
          "effect_size": -1.7674843968745135,
          "is_significant": true,
          "test_used": "mann-whitney-u"
        },
        "architecture": {
          "metric_name": "architecture_score",
          "group1_name": "sequential",
          "group2_name": "parallel",
          "group1_mean": 11.96,
          "group2_mean": 12.22,
          "mean_difference": 0.2599999999999998,
          "relative_improvement": 2.173913043478259,
          "p_value": 0.5889604249134583,
          "statistic": 1183.0,
          "effect_size": 0.19373765153009503,
          "is_significant": false,
          "test_used": "mann-whitney-u"
        },
        "performance": {
          "metric_name": "performance_score",
          "group1_name": "sequential",
          "group2_name": "parallel",
          "group1_mean": 9.96,
          "group2_mean": 12.68,
          "mean_difference": 2.719999999999999,
          "relative_improvement": 27.30923694779115,
          "p_value": 5.7430101039248236e-11,
          "statistic": 370.5,
          "effect_size": 1.458586363025431,
          "is_significant": true,
          "test_used": "mann-whitney-u"
        },
        "accessibility": {
          "metric_name": "accessibility_score",
          "group1_name": "sequential",
          "group2_name": "parallel",
          "group1_mean": 14.04,
          "group2_mean": 14.92,
          "mean_difference": 0.8800000000000008,
          "relative_improvement": 6.267806267806273,
          "p_value": 8.708366160401064e-05,
          "statistic": 728.5,
          "effect_size": 0.562797686022536,
          "is_significant": true,
          "test_used": "mann-whitney-u"
        }
      }
    },
    "registration_page": {
      "sequential": {
        "response_time": {
          "mean": 56.13127998872237,
          "median": 54.316311717033386,
          "std": 2.8742779077577767,
          "min": 49.30353546142578,
          "max": 64.31980562210083,
          "q1": 54.31077826023102,
          "q3": 59.317080199718475,
          "iqr": 5.006301939487457,
          "ci_lower": 55.25741963348351,
          "ci_upper": 57.00514034396123,
          "outliers": [
            74.34315037727356,
            69.33042216300964,
            79.34186506271362,
            74.33110284805298,
            69.3246488571167,
            79.33941555023193
          ],
          "n_samples": 44,
          "success_rate": 0.88
        },
        "overall_score": {
          "mean": 67.92,
          "median": 68.0,
          "std": 0.3958973274443148,
          "min": 66.0,
          "max": 68.0,
          "q1": 68.0,
          "q3": 68.0,
          "iqr": 0.0,
          "ci_lower": 67.80748722444116,
          "ci_upper": 68.03251277555884,
          "outliers": [
            66.0,
            66.0
          ],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "code_quality": {
          "mean": 20.0,
          "median": 20.0,
          "std": 0.0,
          "min": 20.0,
          "max": 20.0,
          "q1": 20.0,
          "q3": 20.0,
          "iqr": 0.0,
          "ci_lower": NaN,
          "ci_upper": NaN,
          "outliers": [],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "architecture": {
          "mean": 15.0,
          "median": 15.0,
          "std": 0.0,
          "min": 15.0,
          "max": 15.0,
          "q1": 15.0,
          "q3": 15.0,
          "iqr": 0.0,
          "ci_lower": NaN,
          "ci_upper": NaN,
          "outliers": [],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "performance": {
          "mean": 12.0,
          "median": 12.0,
          "std": 0.0,
          "min": 12.0,
          "max": 12.0,
          "q1": 12.0,
          "q3": 12.0,
          "iqr": 0.0,
          "ci_lower": NaN,
          "ci_upper": NaN,
          "outliers": [],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "accessibility": {
          "mean": 20.92,
          "median": 21.0,
          "std": 0.3958973274443148,
          "min": 19.0,
          "max": 21.0,
          "q1": 21.0,
          "q3": 21.0,
          "iqr": 0.0,
          "ci_lower": 20.807487224441164,
          "ci_upper": 21.03251277555884,
          "outliers": [
            19.0,
            19.0
          ],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "success_rate": 1.0,
        "error_rate": 0.0
      },
      "parallel": {
        "response_time": {
          "mean": 52.145490651906925,
          "median": 49.320361971855164,
          "std": 7.917765565887191,
          "min": 39.88669681549072,
          "max": 74.34930920600891,
          "q1": 49.30187940597534,
          "q3": 59.326863050460815,
          "iqr": 10.024983644485474,
          "ci_lower": 49.70876207923248,
          "ci_upper": 54.58221922458137,
          "outliers": [
            229.54324007034302,
            99.37486815452576,
            89.37058186531067,
            79.34290361404419,
            229.567636013031,
            114.39539313316345,
            144.42822790145874
          ],
          "n_samples": 43,
          "success_rate": 0.86
        },
        "overall_score": {
          "mean": 68.44,
          "median": 68.0,
          "std": 3.855343495641829,
          "min": 59.0,
          "max": 75.0,
          "q1": 67.0,
          "q3": 72.0,
          "iqr": 5.0,
          "ci_lower": 67.34432350168268,
          "ci_upper": 69.53567649831732,
          "outliers": [
            59.0,
            59.0,
            59.0
          ],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "code_quality": {
          "mean": 17.82,
          "median": 18.0,
          "std": 1.848220324351764,
          "min": 12.0,
          "max": 20.0,
          "q1": 18.0,
          "q3": 19.0,
          "iqr": 1.0,
          "ci_lower": 17.29474159555593,
          "ci_upper": 18.34525840444407,
          "outliers": [
            16.0,
            12.0,
            12.0,
            16.0,
            16.0,
            16.0,
            14.0,
            12.0
          ],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "architecture": {
          "mean": 15.16,
          "median": 15.0,
          "std": 0.9971387638065798,
          "min": 12.0,
          "max": 18.0,
          "q1": 15.0,
          "q3": 16.0,
          "iqr": 1.0,
          "ci_lower": 14.876616298833271,
          "ci_upper": 15.443383701166729,
          "outliers": [
            18.0,
            12.0
          ],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "performance": {
          "mean": 16.58,
          "median": 16.0,
          "std": 1.4155117341045798,
          "min": 12.0,
          "max": 19.0,
          "q1": 16.0,
          "q3": 17.0,
          "iqr": 1.0,
          "ci_lower": 16.17771601625017,
          "ci_upper": 16.982283983749827,
          "outliers": [
            14.0,
            14.0,
            12.0,
            19.0,
            19.0,
            19.0,
            19.0,
            19.0,
            19.0
          ],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "accessibility": {
          "mean": 18.88,
          "median": 19.0,
          "std": 1.0999072317097234,
          "min": 16.0,
          "max": 21.0,
          "q1": 18.0,
          "q3": 20.0,
          "iqr": 2.0,
          "ci_lower": 18.567409823411083,
          "ci_upper": 19.192590176588915,
          "outliers": [],
          "n_samples": 50,
          "success_rate": 1.0
        },
        "success_rate": 1.0,
        "error_rate": 0.0
      },
      "comparison": {
        "response_time": {
          "metric_name": "response_time",
          "group1_name": "sequential",
          "group2_name": "parallel",
          "group1_mean": 56.13127998872237,
          "group2_mean": 52.145490651906925,
          "mean_difference": -3.9857893368154436,
          "relative_improvement": -7.100834574975395,
          "p_value": 0.0009297302082296512,
          "statistic": 1336.5,
          "effect_size": -0.6691839766038575,
          "is_significant": true,
          "test_used": "mann-whitney-u"
        },
        "overall_score": {
          "metric_name": "overall_score",
          "group1_name": "sequential",
          "group2_name": "parallel",
          "group1_mean": 67.92,
          "group2_mean": 68.44,
          "mean_difference": 0.519999999999996,
          "relative_improvement": 0.7656065959952827,
          "p_value": 0.0802802378077488,
          "statistic": 1025.0,
          "effect_size": 0.18974811679193657,
          "is_significant": false,
          "test_used": "mann-whitney-u"
        },
        "code_quality": {
          "metric_name": "code_quality_score",
          "group1_name": "sequential",
          "group2_name": "parallel",
          "group1_mean": 20.0,
          "group2_mean": 17.82,
          "mean_difference": -2.1799999999999997,
          "relative_improvement": -10.899999999999999,
          "p_value": 2.6362679854995727e-18,
          "statistic": 2400.0,
          "effect_size": -1.668083358543662,
          "is_significant": true,
          "test_used": "mann-whitney-u"
        },
        "architecture": {
          "metric_name": "architecture_score",
          "group1_name": "sequential",
          "group2_name": "parallel",
          "group1_mean": 15.0,
          "group2_mean": 15.16,
          "mean_difference": 0.16000000000000014,
          "relative_improvement": 1.0666666666666678,
          "p_value": 0.14025715676311384,
          "statistic": 1075.0,
          "effect_size": 0.22692345157247037,
          "is_significant": false,
          "test_used": "mann-whitney-u"
        },
        "performance": {
          "metric_name": "performance_score",
          "group1_name": "sequential",
          "group2_name": "parallel",
          "group1_mean": 12.0,
          "group2_mean": 16.58,
          "mean_difference": 4.579999999999998,
          "relative_improvement": 38.16666666666666,
          "p_value": 7.006279401614699e-20,
          "statistic": 25.0,
          "effect_size": 4.5757996628449265,
          "is_significant": true,
          "test_used": "mann-whitney-u"
        },
        "accessibility": {
          "metric_name": "accessibility_score",
          "group1_name": "sequential",
          "group2_name": "parallel",
          "group1_mean": 20.92,
          "group2_mean": 18.88,
          "mean_difference": -2.0400000000000027,
          "relative_improvement": -9.751434034416837,
          "p_value": 1.0795523821533937e-17,
          "statistic": 2402.0,
          "effect_size": -2.4679450334584154,
          "is_significant": true,
          "test_used": "mann-whitney-u"
        }
      }
    }
  },
  "anomalies": [
    {
      "prompt_id": "registration_page",
      "prompt_name": "User Registration Page",
      "mode": "parallel",
      "run_number": 10,
      "timestamp": "2025-10-13T19:12:39.947416",
      "response_time": 229.54324007034302,
      "total_tokens": null,
      "response_content": "import { useState, useCallback } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { motion } from 'framer-motion';\nimport { Mail, Lock, User, Eye, EyeOff, CheckCircle2, AlertCircle } from 'lucide-react';\n\ninterface FormData {\n  fullName: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\ninterface FormErrors {\n  fullName?: string;\n  email?: string;\n  password?: string;\n  confirmPassword?: string;\n}\n\nexport default function RegistrationPage() {\n  // Password strength calculation\n  const calculatePasswordStrength = (password: string): { strength: number; label: string; color: string } => {\n    if (!password) return { strength: 0, label: '', color: '' };\n    \n    let strength = 0;\n    \n    // Length check\n    if (password.length >= 8) strength += 25;\n    if (password.length >= 12) strength += 10;\n    \n    // Character variety checks\n    if (/[a-z]/.test(password)) strength += 15;\n    if (/[A-Z]/.test(password)) strength += 15;\n    if (/[0-9]/.test(password)) strength += 15;\n    if (/[^a-zA-Z0-9]/.test(password)) strength += 20;\n    \n    // Determine label and color\n    if (strength < 40) return { strength, label: 'Weak', color: 'bg-red-500' };\n    if (strength < 70) return { strength, label: 'Medium', color: 'bg-yellow-500' };\n    return { strength, label: 'Strong', color: 'bg-green-500' };\n  };\n\n  const passwordStrength = calculatePasswordStrength(formData.password);\n  const [formData, setFormData] = useState<FormData>({\n    fullName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n\n  const [errors, setErrors] = useState<FormErrors>({});\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n\n  const handleInputChange = useCallback((field: keyof FormData, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    setErrors(prev => ({ ...prev, [field]: undefined }));\n  }, []);\n\n  const togglePasswordVisibility = useCallback(() => {\n    setShowPassword(prev => !prev);\n  }, []);\n\n  const toggleConfirmPasswordVisibility = useCallback(() => {\n    setShowConfirmPassword(prev => !prev);\n  }, []);\n\n  const handleSubmit = useCallback((e: React.FormEvent) => {\n    e.preventDefault();\n        // Validate form fields\n    const newErrors: FormErrors = {};\n    \n    // Validate full name\n    if (!formData.fullName.trim()) {\n      newErrors.fullName = 'Full name is required';\n    } else if (formData.fullName.trim().length < 2) {\n      newErrors.fullName = 'Full name must be at least 2 characters';\n    }\n    \n    // Validate email\n    if (!formData.email.trim()) {\n      newErrors.email = 'Email is required';\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\n      newErrors.email = 'Please enter a valid email address';\n    }\n    \n    // Validate password\n    if (!formData.password) {\n      newErrors.password = 'Password is required';\n    } else if (formData.password.length < 8) {\n      newErrors.password = 'Password must be at least 8 characters';\n    } else if (!/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/.test(formData.password)) {\n      newErrors.password = 'Password must contain uppercase, lowercase, and number';\n    }\n    \n    // Validate confirm password\n    if (!formData.confirmPassword) {\n      newErrors.confirmPassword = 'Please confirm your password';\n    } else if (formData.password !== formData.confirmPassword) {\n      newErrors.confirmPassword = 'Passwords do not match';\n    }\n    \n    // If there are errors, set them and return\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n    \n    // Simulate form submission\n    setIsSubmitting(true);\n    setErrors({});\n    \n    setTimeout(() => {\n      setIsSubmitting(false);\n      setIsSuccess(true);\n      \n      // Reset form after success\n      setTimeout(() => {\n        setFormData({\n          fullName: '',\n          email: '',\n          password: '',\n          confirmPassword: ''\n        });\n        setIsSuccess(false);\n      }, 3000);\n    }, 2000);\n  }, [formData]);\n\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center p-4 bg-gradient-to-br from-purple-600 via-pink-500 to-orange-400 relative overflow-hidden\">\n            {/* Animated Background Orbs */}\n      <motion.div\n        className=\"absolute top-20 left-20 w-72 h-72 bg-purple-400 rounded-full mix-blend-multiply filter blur-xl opacity-70\"\n        animate={{\n          x: [0, 100, 0],\n          y: [0, -100, 0],\n          scale: [1, 1.2, 1],\n        }}\n        transition={{\n          duration: 8,\n          repeat: Infinity,\n          ease: \"easeInOut\"\n        }}\n      />\n      <motion.div\n        className=\"absolute top-40 right-20 w-72 h-72 bg-pink-400 rounded-full mix-blend-multiply filter blur-xl opacity-70\"\n        animate={{\n          x: [0, -100, 0],\n          y: [0, 100, 0],\n          scale: [1, 1.3, 1],\n        }}\n        transition={{\n          duration: 10,\n          repeat: Infinity,\n          ease: \"easeInOut\"\n        }}\n      />\n      <motion.div\n        className=\"absolute bottom-20 left-1/2 w-72 h-72 bg-orange-400 rounded-full mix-blend-multiply filter blur-xl opacity-70\"\n        animate={{\n          x: [0, 100, -100, 0],\n          y: [0, -50, 50, 0],\n          scale: [1, 1.1, 1.2, 1],\n        }}\n        transition={{\n          duration: 12,\n          repeat: Infinity,\n          ease: \"easeInOut\"\n        }}\n      />\n      <motion.div\n        className=\"absolute bottom-40 right-1/3 w-72 h-72 bg-yellow-300 rounded-full mix-blend-multiply filter blur-xl opacity-60\"\n        animate={{\n          x: [0, -80, 80, 0],\n          y: [0, 80, -80, 0],\n          scale: [1, 1.15, 1],\n        }}\n        transition={{\n          duration: 9,\n          repeat: Infinity,\n          ease: \"easeInOut\"\n        }}\n      />\n\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.6 }}\n        className=\"w-full max-w-md relative z-10\"\n      >\n        <Card className=\"backdrop-blur-sm bg-white/95 shadow-2xl border-0\">\n          <CardHeader className=\"space-y-1 text-center\">\n            <motion.div\n              initial={{ scale: 0 }}\n              animate={{ scale: 1 }}\n              transition={{ delay: 0.2, type: \"spring\", stiffness: 200 }}\n              className=\"mx-auto w-16 h-16 bg-gradient-to-br from-purple-600 to-pink-500 rounded-full flex items-center justify-center mb-4\"\n            >\n              <User className=\"w-8 h-8 text-white\" />\n            </motion.div>\n            <CardTitle className=\"text-3xl font-bold bg-gradient-to-r from-purple-600 to-pink-500 bg-clip-text text-transparent\">\n              Create Account\n            </CardTitle>\n            <CardDescription className=\"text-base\">\n              Join us today and start your journey\n            </CardDescription>\n          </CardHeader>\n\n          <CardContent>\n            {isSuccess ? (\n              <motion.div\n                initial={{ opacity: 0, scale: 0.8 }}\n                animate={{ opacity: 1, scale: 1 }}\n                className=\"text-center py-8\"\n              >\n                <motion.div\n                  initial={{ scale: 0 }}\n                  animate={{ scale: 1 }}\n                  transition={{ type: \"spring\", stiffness: 200, damping: 15 }}\n                  className=\"mb-6\"\n                >\n                  <CheckCircle2 className=\"w-20 h-20 text-green-500 mx-auto\" />\n                </motion.div>\n                <motion.h3\n                  initial={{ opacity: 0, y: 10 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ delay: 0.2 }}\n                  className=\"text-2xl font-bold text-gray-800 mb-2\"\n                >\n                  Welcome Aboard!\n                </motion.h3>\n                <motion.p\n                  initial={{ opacity: 0, y: 10 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ delay: 0.3 }}\n                  className=\"text-gray-600\"\n                >\n                  Your account has been created successfully. We're excited to have you with us!\n                </motion.p>\n              </motion.div>\n            ) : (\n              <form onSubmit={handleSubmit} className=\"space-y-4\">\n                <motion.div\n                  initial={{ opacity: 0, x: -20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ delay: 0.3 }}\n                  className=\"space-y-2\"\n                >\n                  <Label htmlFor=\"fullName\" className=\"text-sm font-medium\">\n                    Full Name\n                  </Label>\n                  <div className=\"relative\">\n                    <User className=\"absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-400\" />\n                    <Input\n                      id=\"fullName\"\n                      type=\"text\"\n                      placeholder=\"John Doe\"\n                      value={formData.fullName}\n                      onChange={(e) => handleInputChange('fullName', e.target.value)}\n                      className=\"pl-10\"\n                    />\n                  </div>\n                  {errors.fullName && (\n                    <motion.div\n                      initial={{ opacity: 0, y: -10 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      className=\"flex items-center gap-2 text-red-500 text-sm mt-1\"\n                    >\n                      <AlertCircle className=\"w-4 h-4\" />\n                      <span>{errors.fullName}</span>\n                    </motion.div>\n                  )}\n                </motion.div>\n\n                <motion.div\n                  initial={{ opacity: 0, x: -20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ delay: 0.4 }}\n                  className=\"space-y-2\"\n                >\n                  <Label htmlFor=\"email\" className=\"text-sm font-medium\">\n                    Email Address\n                  </Label>\n                  <div className=\"relative\">\n                    <Mail className=\"absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-400\" />\n                    <Input\n                      id=\"email\"\n                      type=\"email\"\n                      placeholder=\"john@example.com\"\n                      value={formData.email}\n                      onChange={(e) => handleInputChange('email', e.target.value)}\n                      className=\"pl-10\"\n                    />\n                  </div>\n                  {errors.email && (\n                    <motion.div\n                      initial={{ opacity: 0, y: -10 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      className=\"flex items-center gap-2 text-red-500 text-sm\"\n                    >\n                      <AlertCircle className=\"w-4 h-4\" />\n                      <span>{errors.email}</span>\n                    </motion.div>\n                  )}\n                </motion.div>\n\n                <motion.div\n                  initial={{ opacity: 0, x: -20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ delay: 0.5 }}\n                  className=\"space-y-2\"\n                >\n                  <Label htmlFor=\"password\" className=\"text-sm font-medium\">\n                    Password\n                  </Label>\n                  <div className=\"relative\">\n                    <Lock className=\"absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-400\" />\n                    <Input\n                      id=\"password\"\n                      type={showPassword ? 'text' : 'password'}\n                      placeholder=\"\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\"\n                      value={formData.password}\n                      onChange={(e) => handleInputChange('password', e.target.value)}\n                      className=\"pl-10 pr-10\"\n                    />\n                    <button\n                      type=\"button\"\n                      onClick={togglePasswordVisibility}\n                      className=\"absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-600\"\n                    >\n                      {showPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n                    </button>\n                  </div>\n                  {errors.password && (\n                    <motion.div\n                      initial={{ opacity: 0, y: -10 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      exit={{ opacity: 0 }}\n                      className=\"flex items-center gap-2 text-red-500 text-sm\"\n                    >\n                      <AlertCircle className=\"w-4 h-4\" />\n                      <span>{errors.password}</span>\n                    </motion.div>\n                  )}\n                                    {errors.password && (\n                    <motion.div\n                      initial={{ opacity: 0, y: -10 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      exit={{ opacity: 0 }}\n                      className=\"flex items-center gap-2 text-red-500 text-sm\"\n                    >\n                      <AlertCircle className=\"w-4 h-4\" />\n                      <span>{errors.password}</span>\n                    </motion.div>\n                  )}\n                                    {formData.password && (\n                    <motion.div\n                      initial={{ opacity: 0, y: -10 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      className=\"space-y-2\"\n                    >\n                      <div className=\"flex gap-1\">\n                        {[1, 2, 3, 4].map((bar) => (\n                          <div\n                            key={bar}\n                            className=\"h-1 flex-1 rounded-full bg-gray-200 overflow-hidden\"\n                          >\n                            <motion.div\n                              initial={{ width: 0 }}\n                              animate={{\n                                width: passwordStrength.strength >= bar * 25 ? '100%' : '0%'\n                              }}\n                              transition={{ duration: 0.3 }}\n                              className={`h-full ${passwordStrength.color}`}\n                            />\n                          </div>\n                        ))}\n                      </div>\n                      <p className=\"text-xs text-gray-600\">\n                        Password strength: <span className={`font-medium ${\n                          passwordStrength.label === 'Weak' ? 'text-red-500' :\n                          passwordStrength.label === 'Medium' ? 'text-yellow-500' :\n                          'text-green-500'\n                        }`}>{passwordStrength.label}</span>\n                      </p>\n                    </motion.div>\n                  )}\n                </motion.div>\n\n                <motion.div\n                  initial={{ opacity: 0, x: -20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ delay: 0.6 }}\n                  className=\"space-y-2\"\n                >\n                  <Label htmlFor=\"confirmPassword\" className=\"text-sm font-medium\">\n                    Confirm Password\n                  </Label>\n                  <div className=\"relative\">\n                    <Lock className=\"absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-400\" />\n                    <Input\n                      id=\"confirmPassword\"\n                      type={showConfirmPassword ? 'text' : 'password'}\n                      placeholder=\"\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\"\n                      value={formData.confirmPassword}\n                      onChange={(e) => handleInputChange('confirmPassword', e.target.value)}\n                      className=\"pl-10 pr-10\"\n                    />\n                    <button\n                      type=\"button\"\n                      onClick={toggleConfirmPasswordVisibility}\n                      className=\"absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-600\"\n                    >\n                      {showConfirmPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n                    </button>\n                  </div>\n                  {errors.confirmPassword && (\n                    <motion.div\n                      initial={{ opacity: 0, y: -10 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      exit={{ opacity: 0 }}\n                      className=\"flex items-center gap-1 text-red-500 text-sm\"\n                    >\n                      <AlertCircle className=\"w-4 h-4\" />\n                      <span>{errors.confirmPassword}</span>\n                    </motion.div>\n                  )}\n                </motion.div>\n\n                <motion.div\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ delay: 0.7 }}\n                >\n                  <Button\n                    type=\"submit\"\n                    disabled={isSubmitting}\n                    className=\"w-full bg-gradient-to-r from-purple-600 to-pink-500 hover:from-purple-700 hover:to-pink-600 text-white font-semibold py-6 text-base\"\n                  >\n                    {isSubmitting ? (\n                      <motion.div\n                        animate={{ rotate: 360 }}\n                        transition={{ duration: 1, repeat: Infinity, ease: \"linear\" }}\n                        className=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full mx-auto\"\n                      />\n                    ) : (\n                      \"Create Account\"\n                    )}\n                  </Button>\n                </motion.div>\n              </form>\n            )}\n          </CardContent>\n\n          <CardFooter className=\"flex flex-col space-y-4\">\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ delay: 0.8 }}\n              className=\"text-center text-sm text-gray-600\"\n            >\n              Already have an account?{' '}\n              <a href=\"#\" className=\"text-purple-600 hover:text-purple-700 font-semibold\">\n                Sign in\n              </a>\n            </motion.div>\n          </CardFooter>\n        </Card>\n      </motion.div>\n    </div>\n  );\n}",
      "error": null,
      "overall_score": 66,
      "code_quality_score": 16,
      "architecture_score": 14,
      "performance_score": 17,
      "accessibility_score": 19,
      "metadata": {
        "document_id": "eval_room_01fa166f044b",
        "prompt_category": "simple",
        "prompt_complexity": 3.0
      }
    },
    {
      "prompt_id": "pomodoro_timer",
      "prompt_name": "Pomodoro Timer",
      "mode": "parallel",
      "run_number": 46,
      "timestamp": "2025-10-13T22:23:49.128371",
      "response_time": 219.5410668849945,
      "total_tokens": null,
      "response_content": "import { useState, useCallback, useEffect, useRef } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Play, Pause, RotateCcw, Settings } from 'lucide-react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport confetti from 'canvas-confetti';\n\ninterface TimerMode {\n  type: 'work' | 'shortBreak' | 'longBreak';\n  duration: number;\n  label: string;\n}\n\ninterface TimerSettings {\n  workDuration: number;\n  shortBreakDuration: number;\n  longBreakDuration: number;\n  longBreakInterval: number;\n}\n\ninterface Particle {\n  id: number;\n  x: number;\n  y: number;\n  size: number;\n  duration: number;\n  delay: number;\n}\ninterface ConfettiParticle {\n  id: number;\n  x: number;\n  y: number;\n  rotation: number;\n  scale: number;\n  color: string;\n  velocity: { x: number; y: number };\n}\n\nconst defaultSettings: TimerSettings = {\n  workDuration: 25,\n  shortBreakDuration: 5,\n  longBreakDuration: 15,\n  longBreakInterval: 4\n};\n\nconst timerModes: Record<string, { colors: string; gradient: string }> = {\n  work: {\n    colors: 'from-rose-500 via-pink-500 to-purple-500',\n    gradient: 'bg-gradient-to-br from-rose-500/20 via-pink-500/20 to-purple-500/20'\n  },\n  shortBreak: {\n    colors: 'from-cyan-500 via-blue-500 to-indigo-500',\n    gradient: 'bg-gradient-to-br from-cyan-500/20 via-blue-500/20 to-indigo-500/20'\n  },\n  longBreak: {\n    colors: 'from-emerald-500 via-teal-500 to-cyan-500',\n    gradient: 'bg-gradient-to-br from-emerald-500/20 via-teal-500/20 to-cyan-500/20'\n  }\n};\n\nexport default function PomodoroTimer() {\n  const [settings, setSettings] = useState<TimerSettings>(defaultSettings);\n  const [currentMode, setCurrentMode] = useState<'work' | 'shortBreak' | 'longBreak'>('work');\n  const [timeLeft, setTimeLeft] = useState(settings.workDuration * 60);\n  const [isRunning, setIsRunning] = useState(false);\n  const [completedPomodoros, setCompletedPomodoros] = useState(0);\n  const [showSettings, setShowSettings] = useState(false);\n  const [showCompletion, setShowCompletion] = useState(false);\n  const [particles, setParticles] = useState<Particle[]>([]);\n  \n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n  const audioRef = useRef<HTMLAudioElement | null>(null);\n\n  const totalTime = currentMode === 'work' \n    ? settings.workDuration * 60 \n    : currentMode === 'shortBreak'\n    ? settings.shortBreakDuration * 60\n    : settings.longBreakDuration * 60;\n\n  const progress = ((totalTime - timeLeft) / totalTime) * 100;\n\n  useEffect(() => {\n    const generatedParticles: Particle[] = Array.from({ length: 50 }, (_, i) => ({\n      id: i,\n      x: Math.random() * 100,\n      y: Math.random() * 100,\n      size: Math.random() * 4 + 2,\n      duration: Math.random() * 20 + 10,\n      delay: Math.random() * 5\n    }));\n    setParticles(generatedParticles);\n  }, []);\n  const triggerCompletion = useCallback(() => {\n    setShowCompletion(true);\n    \n    // Play completion sound\n    if (audioRef.current) {\n      audioRef.current.play().catch(() => {\n        // Fallback if audio doesn't play\n      });\n    }\n    \n    // Trigger confetti burst\n    const duration = 3000;\n    const animationEnd = Date.now() + duration;\n    const defaults = { startVelocity: 30, spread: 360, ticks: 60, zIndex: 0 };\n\n    const randomInRange = (min: number, max: number) => {\n      return Math.random() * (max - min) + min;\n    };\n\n    const interval = setInterval(() => {\n      const timeLeft = animationEnd - Date.now();\n\n      if (timeLeft <= 0) {\n        clearInterval(interval);\n        setShowCompletion(false);\n        return;\n      }\n\n      const particleCount = 50 * (timeLeft / duration);\n      \n      confetti({\n        ...defaults,\n        particleCount,\n        origin: { x: randomInRange(0.1, 0.3), y: Math.random() - 0.2 }\n      });\n      confetti({\n        ...defaults,\n        particleCount,\n        origin: { x: randomInRange(0.7, 0.9), y: Math.random() - 0.2 }\n      });\n    }, 250);\n  }, []);\n\n  useEffect(() => {\n    if (isRunning && timeLeft > 0) {\n      intervalRef.current = setInterval(() => {\n        setTimeLeft((prev) => {\n          if (prev <= 1) {\n            setIsRunning(false);\n            if (intervalRef.current) {\n              clearInterval(intervalRef.current);\n              intervalRef.current = null;\n            }\n            \n            // Trigger completion animation\n            triggerCompletion();\n            \n            // Update pomodoro count and switch mode\n            if (currentMode === 'work') {\n              const newCount = completedPomodoros + 1;\n              setCompletedPomodoros(newCount);\n              \n              // Switch to appropriate break\n              if (newCount % settings.longBreakInterval === 0) {\n                setCurrentMode('longBreak');\n                setTimeLeft(settings.longBreakDuration * 60);\n              } else {\n                setCurrentMode('shortBreak');\n                setTimeLeft(settings.shortBreakDuration * 60);\n              }\n            } else {\n              // Break finished, return to work\n              setCurrentMode('work');\n              setTimeLeft(settings.workDuration * 60);\n            }\n            \n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } else if (!isRunning && intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n        intervalRef.current = null;\n      }\n    };\n  }, [isRunning, timeLeft, currentMode, completedPomodoros, settings, triggerCompletion]);\n\n  useEffect(() => {\n    if (isRunning && timeLeft > 0) {\n      intervalRef.current = setInterval(() => {\n        setTimeLeft(prev => {\n          if (prev <= 1) {\n            // Timer completed\n            setIsRunning(false);\n            setShowCompletion(true);\n            \n            // Play completion sound\n            if (audioRef.current) {\n              audioRef.current.play().catch(err => console.log('Audio play failed:', err));\n            }\n            \n            // Auto-switch modes\n            if (currentMode === 'work') {\n              const newCompletedPomodoros = completedPomodoros + 1;\n              setCompletedPomodoros(newCompletedPomodoros);\n              \n              // Determine next break type\n              if (newCompletedPomodoros % settings.longBreakInterval === 0) {\n                setCurrentMode('longBreak');\n                setTimeLeft(settings.longBreakDuration * 60);\n              } else {\n                setCurrentMode('shortBreak');\n                setTimeLeft(settings.shortBreakDuration * 60);\n              }\n            } else {\n              // Break completed, switch to work\n              setCurrentMode('work');\n              setTimeLeft(settings.workDuration * 60);\n            }\n            \n            // Hide completion animation after 3 seconds\n            setTimeout(() => setShowCompletion(false), 3000);\n            \n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } else {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n        intervalRef.current = null;\n      }\n    }\n    \n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [isRunning, timeLeft, currentMode, completedPomodoros, settings]);\n\n  const handlePlayPause = useCallback(() => {\n    setIsRunning(!isRunning);\n  }, [isRunning]);\n\n  const handleReset = useCallback(() => {\n    setIsRunning(false);\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n    const duration = currentMode === 'work' \n      ? settings.workDuration * 60 \n      : currentMode === 'shortBreak'\n      ? settings.shortBreakDuration * 60\n      : settings.longBreakDuration * 60;\n    setTimeLeft(duration);\n  }, [currentMode, settings]);\n\n  const handleModeSwitch = useCallback((mode: 'work' | 'shortBreak' | 'longBreak') => {\n    setCurrentMode(mode);\n    setIsRunning(false);\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n    \n    const newDuration = mode === 'work' \n      ? settings.workDuration * 60 \n      : mode === 'shortBreak'\n      ? settings.shortBreakDuration * 60\n      : settings.longBreakDuration * 60;\n    \n    setTimeLeft(newDuration);\n  }, [settings]);\n\n  const formatTime = useCallback((seconds: number): string => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  }, []);\n\n  return (\n    <div className={`min-h-screen relative overflow-hidden transition-all duration-1000 ${timerModes[currentMode].gradient}`}>\n      <AnimatePresence>\n        {particles.map((particle) => (\n          <motion.div\n            key={particle.id}\n            className=\"absolute rounded-full bg-white/30 backdrop-blur-sm\"\n            style={{\n              left: `${particle.x}%`,\n              top: `${particle.y}%`,\n              width: particle.size,\n              height: particle.size,\n            }}\n            initial={{ opacity: 0, scale: 0 }}\n            animate={{\n              opacity: [0, 0.6, 0],\n              scale: [0, 1, 0],\n              y: [0, -100, -200],\n            }}\n            transition={{\n              duration: particle.duration,\n              delay: particle.delay,\n              repeat: Infinity,\n              ease: \"easeInOut\",\n            }}\n          />\n        ))}\n      </AnimatePresence>\n      \n      <div className=\"relative z-10 min-h-screen flex flex-col items-center justify-center p-8\">\n        <motion.div\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"w-full max-w-2xl\"\n        >\n          <div className=\"backdrop-blur-xl bg-white/10 rounded-3xl p-8 shadow-2xl border border-white/20\">\n            <div className=\"flex justify-between items-center mb-8\">\n              <h1 className=\"text-4xl font-bold text-white\">Pomodoro Timer</h1>\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                onClick={() => setShowSettings(!showSettings)}\n                className=\"text-white hover:bg-white/20\"\n              >\n                <Settings className=\"w-6 h-6\" />\n              </Button>\n            </div>\n\n            <div className=\"flex gap-2 mb-8\">\n              <Button\n                variant={currentMode === 'work' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('work')}\n                className={`flex-1 ${\n                  currentMode === 'work'\n                    ? 'bg-white text-rose-600 hover:bg-white/90'\n                    : 'text-white hover:bg-white/20'\n                }`}\n              >\n                Work\n              </Button>\n              <Button\n                variant={currentMode === 'shortBreak' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('shortBreak')}\n                className={`flex-1 ${\n                  currentMode === 'shortBreak'\n                    ? 'bg-white text-cyan-600 hover:bg-white/90'\n                    : 'text-white hover:bg-white/20'\n                }`}\n              >\n                Short Break\n              </Button>\n              <Button\n                variant={currentMode === 'longBreak' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('longBreak')}\n                className={`flex-1 ${\n                  currentMode === 'longBreak'\n                    ? 'bg-white text-emerald-600 hover:bg-white/90'\n                    : 'text-white hover:bg-white/20'\n                }`}\n              >\n                Long Break\n              </Button>\n            </div>\n\n            <div className=\"flex justify-center items-center my-12\">\n                            <div className=\"relative w-80 h-80\">\n                <svg className=\"w-full h-full transform -rotate-90\" viewBox=\"0 0 320 320\">\n                  {/* Background circle */}\n                  <circle\n                    cx=\"160\"\n                    cy=\"160\"\n                    r=\"140\"\n                    stroke=\"rgba(255, 255, 255, 0.1)\"\n                    strokeWidth=\"12\"\n                    fill=\"none\"\n                  />\n                  {/* Progress circle */}\n                  <motion.circle\n                    cx=\"160\"\n                    cy=\"160\"\n                    r=\"140\"\n                    stroke=\"url(#gradient)\"\n                    strokeWidth=\"12\"\n                    fill=\"none\"\n                    strokeLinecap=\"round\"\n                    strokeDasharray={2 * Math.PI * 140}\n                    initial={{ strokeDashoffset: 2 * Math.PI * 140 }}\n                    animate={{ \n                      strokeDashoffset: 2 * Math.PI * 140 * (1 - progress / 100)\n                    }}\n                    transition={{ duration: 0.5, ease: \"easeInOut\" }}\n                  />\n                  <defs>\n                    <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                      <stop offset=\"0%\" stopColor=\"rgba(255, 255, 255, 0.9)\" />\n                      <stop offset=\"100%\" stopColor=\"rgba(255, 255, 255, 0.6)\" />\n                    </linearGradient>\n                  </defs>\n                </svg>\n                \n                {/* Timer display in center */}\n                <div className=\"absolute inset-0 flex flex-col items-center justify-center\">\n                  <motion.div\n                    key={timeLeft}\n                    initial={{ scale: 1.1, opacity: 0 }}\n                    animate={{ scale: 1, opacity: 1 }}\n                    transition={{ duration: 0.3 }}\n                    className=\"text-7xl font-bold text-white mb-2\"\n                  >\n                    {formatTime(timeLeft)}\n                  </motion.div>\n                  <div className=\"text-white/70 text-lg font-medium capitalize\">\n                    {currentMode === 'shortBreak' ? 'Short Break' : currentMode === 'longBreak' ? 'Long Break' : 'Focus Time'}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"text-center mb-8\">\n              <motion.div\n                key={timeLeft}\n                initial={{ scale: 1 }}\n                animate={{ scale: [1, 1.05, 1] }}\n                transition={{ duration: 0.3 }}\n                className=\"text-7xl font-bold text-white mb-4\"\n              >\n                {formatTime(timeLeft)}\n              </motion.div>\n              <p className=\"text-white/80 text-xl capitalize\">\n                {currentMode === 'work' ? 'Focus Time' : currentMode === 'shortBreak' ? 'Short Break' : 'Long Break'}\n              </p>\n            </div>\n\n            <div className=\"flex justify-center gap-4 mb-6\">\n              <Button\n                onClick={handlePlayPause}\n                size=\"lg\"\n                className=\"bg-white/20 hover:bg-white/30 text-white backdrop-blur-sm border border-white/30 px-8\"\n              >\n                {isRunning ? (\n                  <>\n                    <Pause className=\"w-5 h-5 mr-2\" />\n                    Pause\n                  </>\n                ) : (\n                  <>\n                    <Play className=\"w-5 h-5 mr-2\" />\n                    Start\n                  </>\n                )}\n              </Button>\n              <Button\n                onClick={handleReset}\n                size=\"lg\"\n                variant=\"ghost\"\n                className=\"text-white hover:bg-white/20\"\n              >\n                <RotateCcw className=\"w-5 h-5 mr-2\" />\n                Reset\n              </Button>\n            </div>\n\n            <div className=\"text-center text-white/60\">\n              <p>Completed Pomodoros: {completedPomodoros}</p>\n            </div>\n          </div>\n\n          <AnimatePresence>\n            {showSettings && (\n              <motion.div\n                initial={{ opacity: 0, y: 20, scale: 0.95 }}\n                animate={{ opacity: 1, y: 0, scale: 1 }}\n                exit={{ opacity: 0, y: 20, scale: 0.95 }}\n                transition={{ duration: 0.3, ease: \"easeOut\" }}\n                className=\"mt-6 backdrop-blur-xl bg-white/10 rounded-3xl p-8 shadow-2xl border border-white/20\"\n              >\n                <h2 className=\"text-2xl font-bold text-white mb-6\">Settings</h2>\n                \n                <div className=\"space-y-6\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"work-duration\" className=\"text-white/90 text-sm font-medium\">\n                      Work Duration (minutes)\n                    </Label>\n                    <Input\n                      id=\"work-duration\"\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"60\"\n                      value={settings.workDuration}\n                      onChange={(e) => setSettings({ ...settings, workDuration: parseInt(e.target.value) || 1 })}\n                      className=\"bg-white/10 border-white/30 text-white placeholder:text-white/50 focus:border-white/50 focus:ring-white/30\"\n                    />\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"short-break-duration\" className=\"text-white/90 text-sm font-medium\">\n                      Short Break Duration (minutes)\n                    </Label>\n                    <Input\n                      id=\"short-break-duration\"\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"30\"\n                      value={settings.shortBreakDuration}\n                      onChange={(e) => setSettings({ ...settings, shortBreakDuration: parseInt(e.target.value) || 1 })}\n                      className=\"bg-white/10 border-white/30 text-white placeholder:text-white/50 focus:border-white/50 focus:ring-white/30\"\n                    />\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"long-break-duration\" className=\"text-white/90 text-sm font-medium\">\n                      Long Break Duration (minutes)\n                    </Label>\n                    <Input\n                      id=\"long-break-duration\"\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"60\"\n                      value={settings.longBreakDuration}\n                      onChange={(e) => setSettings({ ...settings, longBreakDuration: parseInt(e.target.value) || 1 })}\n                      className=\"bg-white/10 border-white/30 text-white placeholder:text-white/50 focus:border-white/50 focus:ring-white/30\"\n                    />\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"long-break-interval\" className=\"text-white/90 text-sm font-medium\">\n                      Long Break Interval (pomodoros)\n                    </Label>\n                    <Input\n                      id=\"long-break-interval\"\n                      type=\"number\"\n                      min=\"2\"\n                      max=\"10\"\n                      value={settings.longBreakInterval}\n                      onChange={(e) => setSettings({ ...settings, longBreakInterval: parseInt(e.target.value) || 2 })}\n                      className=\"bg-white/10 border-white/30 text-white placeholder:text-white/50 focus:border-white/50 focus:ring-white/30\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"flex gap-4 mt-8\">\n                  <Button\n                    onClick={() => {\n                      setShowSettings(false);\n                      handleReset();\n                    }}\n                    className=\"flex-1 bg-white/20 hover:bg-white/30 text-white backdrop-blur-sm border border-white/30\"\n                  >\n                    Save Changes\n                  </Button>\n                  <Button\n                    onClick={() => {\n                      setSettings(defaultSettings);\n                      setShowSettings(false);\n                      handleReset();\n                    }}\n                    variant=\"ghost\"\n                    className=\"flex-1 text-white hover:bg-white/20\"\n                  >\n                    Cancel\n                  </Button>\n                </div>\n              </motion.div>\n            )}\n          </AnimatePresence>\n\n          <AnimatePresence>\n            {showCompletion && (\n              <motion.div\n                initial={{ opacity: 0, scale: 0.8 }}\n                animate={{ opacity: 1, scale: 1 }}\n                exit={{ opacity: 0, scale: 0.8 }}\n                className=\"fixed inset-0 z-50 flex items-center justify-center pointer-events-none\"\n              >\n                <motion.div\n                  initial={{ y: 50, opacity: 0 }}\n                  animate={{ y: 0, opacity: 1 }}\n                  exit={{ y: -50, opacity: 0 }}\n                  transition={{ delay: 0.2 }}\n                  className=\"backdrop-blur-xl bg-white/20 rounded-3xl p-12 shadow-2xl border border-white/30\"\n                >\n                  <motion.div\n                    initial={{ scale: 0 }}\n                    animate={{ scale: [0, 1.2, 1] }}\n                    transition={{ delay: 0.3, duration: 0.5 }}\n                    className=\"text-center\"\n                  >\n                    <motion.div\n                      animate={{ rotate: [0, 10, -10, 10, 0] }}\n                      transition={{ delay: 0.5, duration: 0.5 }}\n                      className=\"text-8xl mb-4\"\n                    >\n                      \ud83c\udf89\n                    </motion.div>\n                    <h2 className=\"text-4xl font-bold text-white mb-2\">\n                      {currentMode === 'work' ? 'Great Work!' : 'Break Complete!'}\n                    </h2>\n                    <p className=\"text-white/80 text-xl\">\n                      {currentMode === 'work' \n                        ? 'Time for a well-deserved break!' \n                        : 'Ready to focus again?'}\n                    </p>\n                  </motion.div>\n                </motion.div>\n              </motion.div>\n            )}\n          </AnimatePresence>\n\n          {/* Audio element for completion sound */}\n          <audio\n            ref={audioRef}\n            src=\"data:audio/wav;base64,\n        </motion.div>\n      </div>\n    </div>\n  );\n}",
      "error": null,
      "overall_score": 53,
      "code_quality_score": 14,
      "architecture_score": 12,
      "performance_score": 11,
      "accessibility_score": 16,
      "metadata": {
        "document_id": "eval_room_23f1741371de",
        "prompt_category": "productivity",
        "prompt_complexity": 7.0
      }
    },
    {
      "prompt_id": "dashboard",
      "prompt_name": "Analytics Dashboard",
      "mode": "parallel",
      "run_number": 36,
      "timestamp": "2025-10-13T23:36:46.508958",
      "response_time": 239.55916905403137,
      "total_tokens": null,
      "response_content": "import { useState, useCallback } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Moon, Sun, RefreshCw } from 'lucide-react';\n\nimport { ArrowUpDown, ChevronLeft, ChevronRight } from 'lucide-react';\nimport { Badge } from '@/components/ui/badge';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';import { ShoppingCart, UserPlus, TrendingUp, DollarSign, Package, AlertCircle } from 'lucide-react';\nimport { AlertCircle, AlertTriangle, Info, CheckCircle } from 'lucide-react';\n\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, Legend } from 'recharts';\nimport { PieChart, Pie, Cell, ResponsiveContainer, Legend, Tooltip as RechartsTooltip } from 'recharts';\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport { Progress } from '@/components/ui/progress';\nimport { TrendingUp, TrendingDown, DollarSign, Users, ShoppingCart, Target } from 'lucide-react';\nimport { motion } from 'framer-motion';\n\ninterface MetricData {\n  id: string;\n  label: string;\n  value: number;\n  change: number;\n  trend: 'up' | 'down';\n}\n\ninterface ChartDataPoint {\n  date: string;\n  revenue: number;\n  users: number;\n  orders: number;\n}\n\ninterface TableRow {\n  id: string;\n  product: string;\n  sales: number;\n  revenue: number;\n  status: 'active' | 'pending' | 'inactive';\n}\n\nconst mockMetrics: MetricData[] = [\n  { id: '1', label: 'Total Revenue', value: 45231, change: 12.5, trend: 'up' },\n  { id: '2', label: 'Active Users', value: 2350, change: 8.2, trend: 'up' },\n  { id: '3', label: 'Total Orders', value: 1543, change: -3.1, trend: 'down' },\n  { id: '4', label: 'Conversion Rate', value: 3.24, change: 5.7, trend: 'up' }\n];\n\nconst mockChartData: ChartDataPoint[] = [\n  { date: '2024-01-01', revenue: 12000, users: 450, orders: 230 },\n  { date: '2024-01-02', revenue: 15000, users: 520, orders: 280 },\n  { date: '2024-01-03', revenue: 13500, users: 490, orders: 250 },\n  { date: '2024-01-04', revenue: 18000, users: 610, orders: 320 },\n  { date: '2024-01-05', revenue: 16500, users: 580, orders: 295 },\n  { date: '2024-01-06', revenue: 20000, users: 680, orders: 350 },\n  { date: '2024-01-07', revenue: 22000, users: 720, orders: 380 }\n];\n\nconst mockTableData: TableRow[] = [\n  { id: '1', product: 'Premium Plan', sales: 234, revenue: 23400, status: 'active' },\n  { id: '2', product: 'Basic Plan', sales: 567, revenue: 11340, status: 'active' },\n  { id: '3', product: 'Enterprise Plan', sales: 89, revenue: 44500, status: 'active' },\n  { id: '4', product: 'Starter Plan', sales: 432, revenue: 4320, status: 'pending' },\n  { id: '5', product: 'Pro Plan', sales: 156, revenue: 15600, status: 'inactive' }\n];\ninterface Alert {\n  id: string;\n  message: string;\n  severity: 'info' | 'warning' | 'error' | 'success';\n  timestamp: string;\n}\n\nconst mockAlerts: Alert[] = [\n  { id: '1', message: 'Server response time increased by 15%', severity: 'warning', timestamp: '5 min ago' },\n  { id: '2', message: 'New user milestone reached: 2,500 users', severity: 'success', timestamp: '12 min ago' },\n  { id: '3', message: 'Database backup completed successfully', severity: 'info', timestamp: '1 hour ago' },\n  { id: '4', message: 'Payment gateway experiencing delays', severity: 'error', timestamp: '2 hours ago' },\n  { id: '5', message: 'System update scheduled for tonight', severity: 'info', timestamp: '3 hours ago' }\n];\n\nconst quickStatsData = [\n  { id: '1', label: 'Goal Completion', value: 78, target: 100, color: 'bg-blue-500' },\n  { id: '2', label: 'Customer Satisfaction', value: 92, target: 100, color: 'bg-green-500' },\n  { id: '3', label: 'Task Progress', value: 65, target: 100, color: 'bg-purple-500' },\n  { id: '4', label: 'Revenue Target', value: 84, target: 100, color: 'bg-orange-500' }\n];\n\nconst mockPieData = [\n  { name: 'Premium Plan', value: 23400, color: '#3b82f6' },\n  { name: 'Basic Plan', value: 11340, color: '#10b981' },\n  { name: 'Enterprise Plan', value: 44500, color: '#8b5cf6' },\n  { name: 'Starter Plan', value: 4320, color: '#f59e0b' },\n  { name: 'Pro Plan', value: 15600, color: '#ef4444' }\n];\ninterface ActivityItem {\n  id: string;\n  type: 'sale' | 'user' | 'revenue' | 'alert' | 'order' | 'product';\n  message: string;\n  timestamp: string;\n  time: string;\n}\n\nconst mockActivityData: ActivityItem[] = [\n  { id: '1', type: 'sale', message: 'New sale: Premium Plan purchased', timestamp: '2024-01-07T10:30:00', time: '2 min ago' },\n  { id: '2', type: 'user', message: 'New user registered: john.doe@example.com', timestamp: '2024-01-07T10:25:00', time: '7 min ago' },\n  { id: '3', type: 'revenue', message: 'Revenue milestone: $50,000 reached', timestamp: '2024-01-07T10:15:00', time: '17 min ago' },\n  { id: '4', type: 'order', message: 'Order #1234 completed successfully', timestamp: '2024-01-07T10:10:00', time: '22 min ago' },\n  { id: '5', type: 'alert', message: 'Low stock alert: Starter Plan inventory', timestamp: '2024-01-07T10:05:00', time: '27 min ago' },\n  { id: '6', type: 'product', message: 'Product updated: Enterprise Plan features', timestamp: '2024-01-07T09:50:00', time: '42 min ago' },\n  { id: '7', type: 'sale', message: 'New sale: Basic Plan purchased', timestamp: '2024-01-07T09:45:00', time: '47 min ago' },\n  { id: '8', type: 'user', message: 'New user registered: jane.smith@example.com', timestamp: '2024-01-07T09:30:00', time: '1 hour ago' }\n];\n\nconst getMetricIcon = (label: string) => {\n  switch (label) {\n    case 'Total Revenue':\n      return DollarSign;\n    case 'Active Users':\n      return Users;\n    case 'Total Orders':\n      return ShoppingCart;\n    case 'Conversion Rate':\n      return Target;\n    default:\n      return DollarSign;\n  }\n};\n\nconst formatMetricValue = (label: string, value: number) => {\n  if (label === 'Total Revenue') {\n    return `$${value.toLocaleString()}`;\n  } else if (label === 'Conversion Rate') {\n    return `${value}%`;\n  }\n  return value.toLocaleString();\n};\n\nexport default function AnalyticsDashboard() {\n  const [sortColumn, setSortColumn] = useState<keyof TableRow | null>(null);\n  const [sortDirection, setSortDirection] = useState<'asc' | 'desc'>('asc');\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 3;\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [metrics, setMetrics] = useState<MetricData[]>(mockMetrics);\n  const [chartData, setChartData] = useState<ChartDataPoint[]>(mockChartData);\n  const [tableData, setTableData] = useState<TableRow[]>(mockTableData);\n  const [isRefreshing, setIsRefreshing] = useState(false);\n\n  const toggleDarkMode = useCallback(() => {\n    setIsDarkMode(prev => !prev);\n  }, []);\n  const handleSort = useCallback((column: keyof TableRow) => {\n    if (sortColumn === column) {\n      setSortDirection(prev => prev === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortColumn(column);\n      setSortDirection('asc');\n    }\n    setCurrentPage(1);\n  }, [sortColumn]);\n\n  const sortedTableData = useCallback(() => {\n    if (!sortColumn) return tableData;\n    \n    return [...tableData].sort((a, b) => {\n      const aValue = a[sortColumn];\n      const bValue = b[sortColumn];\n      \n      if (typeof aValue === 'number' && typeof bValue === 'number') {\n        return sortDirection === 'asc' ? aValue - bValue : bValue - aValue;\n      }\n      \n      if (typeof aValue === 'string' && typeof bValue === 'string') {\n        return sortDirection === 'asc' \n          ? aValue.localeCompare(bValue)\n          : bValue.localeCompare(aValue);\n      }\n      \n      return 0;\n    });\n  }, [tableData, sortColumn, sortDirection]);\n\n  const paginatedData = useCallback(() => {\n    const sorted = sortedTableData();\n    const startIndex = (currentPage - 1) * itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n    return sorted.slice(startIndex, endIndex);\n  }, [sortedTableData, currentPage]);\n\n  const totalPages = Math.ceil(tableData.length / itemsPerPage);\n\n  const getStatusBadgeVariant = (status: TableRow['status']) => {\n    switch (status) {\n      case 'active':\n        return 'default';\n      case 'pending':\n        return 'secondary';\n      case 'inactive':\n        return 'outline';\n      default:\n        return 'default';\n    }\n  };\n</parameter>\n</invoke>\n\n  const handleRefresh = useCallback(() => {\n    setIsRefreshing(true);\n    \n    setTimeout(() => {\n      // Generate updated mock metrics with random variations\n      const updatedMetrics = mockMetrics.map(metric => ({\n        ...metric,\n        value: metric.value + Math.floor(Math.random() * 200 - 100),\n        change: parseFloat((Math.random() * 20 - 5).toFixed(1)),\n        trend: Math.random() > 0.5 ? 'up' as const : 'down' as const\n      }));\n\n      // Generate updated chart data with random variations\n      const updatedChartData = mockChartData.map(point => ({\n        ...point,\n        revenue: point.revenue + Math.floor(Math.random() * 4000 - 2000),\n        users: point.users + Math.floor(Math.random() * 100 - 50),\n        orders: point.orders + Math.floor(Math.random() * 50 - 25)\n      }));\n\n      // Generate updated table data with random variations\n      const updatedTableData = mockTableData.map(row => ({\n        ...row,\n        sales: row.sales + Math.floor(Math.random() * 40 - 20),\n        revenue: row.revenue + Math.floor(Math.random() * 2000 - 1000)\n      }));\n\n      setMetrics(updatedMetrics);\n      setChartData(updatedChartData);\n      setTableData(updatedTableData);\n      setIsRefreshing(false);\n    }, 1500);\n  }, []);\n\n  return (\n    <div className={`min-h-screen ${isDarkMode ? 'dark bg-gray-900' : 'bg-gray-50'}`}>\n      <div className=\"container mx-auto p-4 md:p-6 lg:p-8\">\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4 mb-8\">\n          <div>\n            <h1 className={`text-3xl md:text-4xl font-bold ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>\n              Analytics Dashboard\n            </h1>\n            <p className={`mt-2 ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>\n              Real-time insights and performance metrics\n            </p>\n          </div>\n          \n          <div className=\"flex gap-2\">\n            <Button\n              variant=\"outline\"\n              size=\"icon\"\n              onClick={toggleDarkMode}\n              className={isDarkMode ? 'border-gray-700' : ''}\n            >\n              {isDarkMode ? <Sun className=\"h-5 w-5\" /> : <Moon className=\"h-5 w-5\" />}\n            </Button>\n            \n            <Button\n              variant=\"outline\"\n              onClick={handleRefresh}\n              disabled={isRefreshing}\n              className={isDarkMode ? 'border-gray-700' : ''}\n            >\n              <RefreshCw className={`h-4 w-4 mr-2 ${isRefreshing ? 'animate-spin' : ''}`} />\n              Refresh\n            </Button>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 md:gap-6 mb-8\">\n          {metrics.map((metric, index) => {\n            const IconComponent = getMetricIcon(metric.label);\n            return (\n              <motion.div\n                key={metric.id}\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.4, delay: index * 0.1 }}\n              >\n                <Card className={isDarkMode ? 'bg-gray-800 border-gray-700' : ''}>\n                  <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                    <CardTitle className={`text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>\n                      {metric.label}\n                    </CardTitle>\n                    <div className={`p-2 rounded-lg ${isDarkMode ? 'bg-gray-700' : 'bg-gray-100'}`}>\n                      <IconComponent className={`h-4 w-4 ${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`} />\n                    </div>\n                  </CardHeader>\n                  <CardContent>\n                    <div className={`text-2xl font-bold ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>\n                      {formatMetricValue(metric.label, metric.value)}\n                    </div>\n                    <div className=\"flex items-center mt-2\">\n                      {metric.trend === 'up' ? (\n                        <TrendingUp className=\"h-4 w-4 text-green-500 mr-1\" />\n                      ) : (\n                        <TrendingDown className=\"h-4 w-4 text-red-500 mr-1\" />\n                      )}\n                      <span className={`text-sm font-medium ${\n                        metric.trend === 'up' ? 'text-green-500' : 'text-red-500'\n                      }`}>\n                        {metric.change > 0 ? '+' : ''}{metric.change}%\n                      </span>\n                      <span className={`text-sm ml-2 ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\n                        vs last period\n                      </span>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            );\n          })}\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4 md:gap-6 mb-8\">\n          <Card className={isDarkMode ? 'bg-gray-800 border-gray-700' : ''}>\n            <CardHeader>\n              <CardTitle className={isDarkMode ? 'text-white' : ''}>Revenue Overview</CardTitle>\n              <CardDescription className={isDarkMode ? 'text-gray-400' : ''}>\n                Daily revenue trends\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"h-[300px] w-full\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <LineChart\n                    data={chartData}\n                    margin={{ top: 5, right: 10, left: 0, bottom: 5 }}\n                  >\n                    <CartesianGrid \n                      strokeDasharray=\"3 3\" \n                      stroke={isDarkMode ? '#374151' : '#e5e7eb'}\n                    />\n                    <XAxis \n                      dataKey=\"date\" \n                      stroke={isDarkMode ? '#9ca3af' : '#6b7280'}\n                      fontSize={12}\n                      tickFormatter={(value) => new Date(value).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}\n                    />\n                    <YAxis \n                      stroke={isDarkMode ? '#9ca3af' : '#6b7280'}\n                      fontSize={12}\n                      tickFormatter={(value) => `$${(value / 1000).toFixed(0)}k`}\n                    />\n                    <Tooltip \n                      contentStyle={{\n                        backgroundColor: isDarkMode ? '#1f2937' : '#ffffff',\n                        border: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`,\n                        borderRadius: '6px',\n                        color: isDarkMode ? '#ffffff' : '#000000'\n                      }}\n                      labelFormatter={(value) => new Date(value).toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' })}\n                      formatter={(value: number) => [`$${value.toLocaleString()}`, 'Revenue']}\n                    />\n                    <Line \n                      type=\"monotone\" \n                      dataKey=\"revenue\" \n                      stroke=\"#3b82f6\" \n                      strokeWidth={2}\n                      dot={{ fill: '#3b82f6', r: 4 }}\n                      activeDot={{ r: 6 }}\n                    />\n                  </LineChart>\n                </ResponsiveContainer>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card className={isDarkMode ? 'bg-gray-800 border-gray-700' : ''}>\n            <CardHeader>\n              <CardTitle className={isDarkMode ? 'text-white' : ''}>User Activity</CardTitle>\n              <CardDescription className={isDarkMode ? 'text-gray-400' : ''}>\n                Active users over time\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <ResponsiveContainer width=\"100%\" height={300}>\n                <AreaChart data={chartData}>\n                  <defs>\n                    <linearGradient id=\"userGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                      <stop offset=\"5%\" stopColor=\"#8b5cf6\" stopOpacity={0.8}/>\n                      <stop offset=\"95%\" stopColor=\"#8b5cf6\" stopOpacity={0}/>\n                    </linearGradient>\n                  </defs>\n                  <CartesianGrid strokeDasharray=\"3 3\" stroke={isDarkMode ? '#374151' : '#e5e7eb'} />\n                  <XAxis \n                    dataKey=\"date\" \n                    stroke={isDarkMode ? '#9ca3af' : '#6b7280'}\n                    tick={{ fontSize: 12 }}\n                    tickFormatter={(value) => new Date(value).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}\n                  />\n                  <YAxis \n                    stroke={isDarkMode ? '#9ca3af' : '#6b7280'}\n                    tick={{ fontSize: 12 }}\n                  />\n                  <Tooltip \n                    contentStyle={{\n                      backgroundColor: isDarkMode ? '#1f2937' : '#ffffff',\n                      border: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`,\n                      borderRadius: '8px',\n                      color: isDarkMode ? '#ffffff' : '#000000'\n                    }}\n                    labelFormatter={(value) => new Date(value).toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' })}\n                  />\n                  <Area \n                    type=\"monotone\" \n                    dataKey=\"users\" \n                    stroke=\"#8b5cf6\" \n                    strokeWidth={2}\n                    fill=\"url(#userGradient)\"\n                    animationDuration={1000}\n                    animationEasing=\"ease-in-out\"\n                  />\n                </AreaChart>\n              </ResponsiveContainer>\n            </CardContent>\n          </Card>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4 md:gap-6 mb-8\">\n          <Card className={`lg:col-span-2 ${isDarkMode ? 'bg-gray-800 border-gray-700' : ''}`}>\n            <CardHeader>\n              <CardTitle className={isDarkMode ? 'text-white' : ''}>Performance Metrics</CardTitle>\n              <CardDescription className={isDarkMode ? 'text-gray-400' : ''}>\n                Combined view of key metrics\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <ResponsiveContainer width=\"100%\" height={300}>\n                <LineChart data={chartData}>\n                  <CartesianGrid \n                    strokeDasharray=\"3 3\" \n                    stroke={isDarkMode ? '#374151' : '#e5e7eb'} \n                  />\n                  <XAxis \n                    dataKey=\"date\" \n                    stroke={isDarkMode ? '#9ca3af' : '#6b7280'}\n                    tick={{ fill: isDarkMode ? '#9ca3af' : '#6b7280' }}\n                    tickFormatter={(value) => new Date(value).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}\n                  />\n                  <YAxis \n                    stroke={isDarkMode ? '#9ca3af' : '#6b7280'}\n                    tick={{ fill: isDarkMode ? '#9ca3af' : '#6b7280' }}\n                  />\n                  <Tooltip \n                    contentStyle={{\n                      backgroundColor: isDarkMode ? '#1f2937' : '#ffffff',\n                      border: `1px solid ${isDarkMode ? '#374151' : '#e5e7eb'}`,\n                      borderRadius: '6px',\n                      color: isDarkMode ? '#ffffff' : '#000000'\n                    }}\n                    labelFormatter={(value) => new Date(value).toLocaleDateString('en-US', { month: 'long', day: 'numeric', year: 'numeric' })}\n                  />\n                  <Legend \n                    wrapperStyle={{\n                      color: isDarkMode ? '#9ca3af' : '#6b7280'\n                    }}\n                  />\n                  <Line \n                    type=\"monotone\" \n                    dataKey=\"revenue\" \n                    stroke=\"#3b82f6\" \n                    strokeWidth={2}\n                    dot={{ fill: '#3b82f6', r: 4 }}\n                    activeDot={{ r: 6 }}\n                    name=\"Revenue ($)\"\n                  />\n                  <Line \n                    type=\"monotone\" \n                    dataKey=\"users\" \n                    stroke=\"#10b981\" \n                    strokeWidth={2}\n                    dot={{ fill: '#10b981', r: 4 }}\n                    activeDot={{ r: 6 }}\n                    name=\"Users\"\n                  />\n                  <Line \n                    type=\"monotone\" \n                    dataKey=\"orders\" \n                    stroke=\"#f59e0b\" \n                    strokeWidth={2}\n                    dot={{ fill: '#f59e0b', r: 4 }}\n                    activeDot={{ r: 6 }}\n                    name=\"Orders\"\n                  />\n                </LineChart>\n              </ResponsiveContainer>\n            </CardContent>\n          </Card>\n\n          <Card className={isDarkMode ? 'bg-gray-800 border-gray-700' : ''}>\n            <CardHeader>\n              <CardTitle className={isDarkMode ? 'text-white' : ''}>Distribution</CardTitle>\n              <CardDescription className={isDarkMode ? 'text-gray-400' : ''}>\n                Sales by category\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <ResponsiveContainer width=\"100%\" height={300}>\n                <PieChart>\n                  <Pie\n                    data={mockPieData}\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    labelLine={false}\n                    label={({ name, percent }) => `${(percent * 100).toFixed(0)}%`}\n                    outerRadius={80}\n                    fill=\"#8884d8\"\n                    dataKey=\"value\"\n                  >\n                    {mockPieData.map((entry, index) => (\n                      <Cell key={`cell-${index}`} fill={entry.color} />\n                    ))}\n                  </Pie>\n                  <RechartsTooltip\n                    contentStyle={{\n                      backgroundColor: isDarkMode ? '#1f2937' : '#ffffff',\n                      border: isDarkMode ? '1px solid #374151' : '1px solid #e5e7eb',\n                      borderRadius: '6px',\n                      color: isDarkMode ? '#ffffff' : '#000000'\n                    }}\n                    formatter={(value: number) => `$${value.toLocaleString()}`}\n                  />\n                  <Legend\n                    verticalAlign=\"bottom\"\n                    height={36}\n                    iconType=\"circle\"\n                    wrapperStyle={{\n                      color: isDarkMode ? '#9ca3af' : '#6b7280'\n                    }}\n                  />\n                </PieChart>\n              </ResponsiveContainer>\n            </CardContent>\n          </Card>\n        </div>\n\n        <Card className={isDarkMode ? 'bg-gray-800 border-gray-700' : ''}>\n          <CardHeader>\n            <CardTitle className={isDarkMode ? 'text-white' : ''}>Top Products</CardTitle>\n            <CardDescription className={isDarkMode ? 'text-gray-400' : ''}>\n              Best performing products by revenue\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            {/* TODO:DataTable Render sortable table with product data, status badges, and pagination */}\n          </CardContent>\n        </Card>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 md:gap-6 mt-8\">\n          <Card className={isDarkMode ? 'bg-gray-800 border-gray-700' : ''}>\n            <CardHeader>\n              <CardTitle className={isDarkMode ? 'text-white' : ''}>Recent Activity</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4 max-h-[400px] overflow-y-auto pr-2\">\n                {mockActivityData.map((activity) => {\n                  const getActivityIcon = () => {\n                    switch (activity.type) {\n                      case 'sale':\n                        return <ShoppingCart className=\"h-4 w-4 text-green-500\" />;\n                      case 'user':\n                        return <UserPlus className=\"h-4 w-4 text-blue-500\" />;\n                      case 'revenue':\n                        return <TrendingUp className=\"h-4 w-4 text-purple-500\" />;\n                      case 'alert':\n                        return <AlertCircle className=\"h-4 w-4 text-orange-500\" />;\n                      case 'order':\n                        return <DollarSign className=\"h-4 w-4 text-emerald-500\" />;\n                      case 'product':\n                        return <Package className=\"h-4 w-4 text-indigo-500\" />;\n                      default:\n                        return <AlertCircle className=\"h-4 w-4 text-gray-500\" />;\n                    }\n                  };\n\n                  return (\n                    <div\n                      key={activity.id}\n                      className={`flex items-start gap-3 p-3 rounded-lg transition-colors ${\n                        isDarkMode \n                          ? 'hover:bg-gray-700/50' \n                          : 'hover:bg-gray-100'\n                      }`}\n                    >\n                      <div className={`mt-0.5 p-2 rounded-full ${\n                        isDarkMode ? 'bg-gray-700' : 'bg-gray-100'\n                      }`}>\n                        {getActivityIcon()}\n                      </div>\n                      <div className=\"flex-1 min-w-0\">\n                        <p className={`text-sm ${\n                          isDarkMode ? 'text-gray-200' : 'text-gray-900'\n                        }`}>\n                          {activity.message}\n                        </p>\n                        <p className={`text-xs mt-1 ${\n                          isDarkMode ? 'text-gray-500' : 'text-gray-500'\n                        }`}>\n                          {activity.time}\n                        </p>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card className={isDarkMode ? 'bg-gray-800 border-gray-700' : ''}>\n            <CardHeader>\n              <CardTitle className={isDarkMode ? 'text-white' : ''}>Quick Stats</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {quickStatsData.map((stat) => (\n                  <div key={stat.id} className=\"space-y-2\">\n                    <div className=\"flex justify-between items-center\">\n                      <span className={`text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'}`}>\n                        {stat.label}\n                      </span>\n                      <span className={`text-sm font-bold ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>\n                        {stat.value}%\n                      </span>\n                    </div>\n                    <Progress \n                      value={stat.value} \n                      className={`h-2 ${isDarkMode ? 'bg-gray-700' : 'bg-gray-200'}`}\n                    />\n                    <div className=\"flex justify-between items-center\">\n                      <span className={`text-xs ${isDarkMode ? 'text-gray-500' : 'text-gray-500'}`}>\n                        Target: {stat.target}%\n                      </span>\n                      <span className={`text-xs font-medium ${stat.value >= 75 ? 'text-green-500' : stat.value >= 50 ? 'text-orange-500' : 'text-red-500'}`}>\n                        {stat.value >= 75 ? 'On Track' : stat.value >= 50 ? 'In Progress' : 'Needs Attention'}\n                      </span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card className={isDarkMode ? 'bg-gray-800 border-gray-700' : ''}>\n            <CardHeader>\n              <CardTitle className={isDarkMode ? 'text-white' : ''}>Alerts</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-3\">\n                {mockAlerts.map((alert) => {\n                  const severityConfig = {\n                    info: { icon: Info, color: isDarkMode ? 'text-blue-400' : 'text-blue-600', bg: isDarkMode ? 'bg-blue-900/30' : 'bg-blue-50' },\n                    warning: { icon: AlertTriangle, color: isDarkMode ? 'text-yellow-400' : 'text-yellow-600', bg: isDarkMode ? 'bg-yellow-900/30' : 'bg-yellow-50' },\n                    error: { icon: AlertCircle, color: isDarkMode ? 'text-red-400' : 'text-red-600', bg: isDarkMode ? 'bg-red-900/30' : 'bg-red-50' },\n                    success: { icon: CheckCircle, color: isDarkMode ? 'text-green-400' : 'text-green-600', bg: isDarkMode ? 'bg-green-900/30' : 'bg-green-50' }\n                  };\n\n                  const config = severityConfig[alert.severity];\n                  const Icon = config.icon;\n\n                  return (\n                    <div\n                      key={alert.id}\n                      className={`flex items-start gap-3 p-3 rounded-lg ${config.bg} transition-all hover:scale-[1.02]`}\n                    >\n                      <Icon className={`h-5 w-5 ${config.color} flex-shrink-0 mt-0.5`} />\n                      <div className=\"flex-1 min-w-0\">\n                        <p className={`text-sm ${isDarkMode ? 'text-gray-200' : 'text-gray-900'}`}>\n                          {alert.message}\n                        </p>\n                        <p className={`text-xs mt-1 ${isDarkMode ? 'text-gray-500' : 'text-gray-500'}`}>\n                          {alert.timestamp}\n                        </p>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n}",
      "error": null,
      "overall_score": 53,
      "code_quality_score": 14,
      "architecture_score": 11,
      "performance_score": 12,
      "accessibility_score": 16,
      "metadata": {
        "document_id": "eval_room_b6bb289a210a",
        "prompt_category": "intermediate",
        "prompt_complexity": 6.0
      }
    },
    {
      "prompt_id": "pomodoro_timer",
      "prompt_name": "Pomodoro Timer",
      "mode": "parallel",
      "run_number": 26,
      "timestamp": "2025-10-14T01:25:12.040829",
      "response_time": 234.57916593551636,
      "total_tokens": null,
      "response_content": "import { useState, useCallback, useEffect, useRef } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Play, Pause, RotateCcw, Settings } from 'lucide-react';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { X } from 'lucide-react';\nimport { motion, AnimatePresence } from 'framer-motion';\n\ninterface TimerMode {\n  type: 'work' | 'shortBreak' | 'longBreak';\n  duration: number;\n  label: string;\n}\n\ninterface TimerSettings {\n  workDuration: number;\n  shortBreakDuration: number;\n  longBreakDuration: number;\n  longBreakInterval: number;\n}\n\ninterface Particle {\n  id: number;\n  x: number;\n  y: number;\n  size: number;\n  duration: number;\n  delay: number;\n}\n\nconst defaultSettings: TimerSettings = {\n  workDuration: 25,\n  shortBreakDuration: 5,\n  longBreakDuration: 15,\n  longBreakInterval: 4\n};\n\nconst timerModes: Record<string, { colors: string; gradient: string }> = {\n  work: {\n    colors: 'from-rose-500 via-pink-500 to-purple-500',\n    gradient: 'bg-gradient-to-br from-rose-500/20 via-pink-500/20 to-purple-500/20'\n  },\n  shortBreak: {\n    colors: 'from-cyan-500 via-blue-500 to-indigo-500',\n    gradient: 'bg-gradient-to-br from-cyan-500/20 via-blue-500/20 to-indigo-500/20'\n  },\n  longBreak: {\n    colors: 'from-emerald-500 via-teal-500 to-cyan-500',\n    gradient: 'bg-gradient-to-br from-emerald-500/20 via-teal-500/20 to-cyan-500/20'\n  }\n};\n\nfunction SettingsForm({ \n  settings, \n  onSave, \n  onCancel \n}: { \n  settings: TimerSettings; \n  onSave: (settings: TimerSettings) => void; \n  onCancel: () => void;\n}) {\n  const [localSettings, setLocalSettings] = useState<TimerSettings>(settings);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    onSave(localSettings);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"space-y-6\">\n      <div className=\"space-y-4\">\n        <motion.div\n          initial={{ opacity: 0, x: -20 }}\n          animate={{ opacity: 1, x: 0 }}\n          transition={{ delay: 0.1 }}\n          className=\"space-y-2\"\n        >\n          <Label htmlFor=\"workDuration\" className=\"text-white text-sm font-medium\">\n            Work Duration (minutes)\n          </Label>\n          <Input\n            id=\"workDuration\"\n            type=\"number\"\n            min=\"1\"\n            max=\"60\"\n            value={localSettings.workDuration}\n            onChange={(e) => setLocalSettings({ ...localSettings, workDuration: parseInt(e.target.value) || 1 })}\n            className=\"bg-white/10 border-white/20 text-white placeholder:text-white/50 focus:border-white/40\"\n          />\n        </motion.div>\n\n        <motion.div\n          initial={{ opacity: 0, x: -20 }}\n          animate={{ opacity: 1, x: 0 }}\n          transition={{ delay: 0.2 }}\n          className=\"space-y-2\"\n        >\n          <Label htmlFor=\"shortBreakDuration\" className=\"text-white text-sm font-medium\">\n            Short Break Duration (minutes)\n          </Label>\n          <Input\n            id=\"shortBreakDuration\"\n            type=\"number\"\n            min=\"1\"\n            max=\"30\"\n            value={localSettings.shortBreakDuration}\n            onChange={(e) => setLocalSettings({ ...localSettings, shortBreakDuration: parseInt(e.target.value) || 1 })}\n            className=\"bg-white/10 border-white/20 text-white placeholder:text-white/50 focus:border-white/40\"\n          />\n        </motion.div>\n\n        <motion.div\n          initial={{ opacity: 0, x: -20 }}\n          animate={{ opacity: 1, x: 0 }}\n          transition={{ delay: 0.3 }}\n          className=\"space-y-2\"\n        >\n          <Label htmlFor=\"longBreakDuration\" className=\"text-white text-sm font-medium\">\n            Long Break Duration (minutes)\n          </Label>\n          <Input\n            id=\"longBreakDuration\"\n            type=\"number\"\n            min=\"1\"\n            max=\"60\"\n            value={localSettings.longBreakDuration}\n            onChange={(e) => setLocalSettings({ ...localSettings, longBreakDuration: parseInt(e.target.value) || 1 })}\n            className=\"bg-white/10 border-white/20 text-white placeholder:text-white/50 focus:border-white/40\"\n          />\n        </motion.div>\n\n        <motion.div\n          initial={{ opacity: 0, x: -20 }}\n          animate={{ opacity: 1, x: 0 }}\n          transition={{ delay: 0.4 }}\n          className=\"space-y-2\"\n        >\n          <Label htmlFor=\"longBreakInterval\" className=\"text-white text-sm font-medium\">\n            Long Break Interval (pomodoros)\n          </Label>\n          <Input\n            id=\"longBreakInterval\"\n            type=\"number\"\n            min=\"2\"\n            max=\"10\"\n            value={localSettings.longBreakInterval}\n            onChange={(e) => setLocalSettings({ ...localSettings, longBreakInterval: parseInt(e.target.value) || 2 })}\n            className=\"bg-white/10 border-white/20 text-white placeholder:text-white/50 focus:border-white/40\"\n          />\n        </motion.div>\n      </div>\n\n      <motion.div\n        initial={{ opacity: 0, y: 10 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ delay: 0.5 }}\n        className=\"flex gap-3 pt-4\"\n      >\n        <Button\n          type=\"submit\"\n          className=\"flex-1 bg-white/20 hover:bg-white/30 text-white backdrop-blur-sm border border-white/30\"\n        >\n          Save Changes\n        </Button>\n        <Button\n          type=\"button\"\n          onClick={onCancel}\n          variant=\"ghost\"\n          className=\"flex-1 text-white hover:bg-white/20\"\n        >\n          Cancel\n        </Button>\n      </motion.div>\n    </form>\n  );\n}\nexport default function PomodoroTimer() {\n  const [settings, setSettings] = useState<TimerSettings>(defaultSettings);\n  const [currentMode, setCurrentMode] = useState<'work' | 'shortBreak' | 'longBreak'>('work');\n  const [timeLeft, setTimeLeft] = useState(settings.workDuration * 60);\n  const [isRunning, setIsRunning] = useState(false);\n  const [completedPomodoros, setCompletedPomodoros] = useState(0);\n  const [showSettings, setShowSettings] = useState(false);\n  const [showCompletion, setShowCompletion] = useState(false);\n  const [particles, setParticles] = useState<Particle[]>([]);\n  \n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n  const audioRef = useRef<HTMLAudioElement | null>(null);\n\n  const totalTime = currentMode === 'work' \n    ? settings.workDuration * 60 \n    : currentMode === 'shortBreak'\n    ? settings.shortBreakDuration * 60\n    : settings.longBreakDuration * 60;\n\n  const progress = ((totalTime - timeLeft) / totalTime) * 100;\n\n\n  useEffect(() => {\n    const generatedParticles: Particle[] = Array.from({ length: 50 }, (_, i) => ({\n      id: i,\n      x: Math.random() * 100,\n      y: Math.random() * 100,\n      size: Math.random() * 4 + 2,\n      duration: Math.random() * 20 + 10,\n      delay: Math.random() * 5\n    })); 5\n\n    }));\n    setParticles(generatedParticles);\n  }, []);\n\n\n  useEffect(() => {\n    if (isRunning && timeLeft > 0) {\n      intervalRef.current = setInterval(() => {\n        setTimeLeft((prev) => prev - 1);\n      }, 1000);\n    } else if (timeLeft === 0 && isRunning) {\n      setIsRunning(false);\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n        intervalRef.current = null;\n      }\n      \n      // Show completion animation\n      setShowCompletion(true);\n      \n      // Play completion sound\n      if (audioRef.current) {\n        audioRef.current.play().catch(() => {});\n      }\n      \n      // Update completed pomodoros count\n      if (currentMode === 'work') {\n        const newCount = completedPomodoros + 1;\n        setCompletedPomodoros(newCount);\n        \n        // Auto-switch to break mode\n        setTimeout(() => {\n          setShowCompletion(false);\n          if (newCount % settings.longBreakInterval === 0) {\n            handleModeSwitch('longBreak');\n          } else {\n            handleModeSwitch('shortBreak');\n          }\n        }, 3000);\n      } else {\n        // After break, switch back to work\n        setTimeout(() => {\n          setShowCompletion(false);\n          handleModeSwitch('work');\n        }, 3000);\n      }\n    }\n    \n\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [isRunning, timeLeft, currentMode, completedPomodoros, settings, handleModeSwitch]);\n\n  useEffect(() => {\n    if (isRunning && timeLeft > 0) {\n      intervalRef.current = setInterval(() => {\n        setTimeLeft((prev) => {\n          if (prev <= 1) {\n            setIsRunning(false);\n            setShowCompletion(true);\n            \n            // Play completion sound\n            if (audioRef.current) {\n              audioRef.current.play().catch(() => {});\n            }\n            \n            // Auto-switch to next mode\n            if (currentMode === 'work') {\n              setCompletedPomodoros((prev) => prev + 1);\n              const nextPomodoros = completedPomodoros + 1;\n              \n              if (nextPomodoros % settings.longBreakInterval === 0) {\n                setCurrentMode('longBreak');\n                return settings.longBreakDuration * 60;\n              } else {\n                setCurrentMode('shortBreak');\n                return settings.shortBreakDuration * 60;\n              }\n            } else {\n              setCurrentMode('work');\n              return settings.workDuration * 60;\n            }\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } else {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n        intervalRef.current = null;\n      }\n    }\n    \n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [isRunning, timeLeft, currentMode, completedPomodoros, settings]);\n\n\n  const handlePlayPause = useCallback(() => {\n    setIsRunning(!isRunning);\n  }, [isRunning]);\n\n\n  const handleReset = useCallback(() => {    setIsRunning(false);\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n    const newDuration = currentMode === 'work' \n      ? settings.workDuration * 60 \n      : currentMode === 'shortBreak'\n      ? settings.shortBreakDuration * 60\n      : settings.longBreakDuration * 60;\n    setTimeLeft(newDuration);\nsetIsRunning(false);\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n    const duration = currentMode === 'work' \n      ? settings.workDuration * 60 \n      : currentMode === 'shortBreak'\n      ? settings.shortBreakDuration * 60\n      : settings.longBreakDuration * 60;\n    setTimeLeft(duration);\n  }, [currentMode, settings]);\n\n  const handleModeSwitch = useCallback((mode: 'work' | 'shortBreak' | 'longBreak') => {\n    setIsRunning(false);\n    setCurrentMode(mode);\n    const newDuration = mode === 'work' \n      ? settings.workDuration * 60 \n      : mode === 'shortBreak'\n      ? settings.shortBreakDuration * 60\n      : settings.longBreakDuration * 60;\n    setTimeLeft(newDuration);\n  }, [settings]);\n\n  const formatTime = useCallback((seconds: number): string => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  }, []);\n  const handleSaveSettings = useCallback((newSettings: TimerSettings) => {\n    setSettings(newSettings);\n    setShowSettings(false);\n    // Reset timer with new settings\n    const newDuration = currentMode === 'work' \n      ? newSettings.workDuration * 60 \n      : currentMode === 'shortBreak'\n      ? newSettings.shortBreakDuration * 60\n      : newSettings.longBreakDuration * 60;\n    setTimeLeft(newDuration);\n    setIsRunning(false);\n  }, [currentMode]);\n\n  return (\n    <div className={`min-h-screen relative overflow-hidden transition-all duration-1000 ${timerModes[currentMode].gradient}`}>\n      <div className=\"absolute inset-0 overflow-hidden pointer-events-none\">\n        {particles.map((particle) => (\n          <motion.div\n            key={particle.id}\n            className=\"absolute rounded-full bg-white/30 backdrop-blur-sm\"\n            style={{\n              left: `${particle.x}%`,\n              top: `${particle.y}%`,\n              width: particle.size,\n              height: particle.size,\n           }}\n            animate={{\n              y: [0, -30, 0],\n              opacity: [0.2, 0.6, 0.2],\n            }}\n            transition={{\n              duration: particle.duration,\n              repeat: Infinity,\n              delay: particle.delay,\n              ease: \"easeInOut\"\n            }}\n          />\n        ))}\n      </div> }}\n            animate={{\n              y: [0, -30, 0],\n              opacity: [0.2, 0.6, 0.2],\n              scale: [1, 1.2, 1],\n            }}\n            transition={{\n              duration: particle.duration,\n              delay: particle.delay,\n              repeat: Infinity,\n              ease: \"easeInOut\",\n            }}\n          />\n        ))}\n      </div>\n      \n      <div className=\"relative z-10 min-h-screen flex flex-col items-center justify-center p-8\">\n        <motion.div\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"w-full max-w-2xl\"\n        >\n          <div className=\"backdrop-blur-xl bg-white/10 rounded-3xl p-8 shadow-2xl border border-white/20\">\n            <div className=\"flex justify-between items-center mb-8\">\n              <h1 className=\"text-4xl font-bold text-white\">Pomodoro Timer</h1>\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                onClick={() => setShowSettings(!showSettings)}\n                className=\"text-white hover:bg-white/20\"\n              >\n                <Settings className=\"w-6 h-6\" />\n              </Button>\n            </div>\n\n            <div className=\"flex gap-2 mb-8\">\n              <Button\n                variant={currentMode === 'work' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('work')}\n                className={`flex-1 ${\n                  currentMode === 'work'\n                    ? 'bg-white text-rose-600 hover:bg-white/90'\n                    : 'text-white hover:bg-white/20'\n                }`}\n              >\n                Work\n              </Button>\n              <Button\n                variant={currentMode === 'shortBreak' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('shortBreak')}\n                className={`flex-1 ${\n                  currentMode === 'shortBreak'\n                    ? 'bg-white text-cyan-600 hover:bg-white/90'\n                    : 'text-white hover:bg-white/20'\n                }`}\n              >\n                Short Break\n              </Button>\n              <Button\n                variant={currentMode === 'longBreak' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('longBreak')}\n                className={`flex-1 ${\n                  currentMode === 'longBreak'\n                    ? 'bg-white text-emerald-600 hover:bg-white/90'\n                    : 'text-white hover:bg-white/20'\n                }`}\n              >\n                Long Break\n              </Button>\n            </div>\n\n            <div className=\"flex justify-center items-center my-12\">\n              <div className=\"relative w-80 h-80\">\n                <svg className=\"w-full h-full transform -rotate-90\" viewBox=\"0 0 320 320\">\n                  {/* Background circle */}\n                  <circle\n                    cx=\"160\"\n                    cy=\"160\"\n                    r=\"140\"\n                    stroke=\"rgba(255, 255, 255, 0.1)\"\n                    strokeWidth=\"12\"\n                    fill=\"none\"\n                  />\n                  {/* Progress circle */}\n                  <motion.circle\n                    cx=\"160\"\n                    cy=\"160\"\n                    r=\"140\"\n                    stroke=\"url(#gradient)\"\n                    strokeWidth=\"12\"\n                    fill=\"none\"\n                    strokeLinecap=\"round\"\n                    strokeDasharray={2 * Math.PI * 140}\n                    initial={{ strokeDashoffset: 2 * Math.PI * 140 }}\n                    animate={{ \n                      strokeDashoffset: 2 * Math.PI * 140 * (1 - progress / 100)\n                    }}\n                    transition={{ duration: 0.5, ease: \"easeInOut\" }}\n                  />\n                  <defs>\n                    <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                      <stop offset=\"0%\" stopColor={currentMode === 'work' ? '#f43f5e' : currentMode === 'shortBreak' ? '#06b6d4' : '#10b981'} />\n                      <stop offset=\"50%\" stopColor={currentMode === 'work' ? '#ec4899' : currentMode === 'shortBreak' ? '#3b82f6' : '#14b8a6'} />\n                      <stop offset=\"100%\" stopColor={currentMode === 'work' ? '#a855f7' : currentMode === 'shortBreak' ? '#6366f1' : '#06b6d4'} />\n                    </linearGradient>\n                  </defs>\n                </svg>\n                {/* Timer display in center */}\n                <div className=\"absolute inset-0 flex flex-col items-center justify-center\">\n                  <motion.div\n                    key={timeLeft}\n                    initial={{ scale: 1 }}\n                    animate={{ scale: [1, 1.05, 1] }}\n                    transition={{ duration: 0.3 }}\n                    className=\"text-7xl font-bold text-white mb-2\"\n                  >\n                    {formatTime(timeLeft)}\n                  </motion.div>\n                  <div className=\"text-white/60 text-lg uppercase tracking-wider\">\n                    {currentMode === 'work' ? 'Focus Time' : currentMode === 'shortBreak' ? 'Short Break' : 'Long Break'}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"text-center mb-8\">\n              <motion.div\n                key={timeLeft}\n                initial={{ scale: 1 }}\n                animate={{ scale: [1, 1.05, 1] }}\n                transition={{ duration: 0.3 }}\n                className=\"text-7xl font-bold text-white mb-4\"\n              >\n                {formatTime(timeLeft)}\n              </motion.div>\n              <p className=\"text-white/80 text-xl capitalize\">\n                {currentMode === 'work' ? 'Focus Time' : currentMode === 'shortBreak' ? 'Short Break' : 'Long Break'}\n              </p>\n            </div>\n\n            <div className=\"flex justify-center gap-4 mb-6\">\n              <Button\n                onClick={handlePlayPause}\n                size=\"lg\"\n                className=\"bg-white/20 hover:bg-white/30 text-white backdrop-blur-sm border border-white/30 px-8\"\n              >\n                {isRunning ? (\n                  <>\n                    <Pause className=\"w-5 h-5 mr-2\" />\n                    Pause\n                  </>\n                ) : (\n                  <>\n                    <Play className=\"w-5 h-5 mr-2\" />\n                    Start\n                  </>\n                )}\n              </Button>\n              <Button\n                onClick={handleReset}\n                size=\"lg\"\n                variant=\"ghost\"\n                className=\"text-white hover:bg-white/20\"\n              >\n                <RotateCcw className=\"w-5 h-5 mr-2\" />\n                Reset\n              </Button>\n            </div>\n\n            <div className=\"text-center text-white/60\">\n              <p className=\"text-sm\">Completed Pomodoros: {completedPomodoros}</p>\n            </div>\n          </div>\n\n          \n<AnimatePresence>\n            {showSettings && (\n              <motion.div\n                initial={{ opacity: 0, y: 20, scale: 0.95 }}\n                animate={{ opacity: 1, y: 0, scale: 1 }}\n                exit={{ opacity: 0, y: 20, scale: 0.95 }}\n                transition={{ duration: 0.3, ease: \"easeOut\" }}\n                className=\"mt-6 backdrop-blur-xl bg-white/10 rounded-3xl p-8 shadow-2xl border border-white/20\"\n              >\n                <div className=\"flex justify-between items-center mb-6\">\n                  <h2 className=\"text-2xl font-bold text-white\">Settings</h2>\n                  <Button\n                    variant=\"ghost\"\n                    size=\"icon\"\n                    onClick={() => setShowSettings(false)}\n                    className=\"text-white hover:bg-white/20\"\n                  >\n                    <X className=\"w-5 h-5\" />\n                  </Button>\n                </div>\n\n                <SettingsForm\n                  settings={settings}\n                  onSave={handleSaveSettings}\n                  onCancel={() => setShowSettings(false)}\n                />\n              </motion.div>\n            )}\n          </AnimatePresence>\n\n          <AnimatePresence>\n            {showCompletion && (\n              <motion.div\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                exit={{ opacity: 0 }}\n                className=\"fixed inset-0 z-50 flex items-center justify-center pointer-events-none\"\n              >\n                {/* Confetti particles */}\n                {Array.from({ length: 100 }).map((_, i) => (\n                  <motion.div\n                    key={i}\n                    className=\"absolute w-3 h-3 rounded-full\"\n                    style={{\n                      background: [\n                        'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',\n                        'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)',\n                        'linear-gradient(135deg, #4facfe 0%, #00f2fe 100%)',\n                        'linear-gradient(135deg, #43e97b 0%, #38f9d7 100%)',\n                        'linear-gradient(135deg, #fa709a 0%, #fee140 100%)',\n                      ][i % 5],\n                      left: '50%',\n                      top: '50%',\n                    }}\n                    initial={{\n                      x: 0,\n                      y: 0,\n                      scale: 0,\n                      opacity: 1,\n                    }}\n                    animate={{\n                      x: (Math.random() - 0.5) * 1000,\n                      y: Math.random() * -800 + 200,\n                      scale: [0, 1, 0.8],\n                      opacity: [1, 1, 0],\n                      rotate: Math.random() * 720 - 360,\n                    }}\n                    transition={{\n                      duration: 2.5,\n                      ease: [0.25, 0.46, 0.45, 0.94],\n                      delay: Math.random() * 0.3,\n                    }}\n                  />\n                ))}\n                \n                {/* Celebration message */}\n                <motion.div\n                  initial={{ scale: 0, rotate: -180 }}\n                  animate={{ scale: 1, rotate: 0 }}\n                  exit={{ scale: 0, rotate: 180 }}\n                  transition={{ type: \"spring\", duration: 0.8 }}\n                  className=\"backdrop-blur-xl bg-white/20 rounded-3xl p-12 shadow-2xl border border-white/30 pointer-events-auto\"\n                >\n                  <motion.div\n                    animate={{\n                      scale: [1, 1.2, 1],\n                    }}\n                    transition={{\n                      duration: 0.5,\n                      repeat: Infinity,\n                      repeatDelay: 0.5,\n                    }}\n                    className=\"text-center\"\n                  >\n                    <div className=\"text-6xl mb-4\">\ud83c\udf89</div>\n                    <h2 className=\"text-4xl font-bold text-white mb-2\">\n                      {currentMode === 'work' ? 'Great Work!' : 'Break Complete!'}\n                    </h2>\n                    <p className=\"text-white/80 text-xl\">\n                      {currentMode === 'work' \n                        ? 'Time for a well-deserved break!' \n                        : 'Ready to focus again?'}\n                    </p>\n                  </motion.div>\n                </motion.div>\n              </motion.div>\n            )}\n          </AnimatePresence>\n\n          {/* Hidden audio element for completion sound */}\n          <audio\n            ref={audioRef}\n            src=\"data:audio/wav;base64,\n        </motion.div>\n      </div>\n\n    </div>\n  );\n}",
      "error": null,
      "overall_score": 53,
      "code_quality_score": 12,
      "architecture_score": 14,
      "performance_score": 11,
      "accessibility_score": 16,
      "metadata": {
        "document_id": "eval_room_5bfebd5dfc22",
        "prompt_category": "productivity",
        "prompt_complexity": 7.0
      }
    },
    {
      "prompt_id": "registration_page",
      "prompt_name": "User Registration Page",
      "mode": "parallel",
      "run_number": 23,
      "timestamp": "2025-10-14T01:31:35.704642",
      "response_time": 229.567636013031,
      "total_tokens": null,
      "response_content": "import { useState, useCallback } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { motion } from 'framer-motion';\nimport { Mail, Lock, User, Eye, EyeOff, CheckCircle2, AlertCircle } from 'lucide-react';\n\ninterface FormData {\n  fullName: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\ninterface FormErrors {\n  fullName?: string;\n  email?: string;\n  password?: string;\n  confirmPassword?: string;\n}\n\nexport default function RegistrationPage() {\n  const [formData, setFormData] = useState<FormData>({\n    fullName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n\n  const [errors, setErrors] = useState<FormErrors>({});\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n\n  const handleInputChange = useCallback((field: keyof FormData, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    setErrors(prev => ({ ...prev, [field]: undefined }));\n  }, []);\n\n  const togglePasswordVisibility = useCallback(() => {\n    setShowPassword(prev => !prev);\n  }, []);\n\n  const toggleConfirmPasswordVisibility = useCallback(() => {\n    setShowConfirmPassword(prev => !prev);\n  }, []);\n\n  const handleSubmit = useCallback((e: React.FormEvent) => {\n    e.preventDefault();\n        const newErrors: FormErrors = {};\n\n    // Validate full name\n    if (!formData.fullName.trim()) {\n      newErrors.fullName = 'Full name is required';\n    } else if (formData.fullName.trim().length < 2) {\n      newErrors.fullName = 'Full name must be at least 2 characters';\n    }\n\n    // Validate email\n    if (!formData.email.trim()) {\n      newErrors.email = 'Email is required';\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\n      newErrors.email = 'Please enter a valid email address';\n    }\n\n    // Validate password\n    if (!formData.password) {\n      newErrors.password = 'Password is required';\n    } else if (formData.password.length < 8) {\n      newErrors.password = 'Password must be at least 8 characters';\n    } else if (!/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/.test(formData.password)) {\n      newErrors.password = 'Password must contain uppercase, lowercase, and number';\n    }\n\n    // Validate confirm password\n    if (!formData.confirmPassword) {\n      newErrors.confirmPassword = 'Please confirm your password';\n    } else if (formData.password !== formData.confirmPassword) {\n      newErrors.confirmPassword = 'Passwords do not match';\n    }\n\n    // If there are errors, set them and return\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n\n    // Simulate submission\n    setIsSubmitting(true);\n    setErrors({});\n\n    setTimeout(() => {\n      setIsSubmitting(false);\n      setIsSuccess(true);\n      \n      // Reset form after success\n      setTimeout(() => {\n        setFormData({\n          fullName: '',\n          email: '',\n          password: '',\n          confirmPassword: ''\n        });\n        setIsSuccess(false);\n      }, 3000);\n    }, 2000);\n  }, [formData]);\n\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center p-4 bg-gradient-to-br from-purple-600 via-pink-500 to-orange-400 relative overflow-hidden\">\n            {/* Animated Background Orbs */}\n      <motion.div\n        className=\"absolute top-20 left-20 w-72 h-72 bg-purple-400 rounded-full mix-blend-multiply filter blur-xl opacity-70\"\n        animate={{\n          x: [0, 100, 0],\n          y: [0, -100, 0],\n          scale: [1, 1.2, 1],\n        }}\n        transition={{\n          duration: 8,\n          repeat: Infinity,\n          ease: \"easeInOut\"\n        }}\n      />\n      <motion.div\n        className=\"absolute top-40 right-20 w-72 h-72 bg-pink-400 rounded-full mix-blend-multiply filter blur-xl opacity-70\"\n        animate={{\n          x: [0, -100, 0],\n          y: [0, 100, 0],\n          scale: [1, 1.3, 1],\n        }}\n        transition={{\n          duration: 10,\n          repeat: Infinity,\n          ease: \"easeInOut\"\n        }}\n      />\n      <motion.div\n        className=\"absolute bottom-20 left-1/2 w-72 h-72 bg-orange-400 rounded-full mix-blend-multiply filter blur-xl opacity-70\"\n        animate={{\n          x: [0, 100, -100, 0],\n          y: [0, -50, 50, 0],\n          scale: [1, 1.1, 1.2, 1],\n        }}\n        transition={{\n          duration: 12,\n          repeat: Infinity,\n          ease: \"easeInOut\"\n        }}\n      />\n\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.6 }}\n        className=\"w-full max-w-md relative z-10\"\n      >\n        <Card className=\"backdrop-blur-sm bg-white/95 shadow-2xl border-0\">\n          <CardHeader className=\"space-y-1 text-center\">\n            <motion.div\n              initial={{ scale: 0 }}\n              animate={{ scale: 1 }}\n              transition={{ delay: 0.2, type: \"spring\", stiffness: 200 }}\n              className=\"mx-auto w-16 h-16 bg-gradient-to-br from-purple-600 to-pink-500 rounded-full flex items-center justify-center mb-4\"\n            >\n              <User className=\"w-8 h-8 text-white\" />\n            </motion.div>\n            <CardTitle className=\"text-3xl font-bold bg-gradient-to-r from-purple-600 to-pink-500 bg-clip-text text-transparent\">\n              Create Account\n            </CardTitle>\n            <CardDescription className=\"text-base\">\n              Join us today and start your journey\n            </CardDescription>\n          </CardHeader>\n\n          <CardContent>\n            {isSuccess ? (\n              <motion.div\n                initial={{ opacity: 0, scale: 0.8 }}\n                animate={{ opacity: 1, scale: 1 }}\n                className=\"text-center py-8\"\n              >\n                <motion.div\n                  initial={{ scale: 0 }}\n                  animate={{ scale: 1 }}\n                  transition={{ type: \"spring\", stiffness: 200, damping: 15 }}\n                  className=\"mb-6\"\n                >\n                  <CheckCircle2 className=\"w-20 h-20 text-green-500 mx-auto\" />\n                </motion.div>\n                <motion.h3\n                  initial={{ opacity: 0, y: 10 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ delay: 0.2 }}\n                  className=\"text-2xl font-bold text-gray-800 mb-2\"\n                >\n                  Welcome Aboard!\n                </motion.h3>\n                <motion.p\n                  initial={{ opacity: 0, y: 10 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ delay: 0.3 }}\n                  className=\"text-gray-600\"\n                >\n                  Your account has been created successfully. We're excited to have you with us!\n                </motion.p>\n              </motion.div>\n            ) : (\n              <form onSubmit={handleSubmit} className=\"space-y-4\">\n                <motion.div\n                  initial={{ opacity: 0, x: -20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ delay: 0.3 }}\n                  className=\"space-y-2\"\n                >\n                  <Label htmlFor=\"fullName\" className=\"text-sm font-medium\">\n                    Full Name\n                  </Label>\n                  <div className=\"relative\">\n                    <User className=\"absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-400\" />\n                    <Input\n                      id=\"fullName\"\n                      type=\"text\"\n                      placeholder=\"John Doe\"\n                      value={formData.fullName}\n                      onChange={(e) => handleInputChange('fullName', e.target.value)}\n                      className=\"pl-10\"\n                    />\n                  </div>\n\n                  {errors.fullName && (\n                    <motion.p\n                      initial={{ opacity: 0, y: -10 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      exit={{ opacity: 0 }}\n                      className=\"text-sm text-red-500 flex items-center gap-1\"\n                    >\n                      <AlertCircle className=\"w-4 h-4\" />\n                      {errors.fullName}\n                    </motion.p>\n                  )}\n                </motion.div>\n\n                <motion.div\n                  initial={{ opacity: 0, x: -20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ delay: 0.4 }}\n                  className=\"space-y-2\"\n                >\n                  <Label htmlFor=\"email\" className=\"text-sm font-medium\">\n                    Email Address\n                  </Label>\n                  <div className=\"relative\">\n                    <Mail className=\"absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-400\" />\n                    <Input\n                      id=\"email\"\n                      type=\"email\"\n                      placeholder=\"john@example.com\"\n                      value={formData.email}\n                      onChange={(e) => handleInputChange('email', e.target.value)}\n                      className=\"pl-10\"\n                    />\n                  </div>\n\n                  {errors.email && (\n                    <motion.div\n                      initial={{ opacity: 0, y: -10 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      className=\"flex items-center gap-1 text-red-500 text-sm\"\n                    >\n                      <AlertCircle className=\"w-4 h-4\" />\n                      <span>{errors.email}</span>\n                    </motion.div>\n                  )}\n                </motion.div>\n\n                <motion.div\n                  initial={{ opacity: 0, x: -20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ delay: 0.5 }}\n                  className=\"space-y-2\"\n                >\n                  <Label htmlFor=\"password\" className=\"text-sm font-medium\">\n                    Password\n                  </Label>\n                  <div className=\"relative\">\n                    <Lock className=\"absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-400\" />\n                    <Input\n                      id=\"password\"\n                      type={showPassword ? 'text' : 'password'}\n                      placeholder=\"\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\"\n                      value={formData.password}\n                      onChange={(e) => handleInputChange('password', e.target.value)}\n                      className=\"pl-10 pr-10\"\n                    />\n                    <button\n                      type=\"button\"\n                      onClick={togglePasswordVisibility}\n                      className=\"absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-600\"\n                    >\n                      {showPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n                    </button>\n                  </div>\n                  {errors.password && (\n                    <motion.p\n                      initial={{ opacity: 0, y: -10 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      className=\"text-sm text-red-500 flex items-center gap-1\"\n                    >\n                      <AlertCircle className=\"w-4 h-4\" />\n                      {errors.password}\n                    </motion.p>\n                  )}\n                  {errors.password && (\n                    <motion.p\n                      initial={{ opacity: 0, y: -10 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      exit={{ opacity: 0 }}\n                      className=\"text-sm text-red-500 flex items-center gap-1\"\n                    >\n                      <AlertCircle className=\"w-4 h-4\" />\n                      {errors.password}\n                    </motion.p>\n                  )}\n                                    {formData.password && (\n                    <motion.div\n                      initial={{ opacity: 0, height: 0 }}\n                      animate={{ opacity: 1, height: 'auto' }}\n                      exit={{ opacity: 0, height: 0 }}\n                      className=\"space-y-2 mt-2\"\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        {[...Array(4)].map((_, index) => {\n                          const strength = (() => {\n                            let score = 0;\n                            if (formData.password.length >= 8) score++;\n                            if (/[a-z]/.test(formData.password)) score++;\n                            if (/[A-Z]/.test(formData.password)) score++;\n                            if (/\\d/.test(formData.password)) score++;\n                            if (/[^a-zA-Z0-9]/.test(formData.password)) score++;\n                            return Math.min(4, score);\n                          })();\n\n                          const getColor = () => {\n                            if (strength <= 1) return 'bg-red-500';\n                            if (strength === 2) return 'bg-orange-500';\n                            if (strength === 3) return 'bg-yellow-500';\n                            return 'bg-green-500';\n                          };\n\n                          return (\n                            <motion.div\n                              key={index}\n                              initial={{ scaleX: 0 }}\n                              animate={{ scaleX: index < strength ? 1 : 0 }}\n                              transition={{ duration: 0.3, delay: index * 0.1 }}\n                              className={`h-1 flex-1 rounded-full ${\n                                index < strength ? getColor() : 'bg-gray-200'\n                              }`}\n                              style={{ transformOrigin: 'left' }}\n                            />\n                          );\n                        })}\n                      </div>\n                      <p className=\"text-xs text-gray-600\">\n                        {(() => {\n                          let score = 0;\n                          if (formData.password.length >= 8) score++;\n                          if (/[a-z]/.test(formData.password)) score++;\n                          if (/[A-Z]/.test(formData.password)) score++;\n                          if (/\\d/.test(formData.password)) score++;\n                          if (/[^a-zA-Z0-9]/.test(formData.password)) score++;\n                          const strength = Math.min(4, score);\n                          \n                          if (strength <= 1) return 'Weak password';\n                          if (strength === 2) return 'Fair password';\n                          if (strength === 3) return 'Good password';\n                          return 'Strong password';\n                        })()}\n                      </p>\n                    </motion.div>\n                  )}</parameter>\n                </motion.div>\n\n                <motion.div\n                  initial={{ opacity: 0, x: -20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ delay: 0.6 }}\n                  className=\"space-y-2\"\n                >\n                  <Label htmlFor=\"confirmPassword\" className=\"text-sm font-medium\">\n                    Confirm Password\n                  </Label>\n                  <div className=\"relative\">\n                    <Lock className=\"absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-400\" />\n                    <Input\n                      id=\"confirmPassword\"\n                      type={showConfirmPassword ? 'text' : 'password'}\n                      placeholder=\"\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\"\n                      value={formData.confirmPassword}\n                      onChange={(e) => handleInputChange('confirmPassword', e.target.value)}\n                      className=\"pl-10 pr-10\"\n                    />\n                    <button\n                      type=\"button\"\n                      onClick={toggleConfirmPasswordVisibility}\n                      className=\"absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-600\"\n                    >\n                      {showConfirmPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n                    </button>\n                  </div>\n                  {errors.confirmPassword && (\n                    <motion.p\n                      initial={{ opacity: 0, y: -10 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      exit={{ opacity: 0 }}\n                      className=\"text-sm text-red-500 flex items-center gap-1\"\n                    >\n                      <AlertCircle className=\"w-4 h-4\" />\n                      {errors.confirmPassword}\n                    </motion.p>\n                  )}\n                  {errors.confirmPassword && (\n                    <motion.p\n                      initial={{ opacity: 0, y: -10 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      exit={{ opacity: 0 }}\n                      className=\"text-sm text-red-500 flex items-center gap-1\"\n                    >\n                      <AlertCircle className=\"w-4 h-4\" />\n                      {errors.confirmPassword}\n                    </motion.p>\n                  )}\n                </motion.div>\n\n                <motion.div\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ delay: 0.7 }}\n                >\n                  <Button\n                    type=\"submit\"\n                    disabled={isSubmitting}\n                    className=\"w-full bg-gradient-to-r from-purple-600 to-pink-500 hover:from-purple-700 hover:to-pink-600 text-white font-semibold py-6 text-base\"\n                  >\n                    {isSubmitting ? (\n                      <motion.div\n                        animate={{ rotate: 360 }}\n                        transition={{ duration: 1, repeat: Infinity, ease: \"linear\" }}\n                        className=\"inline-block\"\n                      >\n                        <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\" fill=\"none\">\n                          <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\" />\n                          <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\" />\n                        </svg>\n                      </motion.div>\n                    ) : (\n                      \"Create Account\"\n                    )}\n                  </Button>\n                </motion.div>\n              </form>\n            )}\n          </CardContent>\n\n          <CardFooter className=\"flex flex-col space-y-4\">\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ delay: 0.8 }}\n              className=\"text-center text-sm text-gray-600\"\n            >\n              Already have an account?{' '}\n              <a href=\"#\" className=\"text-purple-600 hover:text-purple-700 font-semibold\">\n                Sign in\n              </a>\n            </motion.div>\n          </CardFooter>\n        </Card>\n      </motion.div>\n    </div>\n  );\n}",
      "error": null,
      "overall_score": 65,
      "code_quality_score": 16,
      "architecture_score": 14,
      "performance_score": 17,
      "accessibility_score": 18,
      "metadata": {
        "document_id": "eval_room_92ce7573b7ef",
        "prompt_category": "simple",
        "prompt_complexity": 3.0
      }
    },
    {
      "prompt_id": "pomodoro_timer",
      "prompt_name": "Pomodoro Timer",
      "mode": "parallel",
      "run_number": 8,
      "timestamp": "2025-10-14T02:15:49.018517",
      "response_time": 424.8043463230133,
      "total_tokens": null,
      "response_content": "import { useState, useCallback, useEffect, useRef } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Play, Pause, RotateCcw, Settings } from 'lucide-react';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { motion, AnimatePresence } from 'framer-motion';\n\ninterface TimerMode {\n  type: 'work' | 'shortBreak' | 'longBreak';\n  duration: number;\n  label: string;\n}\n\ninterface TimerSettings {\n  workDuration: number;\n  shortBreakDuration: number;\n  longBreakDuration: number;\n  longBreakInterval: number;\n}\n\ninterface Particle {\n  id: number;\n  x: number;\n  y: number;\n  size: number;\n  duration: number;\n  delay: number;\n}\n\nconst defaultSettings: TimerSettings = {\n  workDuration: 25,\n  shortBreakDuration: 5,\n  longBreakDuration: 15,\n  longBreakInterval: 4\n};\n\nconst timerModes: Record<string, { colors: string; gradient: string }> = {\n  work: {\n    colors: 'from-rose-500 via-pink-500 to-purple-500',\n    gradient: 'bg-gradient-to-br from-rose-500/20 via-pink-500/20 to-purple-500/20'\n  },\n  shortBreak: {\n    colors: 'from-cyan-500 via-blue-500 to-indigo-500',\n    gradient: 'bg-gradient-to-br from-cyan-500/20 via-blue-500/20 to-indigo-500/20'\n  },\n  longBreak: {\n    colors: 'from-emerald-500 via-teal-500 to-cyan-500',\n    gradient: 'bg-gradient-to-br from-emerald-500/20 via-teal-500/20 to-cyan-500/20'\n  }\n};\n\nexport default function PomodoroTimer() {\n  const [settings, setSettings] = useState<TimerSettings>(defaultSettings);\n  const [currentMode, setCurrentMode] = useState<'work' | 'shortBreak' | 'longBreak'>('work');\n  const [timeLeft, setTimeLeft] = useState(settings.workDuration * 60);\n  const [isRunning, setIsRunning] = useState(false);\n  const [completedPomodoros, setCompletedPomodoros] = useState(0);\n  const [showSettings, setShowSettings] = useState(false);\n  const [showCompletion, setShowCompletion] = useState(false);\n  const [particles, setParticles] = useState<Particle[]>([]);\n  \n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n  const audioRef = useRef<HTMLAudioElement | null>(null);\n\n  const totalTime = currentMode === 'work' \n    ? settings.workDuration * 60 \n    : currentMode === 'shortBreak'\n    ? settings.shortBreakDuration * 60\n    : settings.longBreakDuration * 60;\n\n  const progress = ((totalTime - timeLeft) / totalTime) * 100;\n\n  useEffect(() => {\n    const generatedParticles: Particle[] = Array.from({ length: 50 }, (_, i) => ({\n      id: i,\n      x: Math.random() * 100,\n      y: Math.random() * 100,\n      size: Math.random() * 4 + 2,\n      duration: Math.random() * 20 + 10,\n      delay: Math.random() * 5\n    }));\n    setParticles(generatedParticles);\n  }, []);\n\n  useEffect(() => {\n    if (isRunning && timeLeft > 0) {\n      intervalRef.current = setInterval(() => {\n        setTimeLeft((prev) => {\n          if (prev <= 1) {\n            setIsRunning(false);\n            \n            // Play completion sound\n            if (audioRef.current) {\n              audioRef.current.play().catch(() => {});\n            }\n            \n            // Show completion animation\n            setShowCompletion(true);\n            setTimeout(() => setShowCompletion(false), 2000);\n            \n            // Auto-switch to next mode\n            if (currentMode === 'work') {\n              setCompletedPomodoros((prev) => prev + 1);\n              const nextPomodoros = completedPomodoros + 1;\n              \n              if (nextPomodoros % settings.longBreakInterval === 0) {\n                setCurrentMode('longBreak');\n                return settings.longBreakDuration * 60;\n              } else {\n                setCurrentMode('shortBreak');\n                return settings.shortBreakDuration * 60;\n              }\n            } else {\n              setCurrentMode('work');\n              return settings.workDuration * 60;\n            }\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } else {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n        intervalRef.current = null;\n      }\n    }\n    \n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [isRunning, timeLeft, currentMode, completedPomodoros, settings]);\n\n  const handlePlayPause = useCallback(() => {\n    setIsRunning(!isRunning);\n  }, [isRunning]);\n\n  const handleReset = useCallback(() => {\n    setIsRunning(false);\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n    const duration = currentMode === 'work' \n      ? settings.workDuration * 60 \n      : currentMode === 'shortBreak'\n      ? settings.shortBreakDuration * 60\n      : settings.longBreakDuration * 60;\n    setTimeLeft(duration);\n  }, [currentMode, settings]);\n\n  const handleModeSwitch = useCallback((mode: 'work' | 'shortBreak' | 'longBreak') => {\n    setIsRunning(false);\n    setCurrentMode(mode);\n    const newDuration = mode === 'work' \n      ? settings.workDuration * 60 \n      : mode === 'shortBreak'\n      ? settings.shortBreakDuration * 60\n      : settings.longBreakDuration * 60;\n    setTimeLeft(newDuration);\n  }, [settings]);\n\n  const formatTime = useCallback((seconds: number): string => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  }, []);\n\n  const handleSaveSettings = useCallback((newSettings: TimerSettings) => {\n    setSettings(newSettings);\n    setShowSettings(false);\n    \n    // Update current timer if not running\n    if (!isRunning) {\n      const duration = currentMode === 'work' \n        ? newSettings.workDuration * 60 \n        : currentMode === 'shortBreak'\n        ? newSettings.shortBreakDuration * 60\n        : newSettings.longBreakDuration * 60;\n      setTimeLeft(duration);\n    }\n  }, [isRunning, currentMode]);\n\n  return (\n    <div className={`min-h-screen relative overflow-hidden transition-all duration-1000 ${timerModes[currentMode].gradient}`}>\n      <div className=\"absolute inset-0 overflow-hidden pointer-events-none\">\n        {particles.map((particle) => (\n          <motion.div\n            key={particle.id}\n            className=\"absolute rounded-full bg-white/30 backdrop-blur-sm\"\n            style={{\n              left: `${particle.x}%`,\n              top: `${particle.y}%`,\n              width: particle.size,\n              height: particle.size,\n            }}\n            animate={{\n              y: [0, -30, 0],\n              opacity: [0.2, 0.6, 0.2],\n              scale: [1, 1.2, 1],\n            }}\n            transition={{\n              duration: particle.duration,\n              delay: particle.delay,\n              repeat: Infinity,\n              ease: \"easeInOut\",\n            }}\n          />\n        ))}\n      </div>\n      \n      <div className=\"relative z-10 min-h-screen flex flex-col items-center justify-center p-8\">\n        <motion.div\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"w-full max-w-2xl\"\n        >\n          <div className=\"backdrop-blur-xl bg-white/10 rounded-3xl p-8 shadow-2xl border border-white/20\">\n            <div className=\"flex justify-between items-center mb-8\">\n              <h1 className=\"text-4xl font-bold text-white\">Pomodoro Timer</h1>\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                onClick={() => setShowSettings(!showSettings)}\n                className=\"text-white hover:bg-white/20\"\n              >\n                <Settings className=\"w-6 h-6\" />\n              </Button>\n            </div>\n\n                        <div className=\"flex gap-2 mb-8\">\n              <Button\n                variant={currentMode === 'work' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('work')}\n                className={`flex-1 ${\n                  currentMode === 'work'\n                    ? 'bg-white text-rose-600 hover:bg-white/90'\n                    : 'text-white hover:bg-white/20'\n                }`}\n              >\n                Work\n              </Button>\n              <Button\n                variant={currentMode === 'shortBreak' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('shortBreak')}\n                className={`flex-1 ${\n                  currentMode === 'shortBreak'\n                    ? 'bg-white text-cyan-600 hover:bg-white/90'\n                    : 'text-white hover:bg-white/20'\n                }`}\n              >\n                Short Break\n              </Button>\n              <Button\n                variant={currentMode === 'longBreak' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('longBreak')}\n                className={`flex-1 ${\n                  currentMode === 'longBreak'\n                    ? 'bg-white text-emerald-600 hover:bg-white/90'\n                    : 'text-white hover:bg-white/20'\n                }`}\n              >\n                Long Break\n              </Button>\n            </div>\n\n            <div className=\"flex justify-center items-center my-12\">\n              <div className=\"relative w-80 h-80\">\n                <svg className=\"w-full h-full transform -rotate-90\" viewBox=\"0 0 320 320\">\n                  {/* Background circle */}\n                  <circle\n                    cx=\"160\"\n                    cy=\"160\"\n                    r=\"140\"\n                    stroke=\"rgba(255, 255, 255, 0.1)\"\n                    strokeWidth=\"12\"\n                    fill=\"none\"\n                  />\n                  {/* Progress circle */}\n                  <motion.circle\n                    cx=\"160\"\n                    cy=\"160\"\n                    r=\"140\"\n                    stroke=\"url(#gradient)\"\n                    strokeWidth=\"12\"\n                    fill=\"none\"\n                    strokeLinecap=\"round\"\n                    strokeDasharray={2 * Math.PI * 140}\n                    initial={{ strokeDashoffset: 2 * Math.PI * 140 }}\n                    animate={{ \n                      strokeDashoffset: 2 * Math.PI * 140 * (1 - progress / 100)\n                    }}\n                    transition={{ duration: 0.5, ease: \"easeInOut\" }}\n                  />\n                  {/* Gradient definition */}\n                  <defs>\n                    <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                      <stop offset=\"0%\" stopColor=\"rgba(255, 255, 255, 0.9)\" />\n                      <stop offset=\"50%\" stopColor=\"rgba(255, 255, 255, 0.7)\" />\n                      <stop offset=\"100%\" stopColor=\"rgba(255, 255, 255, 0.5)\" />\n                    </linearGradient>\n                  </defs>\n                </svg>\n                {/* Timer display in center */}\n                <div className=\"absolute inset-0 flex flex-col items-center justify-center\">\n                  <motion.div\n                    key={timeLeft}\n                    initial={{ scale: 1 }}\n                    animate={{ scale: [1, 1.05, 1] }}\n                    transition={{ duration: 0.3 }}\n                    className=\"text-8xl font-bold text-white tracking-tight\"\n                  >\n                    {formatTime(timeLeft)}\n                  </motion.div>\n                  <p className=\"text-white/70 text-lg mt-4 capitalize\">\n                    {currentMode === 'work' ? 'Focus Time' : currentMode === 'shortBreak' ? 'Short Break' : 'Long Break'}\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"text-center mb-8\">\n              <motion.div\n                key={timeLeft}\n                initial={{ scale: 1 }}\n                animate={{ scale: [1, 1.05, 1] }}\n                transition={{ duration: 0.3 }}\n                className=\"text-7xl font-bold text-white mb-4\"\n              >\n                {formatTime(timeLeft)}\n              </motion.div>\n              <p className=\"text-white/80 text-xl capitalize\">\n                {currentMode === 'work' ? 'Focus Time' : currentMode === 'shortBreak' ? 'Short Break' : 'Long Break'}\n              </p>\n            </div>\n\n            <div className=\"flex justify-center gap-4 mb-6\">\n              <Button\n                onClick={handlePlayPause}\n                size=\"lg\"\n                className=\"bg-white/20 hover:bg-white/30 text-white backdrop-blur-sm border border-white/30 px-8\"\n              >\n                {isRunning ? (\n                  <>\n                    <Pause className=\"w-5 h-5 mr-2\" />\n                    Pause\n                  </>\n                ) : (\n                  <>\n                    <Play className=\"w-5 h-5 mr-2\" />\n                    Start\n                  </>\n                )}\n              </Button>\n              <Button\n                onClick={handleReset}\n                size=\"lg\"\n                variant=\"ghost\"\n                className=\"text-white hover:bg-white/20\"\n              >\n                <RotateCcw className=\"w-5 h-5 mr-2\" />\n                Reset\n              </Button>\n            </div>\n\n            <div className=\"text-center text-white/60\">\n              <p>Completed Pomodoros: {completedPomodoros}</p>\n            </div>\n          </div>\n\n          <AnimatePresence>\n            {showSettings && (\n              <motion.div\n                initial={{ opacity: 0, y: 20, scale: 0.95 }}\n                animate={{ opacity: 1, y: 0, scale: 1 }}\n                exit={{ opacity: 0, y: 20, scale: 0.95 }}\n                transition={{ duration: 0.3, ease: \"easeOut\" }}\n                className=\"mt-6 backdrop-blur-xl bg-white/10 rounded-3xl p-8 shadow-2xl border border-white/20\"\n              >\n                <h2 className=\"text-2xl font-bold text-white mb-6\">Timer Settings</h2>\n                \n                <div className=\"space-y-6\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"work-duration\" className=\"text-white text-lg\">\n                      Work Duration (minutes)\n                    </Label>\n                    <Input\n                      id=\"work-duration\"\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"60\"\n                      defaultValue={settings.workDuration}\n                      onChange={(e) => {\n                        const value = parseInt(e.target.value) || 1;\n                        setSettings(prev => ({ ...prev, workDuration: value }));\n                      }}\n                      className=\"bg-white/20 border-white/30 text-white placeholder:text-white/50 backdrop-blur-sm text-lg\"\n                    />\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"short-break-duration\" className=\"text-white text-lg\">\n                      Short Break Duration (minutes)\n                    </Label>\n                    <Input\n                      id=\"short-break-duration\"\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"30\"\n                      defaultValue={settings.shortBreakDuration}\n                      onChange={(e) => {\n                        const value = parseInt(e.target.value) || 1;\n                        setSettings(prev => ({ ...prev, shortBreakDuration: value }));\n                      }}\n                      className=\"bg-white/20 border-white/30 text-white placeholder:text-white/50 backdrop-blur-sm text-lg\"\n                    />\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"long-break-duration\" className=\"text-white text-lg\">\n                      Long Break Duration (minutes)\n                    </Label>\n                    <Input\n                      id=\"long-break-duration\"\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"60\"\n                      defaultValue={settings.longBreakDuration}\n                      onChange={(e) => {\n                        const value = parseInt(e.target.value) || 1;\n                        setSettings(prev => ({ ...prev, longBreakDuration: value }));\n                      }}\n                      className=\"bg-white/20 border-white/30 text-white placeholder:text-white/50 backdrop-blur-sm text-lg\"\n                    />\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"long-break-interval\" className=\"text-white text-lg\">\n                      Long Break Interval (pomodoros)\n                    </Label>\n                    <Input\n                      id=\"long-break-interval\"\n                      type=\"number\"\n                      min=\"2\"\n                      max=\"10\"\n                      defaultValue={settings.longBreakInterval}\n                      onChange={(e) => {\n                        const value = parseInt(e.target.value) || 2;\n                        setSettings(prev => ({ ...prev, longBreakInterval: value }));\n                      }}\n                      className=\"bg-white/20 border-white/30 text-white placeholder:text-white/50 backdrop-blur-sm text-lg\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"flex gap-4 mt-8\">\n                  <Button\n                    onClick={() => handleSaveSettings(settings)}\n                    className=\"flex-1 bg-white/20 hover:bg-white/30 text-white backdrop-blur-sm border border-white/30 text-lg py-6\"\n                  >\n                    Save Settings\n                  </Button>\n                  <Button\n                    onClick={() => {\n                      setSettings(settings);\n                      setShowSettings(false);\n                    }}\n                    variant=\"ghost\"\n                    className=\"flex-1 text-white hover:bg-white/20 text-lg py-6\"\n                  >\n                    Cancel\n                  </Button>\n                </div>\n              </motion.div>\n            )}\n          </AnimatePresence>\n\n          <AnimatePresence>\n            {showCompletion && (\n              <motion.div\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                exit={{ opacity: 0 }}\n                className=\"fixed inset-0 z-50 flex items-center justify-center pointer-events-none\"\n              >\n                {/* Confetti particles */}\n                {Array.from({ length: 100 }, (_, i) => {\n                  const angle = (Math.PI * 2 * i) / 100;\n                  const velocity = Math.random() * 300 + 200;\n                  const x = Math.cos(angle) * velocity;\n                  const y = Math.sin(angle) * velocity - 100;\n                  const rotation = Math.random() * 720 - 360;\n                  const colors = ['#ef4444', '#f59e0b', '#10b981', '#3b82f6', '#8b5cf6', '#ec4899'];\n                  const color = colors[Math.floor(Math.random() * colors.length)];\n                  \n                  return (\n                    <motion.div\n                      key={i}\n                      className=\"absolute\"\n                      style={{\n                        left: '50%',\n                        top: '50%',\n                        width: Math.random() * 12 + 6,\n                        height: Math.random() * 12 + 6,\n                        backgroundColor: color,\n                        borderRadius: Math.random() > 0.5 ? '50%' : '0%',\n                      }}\n                      initial={{ x: 0, y: 0, opacity: 1, rotate: 0 }}\n                      animate={{\n                        x: x,\n                        y: y,\n                        opacity: 0,\n                        rotate: rotation,\n                      }}\n                      transition={{\n                        duration: Math.random() * 1 + 1.5,\n                        ease: [0.25, 0.46, 0.45, 0.94],\n                      }}\n                    />\n                  );\n                })}\n                \n                {/* Center celebration text */}\n                <motion.div\n                  initial={{ scale: 0, rotate: -180 }}\n                  animate={{ scale: 1, rotate: 0 }}\n                  exit={{ scale: 0, rotate: 180 }}\n                  transition={{ type: \"spring\", stiffness: 200, damping: 15 }}\n                  className=\"text-6xl font-bold text-white drop-shadow-2xl\"\n                >\n                  \ud83c\udf89 Complete! \ud83c\udf89\n                </motion.div>\n                \n                {/* Radial burst effect */}\n                <motion.div\n                  initial={{ scale: 0, opacity: 0.8 }}\n                  animate={{ scale: 3, opacity: 0 }}\n                  transition={{ duration: 1, ease: \"easeOut\" }}\n                  className=\"absolute w-64 h-64 rounded-full bg-gradient-to-r from-yellow-400 via-pink-500 to-purple-500\"\n                />\n              </motion.div>\n            )}\n          </AnimatePresence>\n\n          {/* Hidden audio element for completion sound */}\n          <audio\n            ref={audioRef}\n            src=\"data:audio/wav;base64,UklGRnoGAABXQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YQoGAACBgoOEhYaHiImKi4yNjo+QkZKTlJWWl5iZmpucnZ6foKGio6SlpqeoqaqrrK2ur7CxsrO0tba3uLm6u7y9vr/AwcLDxMXGx8jJysvMzc7P0NHS09TV1tfY2drb3N3e3+Dh4uPk5ebn6Onq6+zt7u/w8fLz9PX29/j5+vv8/f7/AAECAwQFBgcICQoLDA0ODxAREhMUFRYXGBkaGxwdHh8gISIjJCUmJygpKissLS4vMDEyMzQ1Njc4OTo7PD0+P0BBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWltcXV5fYGFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6e3x9fn+AgYKDhIWGh4iJiouMjY6PkJGSk5SVlpeYmZqbnJ2en6ChoqOkpaanqKmqq6ytrq+wsbKztLW2t7i5uru8vb6/wMHCw8TFxsfIycrLzM3Oz9DR0tPU1dbX2Nna29zd3t/g4eLj5OXm5+jp6uvs7e7v8PHy8/T19vf4+fr7/P3+/w==\"\n          />\n        </motion.div>\n      </div>\n    </div>\n  );\n}",
      "error": null,
      "overall_score": 59,
      "code_quality_score": 18,
      "architecture_score": 14,
      "performance_score": 15,
      "accessibility_score": 12,
      "metadata": {
        "document_id": "eval_room_7ca5940914d3",
        "prompt_category": "productivity",
        "prompt_complexity": 7.0
      }
    },
    {
      "prompt_id": "pomodoro_timer",
      "prompt_name": "Pomodoro Timer",
      "mode": "parallel",
      "run_number": 23,
      "timestamp": "2025-10-14T04:16:00.481805",
      "response_time": 224.55418515205383,
      "total_tokens": null,
      "response_content": "import { useState, useCallback, useEffect, useRef } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Play, Pause, RotateCcw, Settings } from 'lucide-react';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { motion, AnimatePresence } from 'framer-motion';\n\ninterface TimerMode {\n  type: 'work' | 'shortBreak' | 'longBreak';\n  duration: number;\n  label: string;\n}\n\ninterface TimerSettings {\n  workDuration: number;\n  shortBreakDuration: number;\n  longBreakDuration: number;\n  longBreakInterval: number;\n}\n\ninterface Particle {\n  id: number;\n  x: number;\n  y: number;\n  size: number;\n  duration: number;\n  delay: number;\n}\n\nconst defaultSettings: TimerSettings = {\n  workDuration: 25,\n  shortBreakDuration: 5,\n  longBreakDuration: 15,\n  longBreakInterval: 4\n};\n\nconst timerModes: Record<string, { colors: string; gradient: string }> = {\n  work: {\n    colors: 'from-rose-500 via-pink-500 to-purple-500',\n    gradient: 'bg-gradient-to-br from-rose-500/20 via-pink-500/20 to-purple-500/20'\n  },\n  shortBreak: {\n    colors: 'from-cyan-500 via-blue-500 to-indigo-500',\n    gradient: 'bg-gradient-to-br from-cyan-500/20 via-blue-500/20 to-indigo-500/20'\n  },\n  longBreak: {\n    colors: 'from-emerald-500 via-teal-500 to-cyan-500',\n    gradient: 'bg-gradient-to-br from-emerald-500/20 via-teal-500/20 to-cyan-500/20'\n  }\n};\n\nexport default function PomodoroTimer() {\n  const [settings, setSettings] = useState<TimerSettings>(defaultSettings);\n  const [currentMode, setCurrentMode] = useState<'work' | 'shortBreak' | 'longBreak'>('work');\n  const [timeLeft, setTimeLeft] = useState(settings.workDuration * 60);\n  const [isRunning, setIsRunning] = useState(false);\n  const [completedPomodoros, setCompletedPomodoros] = useState(0);\n  const [showSettings, setShowSettings] = useState(false);\n  const [showCompletion, setShowCompletion] = useState(false);\n  const [particles, setParticles] = useState<Particle[]>([]);\n  \n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n  const audioRef = useRef<HTMLAudioElement | null>(null);\n\n  const totalTime = currentMode === 'work' \n    ? settings.workDuration * 60 \n    : currentMode === 'shortBreak'\n    ? settings.shortBreakDuration * 60\n    : settings.longBreakDuration * 60;\n\n  const progress = ((totalTime - timeLeft) / totalTime) * 100;\n\n  useEffect(() => {\n    const generatedParticles: Particle[] = Array.from({ length: 50 }, (_, i) => ({\n      id: i,\n      x: Math.random() * 100,\n      y: Math.random() * 100,\n      size: Math.random() * 4 + 2,\n      duration: Math.random() * 20 + 10,\n      delay: Math.random() * 5\n    }));\n    setParticles(generatedParticles);\n  }, []);\n  useEffect(() => {\n    if (isRunning && timeLeft > 0) {\n      intervalRef.current = setInterval(() => {\n        setTimeLeft((prev) => prev - 1);\n      }, 1000);\n    } else if (timeLeft === 0) {\n      setIsRunning(false);\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n        intervalRef.current = null;\n      }\n      \n      if (currentMode === 'work') {\n        const newCompletedCount = completedPomodoros + 1;\n        setCompletedPomodoros(newCompletedCount);\n        setShowCompletion(true);\n        setTimeout(() => setShowCompletion(false), 3000);\n        \n        if (newCompletedCount % settings.longBreakInterval === 0) {\n          setCurrentMode('longBreak');\n          setTimeLeft(settings.longBreakDuration * 60);\n        } else {\n          setCurrentMode('shortBreak');\n          setTimeLeft(settings.shortBreakDuration * 60);\n        }\n      } else {\n        setCurrentMode('work');\n        setTimeLeft(settings.workDuration * 60);\n      }\n    }\n\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [isRunning, timeLeft, currentMode, completedPomodoros, settings]);\n  useEffect(() => {\n    if (isRunning && timeLeft > 0) {\n      intervalRef.current = setInterval(() => {\n        setTimeLeft((prev) => prev - 1);\n      }, 1000);\n    } else if (timeLeft === 0 && isRunning) {\n      setIsRunning(false);\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n        intervalRef.current = null;\n      }\n      \n      setShowCompletion(true);\n      \n      if (audioRef.current) {\n        audioRef.current.play().catch(() => {});\n      }\n      \n      setTimeout(() => {\n        setShowCompletion(false);\n      }, 4000);\n      \n      if (currentMode === 'work') {\n        const newCompletedCount = completedPomodoros + 1;\n        setCompletedPomodoros(newCompletedCount);\n        \n        if (newCompletedCount % settings.longBreakInterval === 0) {\n          handleModeSwitch('longBreak');\n        } else {\n          handleModeSwitch('shortBreak');\n        }\n      } else {\n        handleModeSwitch('work');\n      }\n    }\n    \n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [isRunning, timeLeft, currentMode, completedPomodoros, settings, handleModeSwitch]);\n\n  useEffect(() => {\n    if (isRunning && timeLeft > 0) {\n      intervalRef.current = setInterval(() => {\n        setTimeLeft(prev => {\n          if (prev <= 1) {\n            // Timer completed\n            setIsRunning(false);\n            setShowCompletion(true);\n            \n            // Play completion sound\n            if (audioRef.current) {\n              audioRef.current.play().catch(err => console.log('Audio play failed:', err));\n            }\n            \n            // Auto-switch to next mode\n            if (currentMode === 'work') {\n              const newCompletedCount = completedPomodoros + 1;\n              setCompletedPomodoros(newCompletedCount);\n              \n              // Check if it's time for long break\n              if (newCompletedCount % settings.longBreakInterval === 0) {\n                setCurrentMode('longBreak');\n                setTimeLeft(settings.longBreakDuration * 60);\n              } else {\n                setCurrentMode('shortBreak');\n                setTimeLeft(settings.shortBreakDuration * 60);\n              }\n            } else {\n              // Break completed, switch to work\n              setCurrentMode('work');\n              setTimeLeft(settings.workDuration * 60);\n            }\n            \n            // Hide completion animation after 3 seconds\n            setTimeout(() => setShowCompletion(false), 3000);\n            \n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } else {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n        intervalRef.current = null;\n      }\n    }\n    \n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [isRunning, timeLeft, currentMode, completedPomodoros, settings]);\n\n  const handlePlayPause = useCallback(() => {\n    setIsRunning(!isRunning);\n  }, [isRunning]);\n\n  const handleReset = useCallback(() => {\n    setIsRunning(false);\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n    const duration = currentMode === 'work' \n      ? settings.workDuration * 60 \n      : currentMode === 'shortBreak'\n      ? settings.shortBreakDuration * 60\n      : settings.longBreakDuration * 60;\n    setTimeLeft(duration);\n  }, [currentMode, settings]);\n\n  const handleModeSwitch = useCallback((mode: 'work' | 'shortBreak' | 'longBreak') => {\n    setIsRunning(false);\n    setCurrentMode(mode);\n    const newDuration = mode === 'work' \n      ? settings.workDuration * 60 \n      : mode === 'shortBreak'\n      ? settings.shortBreakDuration * 60\n      : settings.longBreakDuration * 60;\n    setTimeLeft(newDuration);\n  }, [settings]);\n\n  const formatTime = useCallback((seconds: number): string => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  }, []);\n\n  return (\n    <div className={`min-h-screen relative overflow-hidden transition-all duration-1000 ${timerModes[currentMode].gradient}`}>\n      <div className=\"absolute inset-0 overflow-hidden pointer-events-none\">\n        {particles.map((particle) => (\n          <motion.div\n            key={particle.id}\n            className=\"absolute rounded-full bg-white/30 backdrop-blur-sm\"\n            style={{\n              left: `${particle.x}%`,\n              top: `${particle.y}%`,\n              width: particle.size,\n              height: particle.size,\n            }}\n            animate={{\n              y: [0, -30, 0],\n              opacity: [0.2, 0.6, 0.2],\n              scale: [1, 1.2, 1],\n            }}\n            transition={{\n              duration: particle.duration,\n              delay: particle.delay,\n              repeat: Infinity,\n              ease: \"easeInOut\",\n            }}\n          />\n        ))}\n      </div>\n      \n      <div className=\"relative z-10 min-h-screen flex flex-col items-center justify-center p-8\">\n        <motion.div\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"w-full max-w-2xl\"\n        >\n          <div className=\"backdrop-blur-xl bg-white/10 rounded-3xl p-8 shadow-2xl border border-white/20\">\n            <div className=\"flex justify-between items-center mb-8\">\n              <h1 className=\"text-4xl font-bold text-white\">Pomodoro Timer</h1>\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                onClick={() => setShowSettings(!showSettings)}\n                className=\"text-white hover:bg-white/20\"\n              >\n                <Settings className=\"w-6 h-6\" />\n              </Button>\n            </div>\n\n            \n<div className=\"flex gap-2 mb-8\">\n              <Button\n                variant={currentMode === 'work' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('work')}\n                className={currentMode === 'work' \n                  ? 'bg-white/30 text-white hover:bg-white/40 backdrop-blur-sm border border-white/30' \n                  : 'text-white/70 hover:bg-white/10 hover:text-white'}\n              >\n                Work\n              </Button>\n              <Button\n                variant={currentMode === 'shortBreak' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('shortBreak')}\n                className={currentMode === 'shortBreak' \n                  ? 'bg-white/30 text-white hover:bg-white/40 backdrop-blur-sm border border-white/30' \n                  : 'text-white/70 hover:bg-white/10 hover:text-white'}\n              >\n                Short Break\n              </Button>\n              <Button\n                variant={currentMode === 'longBreak' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('longBreak')}\n                className={currentMode === 'longBreak' \n                  ? 'bg-white/30 text-white hover:bg-white/40 backdrop-blur-sm border border-white/30' \n                  : 'text-white/70 hover:bg-white/10 hover:text-white'}\n              >\n                Long Break\n              </Button>\n            </div>            <div className=\"flex gap-2 mb-8\">\n              <Button\n                variant={currentMode === 'work' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('work')}\n                className={`flex-1 ${\n                  currentMode === 'work'\n                    ? 'bg-white text-rose-600 hover:bg-white/90'\n                    : 'text-white hover:bg-white/20'\n                }`}\n              >\n                Work\n              </Button>\n              <Button\n                variant={currentMode === 'shortBreak' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('shortBreak')}\n                className={`flex-1 ${\n                  currentMode === 'shortBreak'\n                    ? 'bg-white text-cyan-600 hover:bg-white/90'\n                    : 'text-white hover:bg-white/20'\n                }`}\n              >\n                Short Break\n              </Button>\n              <Button\n                variant={currentMode === 'longBreak' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('longBreak')}\n                className={`flex-1 ${\n                  currentMode === 'longBreak'\n                    ? 'bg-white text-emerald-600 hover:bg-white/90'\n                    : 'text-white hover:bg-white/20'\n                }`}\n              >\n                Long Break\n              </Button>\n            </div>\n\n            <div className=\"flex justify-center items-center my-12\">\n              <div className=\"relative w-80 h-80\">\n                <svg className=\"w-full h-full transform -rotate-90\" viewBox=\"0 0 320 320\">\n                  {/* Background circle */}\n                  <circle\n                    cx=\"160\"\n                    cy=\"160\"\n                    r=\"140\"\n                    stroke=\"rgba(255, 255, 255, 0.1)\"\n                    strokeWidth=\"12\"\n                    fill=\"none\"\n                  />\n                  {/* Progress circle */}\n                  <motion.circle\n                    cx=\"160\"\n                    cy=\"160\"\n                    r=\"140\"\n                    stroke=\"url(#gradient)\"\n                    strokeWidth=\"12\"\n                    fill=\"none\"\n                    strokeLinecap=\"round\"\n                    strokeDasharray={2 * Math.PI * 140}\n                    strokeDashoffset={2 * Math.PI * 140 * (1 - progress / 100)}\n                    initial={{ strokeDashoffset: 2 * Math.PI * 140 }}\n                    animate={{ strokeDashoffset: 2 * Math.PI * 140 * (1 - progress / 100) }}\n                    transition={{ duration: 0.5, ease: \"easeInOut\" }}\n                  />\n                  {/* Gradient definition */}\n                  <defs>\n                    <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                      <stop offset=\"0%\" stopColor={currentMode === 'work' ? '#f43f5e' : currentMode === 'shortBreak' ? '#06b6d4' : '#10b981'} />\n                      <stop offset=\"50%\" stopColor={currentMode === 'work' ? '#ec4899' : currentMode === 'shortBreak' ? '#3b82f6' : '#14b8a6'} />\n                      <stop offset=\"100%\" stopColor={currentMode === 'work' ? '#a855f7' : currentMode === 'shortBreak' ? '#6366f1' : '#06b6d4'} />\n                    </linearGradient>\n                  </defs>\n                </svg>\n                {/* Timer display in center */}\n                <div className=\"absolute inset-0 flex flex-col items-center justify-center\">\n                  <motion.div\n                    key={timeLeft}\n                    initial={{ scale: 1 }}\n                    animate={{ scale: [1, 1.05, 1] }}\n                    transition={{ duration: 0.3 }}\n                    className=\"text-7xl font-bold text-white mb-2\"\n                  >\n                    {formatTime(timeLeft)}\n                  </motion.div>\n                  <div className=\"text-white/70 text-lg font-medium uppercase tracking-wider\">\n                    {currentMode === 'work' ? 'Focus Time' : currentMode === 'shortBreak' ? 'Short Break' : 'Long Break'}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"text-center mb-8\">\n              <motion.div\n                key={timeLeft}\n                initial={{ scale: 1 }}\n                animate={{ scale: [1, 1.05, 1] }}\n                transition={{ duration: 0.3 }}\n                className=\"text-7xl font-bold text-white mb-4\"\n              >\n                {formatTime(timeLeft)}\n              </motion.div>\n              <p className=\"text-white/80 text-xl capitalize\">\n                {currentMode === 'work' ? 'Focus Time' : currentMode === 'shortBreak' ? 'Short Break' : 'Long Break'}\n              </p>\n            </div>\n\n            <div className=\"flex justify-center gap-4 mb-6\">\n              <Button\n                onClick={handlePlayPause}\n                size=\"lg\"\n                className=\"bg-white/20 hover:bg-white/30 text-white backdrop-blur-sm border border-white/30 px-8\"\n              >\n                {isRunning ? (\n                  <>\n                    <Pause className=\"w-5 h-5 mr-2\" />\n                    Pause\n                  </>\n                ) : (\n                  <>\n                    <Play className=\"w-5 h-5 mr-2\" />\n                    Start\n                  </>\n                )}\n              </Button>\n              <Button\n                onClick={handleReset}\n                size=\"lg\"\n                variant=\"ghost\"\n                className=\"text-white hover:bg-white/20\"\n              >\n                <RotateCcw className=\"w-5 h-5 mr-2\" />\n                Reset\n              </Button>\n            </div>\n\n            <div className=\"text-center text-white/60\">\n              <p>Completed Pomodoros: {completedPomodoros}</p>\n            </div>\n          </div>\n\n          <AnimatePresence>\n            {showSettings && (\n              <motion.div\n                initial={{ opacity: 0, y: 20, scale: 0.95 }}\n                animate={{ opacity: 1, y: 0, scale: 1 }}\n                exit={{ opacity: 0, y: 20, scale: 0.95 }}\n                transition={{ duration: 0.3 }}\n                className=\"mt-6 backdrop-blur-xl bg-white/10 rounded-3xl p-8 shadow-2xl border border-white/20\"\n              >\n                <h2 className=\"text-2xl font-bold text-white mb-6\">Settings</h2>\n                <div className=\"space-y-6\">\n                  <div>\n                    <Label htmlFor=\"work-duration\" className=\"text-white/90 text-lg mb-2 block\">\n                      Work Duration (minutes)\n                    </Label>\n                    <Input\n                      id=\"work-duration\"\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"60\"\n                      value={settings.workDuration}\n                      onChange={(e) => setSettings({ ...settings, workDuration: parseInt(e.target.value) || 1 })}\n                      className=\"bg-white/20 border-white/30 text-white placeholder:text-white/50 backdrop-blur-sm\"\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"short-break-duration\" className=\"text-white/90 text-lg mb-2 block\">\n                      Short Break Duration (minutes)\n                    </Label>\n                    <Input\n                      id=\"short-break-duration\"\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"30\"\n                      value={settings.shortBreakDuration}\n                      onChange={(e) => setSettings({ ...settings, shortBreakDuration: parseInt(e.target.value) || 1 })}\n                      className=\"bg-white/20 border-white/30 text-white placeholder:text-white/50 backdrop-blur-sm\"\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"long-break-duration\" className=\"text-white/90 text-lg mb-2 block\">\n                      Long Break Duration (minutes)\n                    </Label>\n                    <Input\n                      id=\"long-break-duration\"\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"60\"\n                      value={settings.longBreakDuration}\n                      onChange={(e) => setSettings({ ...settings, longBreakDuration: parseInt(e.target.value) || 1 })}\n                      className=\"bg-white/20 border-white/30 text-white placeholder:text-white/50 backdrop-blur-sm\"\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"long-break-interval\" className=\"text-white/90 text-lg mb-2 block\">\n                      Long Break Interval (pomodoros)\n                    </Label>\n                    <Input\n                      id=\"long-break-interval\"\n                      type=\"number\"\n                      min=\"2\"\n                      max=\"10\"\n                      value={settings.longBreakInterval}\n                      onChange={(e) => setSettings({ ...settings, longBreakInterval: parseInt(e.target.value) || 2 })}\n                      className=\"bg-white/20 border-white/30 text-white placeholder:text-white/50 backdrop-blur-sm\"\n                    />\n                  </div>\n                  <div className=\"flex gap-4 pt-4\">\n                    <Button\n                      onClick={() => {\n                        setShowSettings(false);\n                        handleReset();\n                      }}\n                      className=\"flex-1 bg-white/30 hover:bg-white/40 text-white backdrop-blur-sm border border-white/30\"\n                    >\n                      Save & Apply\n                    </Button>\n                    <Button\n                      onClick={() => {\n                        setSettings(defaultSettings);\n                        setShowSettings(false);\n                      }}\n                      variant=\"ghost\"\n                      className=\"flex-1 text-white hover:bg-white/20\"\n                    >\n                      Cancel\n                    </Button>\n                  </div>\n                </div>\n              </motion.div>\n            )}\n          </AnimatePresence>\n\n          <AnimatePresence>\n            {showCompletion && (\n              <motion.div\n                initial={{ opacity: 0, scale: 0.8, y: 50 }}\n                animate={{ opacity: 1, scale: 1, y: 0 }}\n                exit={{ opacity: 0, scale: 0.8, y: 50 }}\n                transition={{ type: \"spring\", duration: 0.6 }}\n                className=\"fixed inset-0 flex items-center justify-center z-50 pointer-events-none\"\n              >\n                <motion.div\n                  className=\"backdrop-blur-xl bg-white/20 rounded-3xl p-12 shadow-2xl border border-white/30\"\n                  animate={{\n                    scale: [1, 1.05, 1],\n                  }}\n                  transition={{\n                    duration: 0.5,\n                    repeat: 2,\n                  }}\n                >\n                  <motion.div\n                    initial={{ rotate: 0 }}\n                    animate={{ rotate: 360 }}\n                    transition={{ duration: 0.6 }}\n                    className=\"text-8xl mb-4 text-center\"\n                  >\n                    \ud83c\udf89\n                  </motion.div>\n                  <h3 className=\"text-4xl font-bold text-white text-center\">\n                    Pomodoro Complete!\n                  </h3>\n                  <p className=\"text-white/80 text-xl text-center mt-4\">\n                    Great work! Time for a break.\n                  </p>\n                </motion.div>\n              </motion.div>\n            )}\n          </AnimatePresence>\n\n          <AnimatePresence>\n            {showCompletion && (\n              <motion.div\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                exit={{ opacity: 0 }}\n                className=\"fixed inset-0 z-50 flex items-center justify-center pointer-events-none\"\n              >\n                {Array.from({ length: 100 }, (_, i) => {\n                  const angle = (Math.PI * 2 * i) / 100;\n                  const velocity = Math.random() * 300 + 200;\n                  const colors = ['#ef4444', '#f59e0b', '#10b981', '#3b82f6', '#8b5cf6', '#ec4899'];\n                  const color = colors[Math.floor(Math.random() * colors.length)];\n                  \n                  return (\n                    <motion.div\n                      key={i}\n                      className=\"absolute rounded-full\"\n                      style={{\n                        width: Math.random() * 12 + 6,\n                        height: Math.random() * 12 + 6,\n                        backgroundColor: color,\n                        left: '50%',\n                        top: '50%',\n                      }}\n                      initial={{ x: 0, y: 0, opacity: 1, scale: 1 }}\n                      animate={{\n                        x: Math.cos(angle) * velocity,\n                        y: Math.sin(angle) * velocity - 200,\n                        opacity: 0,\n                        scale: 0,\n                      }}\n                      transition={{\n                        duration: 2,\n                        ease: \"easeOut\",\n                      }}\n                    />\n                  );\n                })}\n                \n                <motion.div\n                  initial={{ scale: 0, rotate: -180 }}\n                  animate={{ scale: 1, rotate: 0 }}\n                  exit={{ scale: 0, rotate: 180 }}\n                  transition={{ type: \"spring\", duration: 0.6 }}\n                  className=\"bg-white/95 backdrop-blur-xl rounded-3xl p-12 shadow-2xl border-4 border-yellow-400\"\n                >\n                  <motion.div\n                    animate={{ \n                      scale: [1, 1.2, 1],\n                      rotate: [0, 10, -10, 0]\n                    }}\n                    transition={{ \n                      duration: 0.5,\n                      repeat: 3,\n                      ease: \"easeInOut\"\n                    }}\n                    className=\"text-8xl mb-4 text-center\"\n                  >\n                    \ud83c\udf89\n                  </motion.div>\n                  <h2 className=\"text-4xl font-bold text-center bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent\">\n                    {currentMode === 'work' ? 'Great Work!' : 'Break Complete!'}\n                  </h2>\n                  <p className=\"text-xl text-gray-600 text-center mt-2\">\n                    {currentMode === 'work' ? 'Time for a break!' : 'Ready to focus again?'}\n                  </p>\n                </motion.div>\n              </motion.div>\n            )}\n          </AnimatePresence>\n          \n          <audio\n            ref={audioRef}\n            src=\"data:audio/wav;base64,\n        </motion.div>\n      </div>\n    </div>\n  );\n}",
      "error": null,
      "overall_score": 41,
      "code_quality_score": 12,
      "architecture_score": 10,
      "performance_score": 8,
      "accessibility_score": 11,
      "metadata": {
        "document_id": "eval_room_d745033c1f4a",
        "prompt_category": "productivity",
        "prompt_complexity": 7.0
      }
    },
    {
      "prompt_id": "pomodoro_timer",
      "prompt_name": "Pomodoro Timer",
      "mode": "parallel",
      "run_number": 50,
      "timestamp": "2025-10-14T05:19:47.931809",
      "response_time": 219.56355381011963,
      "total_tokens": null,
      "response_content": "import { useState, useCallback, useEffect, useRef } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Play, Pause, RotateCcw, Settings } from 'lucide-react';\nimport { motion, AnimatePresence } from 'framer-motion';\n\ninterface TimerMode {\n  type: 'work' | 'shortBreak' | 'longBreak';\n  duration: number;\n  label: string;\n}\n\ninterface TimerSettings {\n  workDuration: number;\n  shortBreakDuration: number;\n  longBreakDuration: number;\n  longBreakInterval: number;\n}\n\ninterface Particle {\n  id: number;\n  x: number;\n  y: number;\n  size: number;\n  duration: number;\n  delay: number;\n}\n\nconst defaultSettings: TimerSettings = {\n  workDuration: 25,\n  shortBreakDuration: 5,\n  longBreakDuration: 15,\n  longBreakInterval: 4\n};\n\nconst timerModes: Record<string, { colors: string; gradient: string }> = {\n  work: {\n    colors: 'from-rose-500 via-pink-500 to-purple-500',\n    gradient: 'bg-gradient-to-br from-rose-500/20 via-pink-500/20 to-purple-500/20'\n  },\n  shortBreak: {\n    colors: 'from-cyan-500 via-blue-500 to-indigo-500',\n    gradient: 'bg-gradient-to-br from-cyan-500/20 via-blue-500/20 to-indigo-500/20'\n  },\n  longBreak: {\n    colors: 'from-emerald-500 via-teal-500 to-cyan-500',\n    gradient: 'bg-gradient-to-br from-emerald-500/20 via-teal-500/20 to-cyan-500/20'\n  }\n};\n\nexport default function PomodoroTimer() {\n  const [settings, setSettings] = useState<TimerSettings>(defaultSettings);\n  const [currentMode, setCurrentMode] = useState<'work' | 'shortBreak' | 'longBreak'>('work');\n  const [timeLeft, setTimeLeft] = useState(settings.workDuration * 60);\n  const [isRunning, setIsRunning] = useState(false);\n  const [completedPomodoros, setCompletedPomodoros] = useState(0);\n  const [showSettings, setShowSettings] = useState(false);\n  const [showCompletion, setShowCompletion] = useState(false);\n  const [particles, setParticles] = useState<Particle[]>([]);\n  \n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n  const audioRef = useRef<HTMLAudioElement | null>(null);\n\n  const totalTime = currentMode === 'work' \n    ? settings.workDuration * 60 \n    : currentMode === 'shortBreak'\n    ? settings.shortBreakDuration * 60\n    : settings.longBreakDuration * 60;\n\n  const progress = ((totalTime - timeLeft) / totalTime) * 100;\n\n  useEffect(() => {\n    t generatedParticles: Particle[] = Array.from({ length: 50 }, (_, i) => ({\n      id: i,\n      x: Math.random() * 100,\n      y: Math.random() * 100,\n      size: Math.random() * 4 + 2,\n      duration: Math.random() * 20 + 10,\n      delay: Math.random() * 5\n    }));\n    setParticles(generatedParticles);\n  }, []);\n\n  useEffect(() => {\n    if (isRunning && timeLeft > 0) {\n      intervalRef.current = setInterval(() => {\n        setTimeLeft((prev) => {\n          if (prev <= 1) {\n            setIsRunning(false);\n            setShowCompletion(true);\n            \n            if (currentMode === 'work') {\n              const newCompletedPomodoros = completedPomodoros + 1;\n              setCompletedPomodoros(newCompletedPomodoros);\n              \n              if (newCompletedPomodoros % settings.longBreakInterval === 0) {\n                setCurrentMode('longBreak');\n                setTimeLeft(settings.longBreakDuration * 60);\n              } else {\n                setCurrentMode('shortBreak');\n                setTimeLeft(settings.shortBreakDuration * 60);\n              }\n            } else {\n              setCurrentMode('work');\n              setTimeLeft(settings.workDuration * 60);\n            }\n            \n            setTimeout(() => setShowCompletion(false), 3000);\n            \n            if (audioRef.current) {\n              audioRef.current.play().catch(() => {});\n            }\n            \n            if (intervalRef.current) {\n              clearInterval(intervalRef.current);\n              intervalRef.current = null;\n            }\n            \n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } else if (!isRunning && intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n    \n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n        intervalRef.current = null;\n      }\n    };\n  }, [isRunning, timeLeft, currentMode, completedPomodoros, settings]);\n\n  useEffect(() => {\n    if (isRunning && timeLeft > 0) {\n      intervalRef.current = setInterval(() => {\n        setTimeLeft((prev) => {\n          if (prev <= 1) {\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } else if (timeLeft === 0 && isRunning) {\n      // Timer completed\n      setIsRunning(false);\n      setShowCompletion(true);\n      \n      // Play completion sound\n      if (audioRef.current) {\n        audioRef.current.play().catch(err => console.log('Audio play failed:', err));\n      }\n      \n      // Auto-switch modes\n      if (currentMode === 'work') {\n        const newCompletedPomodoros = completedPomodoros + 1;\n        setCompletedPomodoros(newCompletedPomodoros);\n        \n        // Determine next break type\n        if (newCompletedPomodoros % settings.longBreakInterval === 0) {\n          setCurrentMode('longBreak');\n          setTimeLeft(settings.longBreakDuration * 60);\n        } else {\n          setCurrentMode('shortBreak');\n          setTimeLeft(settings.shortBreakDuration * 60);\n        }\n      } else {\n        // Break completed, switch back to work\n        setCurrentMode('work');\n        setTimeLeft(settings.workDuration * 60);\n      }\n      \n      // Hide completion animation after 3 seconds\n      setTimeout(() => setShowCompletion(false), 3000);\n    }\n\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };</parameter>\n</invoke>\n  }, [isRunning, timeLeft, currentMode, completedPomodoros, settings]);\n\n  const handlePlayPause = useCallback(() => {\n    setIsRunning(!isRunning);\n  }, [isRunning]);\n  const handleReset = useCallback(() => {\n    setIsRunning(false);\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n    const duration = currentMode === 'work' \n      ? settings.workDuration * 60 \n      : currentMode === 'shortBreak'\n      ? settings.shortBreakDuration * 60\n      : settings.longBreakDuration * 60;\n    setTimeLeft(duration);\n  }, [currentMode, settings]);\n\n  const handleReset = useCallback(() => {\n    setIsRunning(false);\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n    const duration = currentMode === 'work' \n      ? settings.workDuration * 60 \n      : currentMode === 'shortBreak'\n      ? settings.shortBreakDuration * 60\n      : settings.longBreakDuration * 60;\n    setTimeLeft(duration);\n  }, [currentMode, settings]);\n\n  const handleModeSwitch = useCallback((mode: 'work' | 'shortBreak' | 'longBreak') => {\n    setIsRunning(false);\n    setCurrentMode(mode);\n    const newDuration = mode === 'work' \n      ? settings.workDuration * 60 \n      : mode === 'shortBreak'\n      ? settings.shortBreakDuration * 60\n      : settings.longBreakDuration * 60;\n    setTimeLeft(newDuration);\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n    setIsRunning(false);\n    setCurrentMode(mode);\n    const newDuration = mode === 'work' \n      ? settings.workDuration * 60 \n      : mode === 'shortBreak'\n      ? settings.shortBreakDuration * 60\n      : settings.longBreakDuration * 60;\n    setTimeLeft(newDuration);\n  }, [settings]);\n\n  const formatTime = useCallback((seconds: number): string => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  }, []);\n  const triggerCompletion = useCallback(() => {\n    setShowCompletion(true);\n    \n    // Play completion sound\n    if (audioRef.current) {\n      audioRef.current.play().catch(() => {\n        // Silently fail if audio can't play\n      });\n    }\n    \n    // Hide completion animation after 4 seconds\n    setTimeout(() => {\n      setShowCompletion(false);\n    }, 4000);\n  }, []);\n\n  return (\n    <div className={`min-h-screen relative overflow-hidden transition-all duration-1000 ${timerModes[currentMode].gradient}`}>\n      <AnimatePresence>\n        {particles.map((particle) => (\n          <motion.div\n            key={particle.id}\n            className=\"absolute rounded-full bg-white/30 backdrop-blur-sm\"\n            style={{\n              left: `${particle.x}%`,\n              top: `${particle.y}%`,\n              width: particle.size,\n              height: particle.size,\n            }}\n            initial={{ opacity: 0, scale: 0 }}\n            animate={{\n              opacity: [0, 0.6, 0],\n              scale: [0, 1, 0],\n              y: [0, -100, -200],\n            }}\n            transition={{\n              duration: particle.duration,\n              delay: particle.delay,\n              repeat: Infinity,\n              ease: \"easeInOut\",\n            }}\n          />\n        ))}\n      </AnimatePresence>\n      \n      <div className=\"relative z-10 min-h-screen flex flex-col items-center justify-center p-8\">\n        <motion.div\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"w-full max-w-2xl\"\n        >\n          <div className=\"backdrop-blur-xl bg-white/10 rounded-3xl p-8 shadow-2xl border border-white/20\">\n            <div className=\"flex justify-between items-center mb-8\">\n              <h1 className=\"text-4xl font-bold text-white\">Pomodoro Timer</h1>\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                onClick={() => setShowSettings(!showSettings)}\n                className=\"text-white hover:bg-white/20\"\n              >\n                <Settings className=\"w-6 h-6\" />\n              </Button>\n            </div>\n\n            \n<div className=\"flex gap-2 mb-8\">\n              <Button\n                variant={currentMode === 'work' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('work')}\n                className={currentMode === 'work' \n                  ? 'bg-white/30 text-white hover:bg-white/40' \n                  : 'text-white/70 hover:bg-white/20 hover:text-white'}\n              >\n                Work\n              </Button>\n              <Button\n                variant={currentMode === 'shortBreak' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('shortBreak')}\n                className={currentMode === 'shortBreak' \n                  ? 'bg-white/30 text-white hover:bg-white/40' \n                  : 'text-white/70 hover:bg-white/20 hover:text-white'}\n              >\n                Short Break\n              </Button>\n              <Button\n                variant={currentMode === 'longBreak' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('longBreak')}\n                className={currentMode === 'longBreak' \n                  ? 'bg-white/30 text-white hover:bg-white/40' \n                  : 'text-white/70 hover:bg-white/20 hover:text-white'}\n              >\n                Long Break\n              </Button>\n            </div><div className=\"flex gap-2 mb-8\">\n              <Button\n                variant={currentMode === 'work' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('work')}\n                className={`flex-1 ${\n                  currentMode === 'work'\n                    ? 'bg-white text-rose-600 hover:bg-white/90'\n                    : 'text-white hover:bg-white/20'\n                }`}\n              >\n                Work\n              </Button>\n              <Button\n                variant={currentMode === 'shortBreak' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('shortBreak')}\n                className={`flex-1 ${\n                  currentMode === 'shortBreak'\n                    ? 'bg-white text-cyan-600 hover:bg-white/90'\n                    : 'text-white hover:bg-white/20'\n                }`}\n              >\n                Short Break\n              </Button>\n              <Button\n                variant={currentMode === 'longBreak' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('longBreak')}\n                className={`flex-1 ${\n                  currentMode === 'longBreak'\n                    ? 'bg-white text-emerald-600 hover:bg-white/90'\n                    : 'text-white hover:bg-white/20'\n                }`}\n              >\n                Long Break\n              </Button>\n            </div>\n\n            <div className=\"flex justify-center items-center my-12\">\n              <div className=\"relative\">\n                <svg className=\"transform -rotate-90\" width=\"300\" height=\"300\">\n                  <circle\n                    cx=\"150\"\n                    cy=\"150\"\n                    r=\"140\"\n                    stroke=\"rgba(255, 255, 255, 0.1)\"\n                    strokeWidth=\"12\"\n                    fill=\"none\"\n                  />\n                  <motion.circle\n                    cx=\"150\"\n                    cy=\"150\"\n                    r=\"140\"\n                    stroke=\"url(#gradient)\"\n                    strokeWidth=\"12\"\n                    fill=\"none\"\n                    strokeLinecap=\"round\"\n                    initial={{ strokeDashoffset: 2 * Math.PI * 140 }}\n                    animate={{ \n                      strokeDashoffset: 2 * Math.PI * 140 * (1 - progress / 100),\n                    }}\n                    transition={{ duration: 0.5, ease: \"easeInOut\" }}\n                    style={{\n                      strokeDasharray: 2 * Math.PI * 140,\n                    }}\n                  />\n                  <defs>\n                    <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                      <stop offset=\"0%\" stopColor=\"rgba(255, 255, 255, 0.9)\" />\n                      <stop offset=\"100%\" stopColor=\"rgba(255, 255, 255, 0.6)\" />\n                    </linearGradient>\n                  </defs>\n                </svg>\n              </div>\n              <div className=\"relative\">\n                <svg className=\"transform -rotate-90\" width=\"320\" height=\"320\">\n                  <circle\n                    cx=\"160\"\n                    cy=\"160\"\n                    r=\"140\"\n                    stroke=\"rgba(255, 255, 255, 0.1)\"\n                    strokeWidth=\"12\"\n                    fill=\"none\"\n                  />\n                  <motion.circle\n                    cx=\"160\"\n                    cy=\"160\"\n                    r=\"140\"\n                    stroke=\"url(#gradient)\"\n                    strokeWidth=\"12\"\n                    fill=\"none\"\n                    strokeLinecap=\"round\"\n                    strokeDasharray={2 * Math.PI * 140}\n                    initial={{ strokeDashoffset: 2 * Math.PI * 140 }}\n                    animate={{ \n                      strokeDashoffset: 2 * Math.PI * 140 * (1 - progress / 100)\n                    }}\n                    transition={{ duration: 0.5, ease: \"easeInOut\" }}\n                  />\n                  <defs>\n                    <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                      <stop offset=\"0%\" className={`${currentMode === 'work' ? 'stop-rose-500' : currentMode === 'shortBreak' ? 'stop-cyan-500' : 'stop-emerald-500'}`} stopColor={currentMode === 'work' ? '#f43f5e' : currentMode === 'shortBreak' ? '#06b6d4' : '#10b981'} />\n                      <stop offset=\"50%\" stopColor={currentMode === 'work' ? '#ec4899' : currentMode === 'shortBreak' ? '#3b82f6' : '#14b8a6'} />\n                      <stop offset=\"100%\" stopColor={currentMode === 'work' ? '#a855f7' : currentMode === 'shortBreak' ? '#6366f1' : '#06b6d4'} />\n                    </linearGradient>\n                  </defs>\n                </svg>\n                <div className=\"absolute inset-0 flex flex-col items-center justify-center\">\n                  <motion.div\n                    key={timeLeft}\n                    initial={{ scale: 1 }}\n                    animate={{ scale: [1, 1.05, 1] }}\n                    transition={{ duration: 0.3 }}\n                    className=\"text-7xl font-bold text-white mb-2\"\n                  >\n                    {formatTime(timeLeft)}\n                  </motion.div>\n                  <p className=\"text-white/70 text-lg capitalize\">{currentMode.replace(/([A-Z])/g, ' $1').trim()}</p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"text-center mb-8\">\n              <motion.div\n                key={timeLeft}\n                initial={{ scale: 1 }}\n                animate={{ scale: [1, 1.05, 1] }}\n                transition={{ duration: 0.3 }}\n                className=\"text-7xl font-bold text-white mb-4\"\n              >\n                {formatTime(timeLeft)}\n              </motion.div>\n              <p className=\"text-white/80 text-xl capitalize\">\n                {currentMode === 'work' ? 'Focus Time' : currentMode === 'shortBreak' ? 'Short Break' : 'Long Break'}\n              </p>\n            </div>\n\n            <div className=\"flex justify-center gap-4 mb-6\">\n              <Button\n                onClick={handlePlayPause}\n                size=\"lg\"\n                className=\"bg-white/20 hover:bg-white/30 text-white backdrop-blur-sm border border-white/30 px-8\"\n              >\n                {isRunning ? (\n                  <>\n                    <Pause className=\"w-5 h-5 mr-2\" />\n                    Pause\n                  </>\n                ) : (\n                  <>\n                    <Play className=\"w-5 h-5 mr-2\" />\n                    Start\n                  </>\n                )}\n              </Button>\n              <Button\n                onClick={handleReset}\n                size=\"lg\"\n                variant=\"ghost\"\n                className=\"text-white hover:bg-white/20\"\n              >\n                <RotateCcw className=\"w-5 h-5 mr-2\" />\n                Reset\n              </Button>\n            </div>\n\n            <div className=\"text-center text-white/60\">\n              <p className=\"text-sm\">Completed Pomodoros: {completedPomodoros}</p>\n            </div>\n          </div>\n\n          \n\n          \n<AnimatePresence>\n            {showCompletion && (\n              <motion.div\n                initial={{ opacity: 0, scale: 0.8 }}\n                animate={{ opacity: 1, scale: 1 }}\n                exit={{ opacity: 0, scale: 0.8 }}\n                transition={{ duration: 0.5, type: \"spring\" }}\n                className=\"mt-6 backdrop-blur-xl bg-white/10 rounded-3xl p-12 shadow-2xl border border-white/20 text-center\"\n              >\n                <motion.div\n                  initial={{ scale: 0 }}\n                  animate={{ scale: [0, 1.2, 1] }}\n                  transition={{ duration: 0.6, times: [0, 0.6, 1] }}\n                  className=\"text-6xl mb-4\"\n                >\n                  \ud83c\udf89\n                </motion.div>\n                <h3 className=\"text-3xl font-bold text-white mb-2\">\n                  {currentMode === 'work' ? 'Great Work!' : 'Break Complete!'}\n                </h3>\n                <p className=\"text-white/80 text-lg\">\n                  {currentMode === 'work' \n                    ? 'Time for a well-deserved break!' \n                    : 'Ready to focus again?'}\n                </p>\n              </motion.div>\n            )}\n          </AnimatePresence>\n\n          <audio ref={audioRef} src=\"data:audio/wav;base64,UklGRnoGAABXQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YQoGAACBhYqFbF1fdJivrJBhNjVgodDbq2EcBj+a2/LDciUFLIHO8tiJNwgZaLvt559NEAxQp+PwtmMcBjiR1/LMeSwFJHfH8N2QQAoUXrTp66hVFApGn+DyvmwhBSuBzvLZiTYIGGS57OihUBELTKXh8bllHAU2jdXvzn0vBSh+zPDajzsKElyx6OyrWBQLSKDf8sFuIwUrgc7y2Yk2CBhkuezooVARDEyl4fG5ZRwFN43V7859LwUofszw2o87ChJcsejtq1gVC0ig3/LBbiMFK4HO8tmJNggYZLns6KFQEQxMpeHxuWUcBTeN1e/OfS8FKH7M8NqPOwsSXLHo7atYFQtIoN/ywW4jBSuBzvLZiTYIGGS57OihUBEMTKXh8bllHAU3jdXvzn0vBSh+zPDajzsKElyx6O2rWBULSKDf8sFuIwUrgc7y2Yk2CBhkuezooVARDEyl4fG5ZRwFN43V7859LwUofszw2o87ChJcsejtq1gVC0ig3/LBbiMFK4HO8tmJNggYZLns6KFQEQxMpeHxuWUcBTeN1e/OfS8FKH7M8NqPOwsSXLHo7atYFQtIoN/ywW4jBSuBzvLZiTYIGGS57OihUBEMTKXh8bllHAU3jdXvzn0vBSh+zPDajzsKElyx6O2rWBULSKDf8sFuIwUrgc7y2Yk2CBhkuezooVARDEyl4fG5ZRwFN43V7859LwUofszw2o87ChJcsejtq1gVC0ig3/LBbiMFK4HO8tmJNggYZLns6KFQEQxMpeHxuWUcBTeN1e/OfS8FKH7M8NqPOwsSXLHo7atYFQtIoN/ywW4jBSuBzvLZiTYIGGS57OihUBEMTKXh8bllHAU3jdXvzn0vBSh+zPDajzsKElyx6O2rWBULSKDf8sFuIwUrgc7y2Yk2CBhkuezooVARDEyl4fG5ZRwFN43V7859LwUofszw2o87ChJcsejtq1gVC0ig3/LBbiMFK4HO8tmJNggYZLns6KFQEQxMpeHxuWUcBTeN1e/OfS8FKH7M8NqPOwsSXLHo7atYFQtIoN/ywW4jBQ==\" />\n<AnimatePresence>\n            {showSettings && (\n              <motion.div\n                initial={{ opacity: 0, y: 20, scale: 0.95 }}\n                animate={{ opacity: 1, y: 0, scale: 1 }}\n                exit={{ opacity: 0, y: 20, scale: 0.95 }}\n                transition={{ duration: 0.3 }}\n                className=\"mt-6 backdrop-blur-xl bg-white/10 rounded-3xl p-8 shadow-2xl border border-white/20\"\n              >\n                <h2 className=\"text-2xl font-bold text-white mb-6\">Settings</h2>\n                <div className=\"space-y-6\">\n                  <div>\n                    <Label htmlFor=\"work-duration\" className=\"text-white/90 text-sm mb-2 block\">\n                      Work Duration (minutes)\n                    </Label>\n                    <Input\n                      id=\"work-duration\"\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"60\"\n                      value={settings.workDuration}\n                      onChange={(e) => setSettings({ ...settings, workDuration: parseInt(e.target.value) || 1 })}\n                      className=\"bg-white/10 border-white/20 text-white placeholder:text-white/50\"\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"short-break\" className=\"text-white/90 text-sm mb-2 block\">\n                      Short Break Duration (minutes)\n                    </Label>\n                    <Input\n                      id=\"short-break\"\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"30\"\n                      value={settings.shortBreakDuration}\n                      onChange={(e) => setSettings({ ...settings, shortBreakDuration: parseInt(e.target.value) || 1 })}\n                      className=\"bg-white/10 border-white/20 text-white placeholder:text-white/50\"\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"long-break\" className=\"text-white/90 text-sm mb-2 block\">\n                      Long Break Duration (minutes)\n                    </Label>\n                    <Input\n                      id=\"long-break\"\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"60\"\n                      value={settings.longBreakDuration}\n                      onChange={(e) => setSettings({ ...settings, longBreakDuration: parseInt(e.target.value) || 1 })}\n                      className=\"bg-white/10 border-white/20 text-white placeholder:text-white/50\"\n                    />\n                  </div>\n                  <div>\n                    <Label htmlFor=\"long-break-interval\" className=\"text-white/90 text-sm mb-2 block\">\n                      Long Break Interval (pomodoros)\n                    </Label>\n                    <Input\n                      id=\"long-break-interval\"\n                      type=\"number\"\n                      min=\"2\"\n                      max=\"10\"\n                      value={settings.longBreakInterval}\n                      onChange={(e) => setSettings({ ...settings, longBreakInterval: parseInt(e.target.value) || 2 })}\n                      className=\"bg-white/10 border-white/20 text-white placeholder:text-white/50\"\n                    />\n                  </div>\n                  <div className=\"flex gap-3 pt-4\">\n                    <Button\n                      onClick={() => {\n                        setShowSettings(false);\n                        if (currentMode === 'work') {\n                          setTimeLeft(settings.workDuration * 60);\n                        } else if (currentMode === 'shortBreak') {\n                          setTimeLeft(settings.shortBreakDuration * 60);\n                        } else {\n                          setTimeLeft(settings.longBreakDuration * 60);\n                        }\n                      }}\n                      className=\"flex-1 bg-white/20 hover:bg-white/30 text-white backdrop-blur-sm border border-white/30\"\n                    >\n                      Save\n                    </Button>\n                    <Button\n                      onClick={() => {\n                        setSettings(defaultSettings);\n                        setShowSettings(false);\n                      }}\n                      variant=\"ghost\"\n                      className=\"flex-1 text-white hover:bg-white/20\"\n                    >\n                      Cancel\n                    </Button>\n                  </div>\n                </div>\n              </motion.div>\n            )}\n          </AnimatePresence>\n<AnimatePresence>\n            {showCompletion && (\n              <motion.div\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                exit={{ opacity: 0 }}\n                className=\"fixed inset-0 z-50 flex items-center justify-center pointer-events-none\"\n              >\n                {/* Confetti particles */}\n                {Array.from({ length: 100 }, (_, i) => {\n                  const angle = (Math.PI * 2 * i) / 100;\n                  const velocity = Math.random() * 300 + 200;\n                  const x = Math.cos(angle) * velocity;\n                  const y = Math.sin(angle) * velocity - 100;\n                  const rotation = Math.random() * 720 - 360;\n                  const colors = ['#ef4444', '#f59e0b', '#10b981', '#3b82f6', '#8b5cf6', '#ec4899'];\n                  const color = colors[Math.floor(Math.random() * colors.length)];\n                  \n                  return (\n                    <motion.div\n                      key={i}\n                      className=\"absolute w-3 h-3 rounded-sm\"\n                      style={{\n                        backgroundColor: color,\n                        left: '50%',\n                        top: '50%',\n                      }}\n                      initial={{ x: 0, y: 0, opacity: 1, rotate: 0, scale: 1 }}\n                      animate={{\n                        x: x,\n                        y: y,\n                        opacity: 0,\n                        rotate: rotation,\n                        scale: [1, 1.5, 0.5],\n                      }}\n                      transition={{\n                        duration: 2 + Math.random(),\n                        ease: [0.25, 0.46, 0.45, 0.94],\n                      }}\n                    />\n                  );\n                })}\n                \n                {/* Celebration message */}\n                <motion.div\n                  initial={{ scale: 0, rotate: -10 }}\n                  animate={{ \n                    scale: [0, 1.2, 1],\n                    rotate: [0, 10, -10, 0],\n                  }}\n                  transition={{\n                    duration: 0.6,\n                    ease: \"easeOut\",\n                  }}\n                  className=\"backdrop-blur-xl bg-white/20 rounded-3xl p-8 shadow-2xl border border-white/30 pointer-events-auto\"\n                >\n                  <div className=\"text-center\">\n                    <motion.div\n                      animate={{\n                        scale: [1, 1.1, 1],\n                      }}\n                      transition={{\n                        duration: 0.5,\n                        repeat: 3,\n                        ease: \"easeInOut\",\n                      }}\n                      className=\"text-6xl mb-4\"\n                    >\n                      \ud83c\udf89\n                    </motion.div>\n                    <h2 className=\"text-4xl font-bold text-white mb-2\">\n                      {currentMode === 'work' ? 'Great Work!' : 'Break Complete!'}\n                    </h2>\n                    <p className=\"text-white/80 text-lg\">\n                      {currentMode === 'work' \n                        ? 'Time for a well-deserved break!' \n                        : 'Ready to focus again?'}\n                    </p>\n                  </div>\n                </motion.div>\n                \n                {/* Radial pulse effect */}\n                <motion.div\n                  className=\"absolute inset-0 flex items-center justify-center\"\n                  initial={{ opacity: 0 }}\n                  animate={{ opacity: [0, 0.5, 0] }}\n                  transition={{ duration: 1.5 }}\n                >\n                  <motion.div\n                    className=\"w-32 h-32 rounded-full border-4 border-white\"\n                    initial={{ scale: 0, opacity: 1 }}\n                    animate={{ scale: 8, opacity: 0 }}\n                    transition={{ duration: 1.5, ease: \"easeOut\" }}\n                  />\n                </motion.div>\n              </motion.div>\n            )}\n          </AnimatePresence>\n\n          {/* Hidden audio element for completion sound */}\n          <audio\n            ref={audioRef}\n            src=\"data:audio/wav;base64,\n        </motion.div>\n      </div>\n    </div>\n  );\n}",
      "error": null,
      "overall_score": 41,
      "code_quality_score": 10,
      "architecture_score": 8,
      "performance_score": 12,
      "accessibility_score": 11,
      "metadata": {
        "document_id": "eval_room_73c8cfd55a2e",
        "prompt_category": "productivity",
        "prompt_complexity": 7.0
      }
    },
    {
      "prompt_id": "pomodoro_timer",
      "prompt_name": "Pomodoro Timer",
      "mode": "parallel",
      "run_number": 41,
      "timestamp": "2025-10-14T08:07:37.196986",
      "response_time": 209.5650885105133,
      "total_tokens": null,
      "response_content": "import { useState, useCallback, useEffect, useRef } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Play, Pause, RotateCcw, Settings } from 'lucide-react';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { motion, AnimatePresence } from 'framer-motion';\n\ninterface TimerMode {\n  type: 'work' | 'shortBreak' | 'longBreak';\n  duration: number;\n  label: string;\n}\n\ninterface TimerSettings {\n  workDuration: number;\n  shortBreakDuration: number;\n  longBreakDuration: number;\n  longBreakInterval: number;\n}\n\ninterface Particle {\n  id: number;\n  x: number;\n  y: number;\n  size: number;\n  duration: number;\n  delay: number;\n}\n\nconst defaultSettings: TimerSettings = {\n  workDuration: 25,\n  shortBreakDuration: 5,\n  longBreakDuration: 15,\n  longBreakInterval: 4\n};\n\nconst timerModes: Record<string, { colors: string; gradient: string }> = {\n  work: {\n    colors: 'from-rose-500 via-pink-500 to-purple-500',\n    gradient: 'bg-gradient-to-br from-rose-500/20 via-pink-500/20 to-purple-500/20'\n  },\n  shortBreak: {\n    colors: 'from-cyan-500 via-blue-500 to-indigo-500',\n    gradient: 'bg-gradient-to-br from-cyan-500/20 via-blue-500/20 to-indigo-500/20'\n  },\n  longBreak: {\n    colors: 'from-emerald-500 via-teal-500 to-cyan-500',\n    gradient: 'bg-gradient-to-br from-emerald-500/20 via-teal-500/20 to-cyan-500/20'\n  }\n};\n\nexport default function PomodoroTimer() {\n  const [settings, setSettings] = useState<TimerSettings>(defaultSettings);\n  const [currentMode, setCurrentMode] = useState<'work' | 'shortBreak' | 'longBreak'>('work');\n  const [timeLeft, setTimeLeft] = useState(settings.workDuration * 60);\n  const [isRunning, setIsRunning] = useState(false);\n  const [completedPomodoros, setCompletedPomodoros] = useState(0);\n  const [showSettings, setShowSettings] = useState(false);\n  const [showCompletion, setShowCompletion] = useState(false);\n  const [particles, setParticles] = useState<Particle[]>([]);\n  \n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n  const audioRef = useRef<HTMLAudioElement | null>(null);\n\n  const totalTime = currentMode === 'work' \n    ? settings.workDuration * 60 \n    : currentMode === 'shortBreak'\n    ? settings.shortBreakDuration * 60\n    : settings.longBreakDuration * 60;\n\n  const progress = ((totalTime - timeLeft) / totalTime) * 100;\n\n  useEffect(() => {\n    const generatedParticles: Particle[] = Array.from({ length: 50 }, (_, i) => ({\n      id: i,\n      x: Math.random() * 100,\n      y: Math.random() * 100,\n      size: Math.random() * 4 + 2,\n      duration: Math.random() * 20 + 10,\n      delay: Math.random() * 5\n    }));\n    setParticles(generatedParticles);\n  }, []);\n\n  useEffect(() => {\n    if (isRunning && timeLeft > 0) {\n      intervalRef.current = setInterval(() => {\n        setTimeLeft((prev) => {\n          if (prev <= 1) {\n            // Timer completed\n            setIsRunning(false);\n            setShowCompletion(true);\n            \n            // Play completion sound\n            if (audioRef.current) {\n              audioRef.current.play().catch(err => console.log('Audio play failed:', err));\n            }\n            \n            // Auto-switch to next mode\n            if (currentMode === 'work') {\n              const newCompletedCount = completedPomodoros + 1;\n              setCompletedPomodoros(newCompletedCount);\n              \n              // Check if it's time for long break\n              if (newCompletedCount % settings.longBreakInterval === 0) {\n                setCurrentMode('longBreak');\n                setTimeLeft(settings.longBreakDuration * 60);\n              } else {\n                setCurrentMode('shortBreak');\n                setTimeLeft(settings.shortBreakDuration * 60);\n              }\n            } else {\n              // Break completed, switch to work\n              setCurrentMode('work');\n              setTimeLeft(settings.workDuration * 60);\n            }\n            \n            // Hide completion animation after 3 seconds\n            setTimeout(() => setShowCompletion(false), 3000);\n            \n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } else {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n        intervalRef.current = null;\n      }\n    }\n    \n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [isRunning, timeLeft, currentMode, completedPomodoros, settings]);\n\n  const handlePlayPause = useCallback(() => {\n    setIsRunning(!isRunning);\n  }, [isRunning]);\n\n  const handleReset = useCallback(() => {\n    setIsRunning(false);\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n    const duration = currentMode === 'work' \n      ? settings.workDuration * 60 \n      : currentMode === 'shortBreak'\n      ? settings.shortBreakDuration * 60\n      : settings.longBreakDuration * 60;\n    setTimeLeft(duration);\n  }, [currentMode, settings]);\n\n  const handleModeSwitch = useCallback((mode: 'work' | 'shortBreak' | 'longBreak') => {\n    setIsRunning(false);\n    setCurrentMode(mode);\n    const newDuration = mode === 'work' \n      ? settings.workDuration * 60 \n      : mode === 'shortBreak'\n      ? settings.shortBreakDuration * 60\n      : settings.longBreakDuration * 60;\n    setTimeLeft(newDuration);\n  }, [settings]);\n\n  const formatTime = useCallback((seconds: number): string => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  }, []);\n\n  return (\n    <div className={`min-h-screen relative overflow-hidden transition-all duration-1000 ${timerModes[currentMode].gradient}`}>\n      <div className=\"absolute inset-0 overflow-hidden pointer-events-none\">\n        {particles.map((particle) => (\n          <motion.div\n            key={particle.id}\n            className=\"absolute rounded-full bg-white/30 backdrop-blur-sm\"\n            style={{\n              left: `${particle.x}%`,\n              top: `${particle.y}%`,\n              width: particle.size,\n              height: particle.size,\n            }}\n            animate={{\n              y: [0, -30, 0],\n              opacity: [0.2, 0.6, 0.2],\n              scale: [1, 1.2, 1],\n            }}\n            transition={{\n              duration: particle.duration,\n              delay: particle.delay,\n              repeat: Infinity,\n              ease: \"easeInOut\",\n            }}\n          />\n        ))}\n      </div>\n      \n      <div className=\"relative z-10 min-h-screen flex flex-col items-center justify-center p-8\">\n        <motion.div\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"w-full max-w-2xl\"\n        >\n          <div className=\"backdrop-blur-xl bg-white/10 rounded-3xl p-8 shadow-2xl border border-white/20\">\n            <div className=\"flex justify-between items-center mb-8\">\n              <h1 className=\"text-4xl font-bold text-white\">Pomodoro Timer</h1>\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                onClick={() => setShowSettings(!showSettings)}\n                className=\"text-white hover:bg-white/20\"\n              >\n                <Settings className=\"w-6 h-6\" />\n              </Button>\n            </div>\n\n            <div className=\"flex gap-2 mb-8\">\n              <Button\n                variant={currentMode === 'work' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('work')}\n                className={`flex-1 ${\n                  currentMode === 'work'\n                    ? 'bg-white text-rose-600 hover:bg-white/90'\n                    : 'text-white hover:bg-white/20'\n                }`}\n              >\n                Work\n              </Button>\n              <Button\n                variant={currentMode === 'shortBreak' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('shortBreak')}\n                className={`flex-1 ${\n                  currentMode === 'shortBreak'\n                    ? 'bg-white text-cyan-600 hover:bg-white/90'\n                    : 'text-white hover:bg-white/20'\n                }`}\n              >\n                Short Break\n              </Button>\n              <Button\n                variant={currentMode === 'longBreak' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('longBreak')}\n                className={`flex-1 ${\n                  currentMode === 'longBreak'\n                    ? 'bg-white text-emerald-600 hover:bg-white/90'\n                    : 'text-white hover:bg-white/20'\n                }`}\n              >\n                Long Break\n              </Button>\n            </div>\n\n            <div className=\"flex justify-center items-center my-12\">\n              <div className=\"relative w-80 h-80\">\n                <svg className=\"w-full h-full transform -rotate-90\" viewBox=\"0 0 320 320\">\n                  {/* Background circle */}\n                  <circle\n                    cx=\"160\"\n                    cy=\"160\"\n                    r=\"140\"\n                    stroke=\"rgba(255, 255, 255, 0.1)\"\n                    strokeWidth=\"12\"\n                    fill=\"none\"\n                  />\n                  {/* Progress circle */}\n                  <motion.circle\n                    cx=\"160\"\n                    cy=\"160\"\n                    r=\"140\"\n                    stroke=\"url(#gradient)\"\n                    strokeWidth=\"12\"\n                    fill=\"none\"\n                    strokeLinecap=\"round\"\n                    strokeDasharray={2 * Math.PI * 140}\n                    strokeDashoffset={2 * Math.PI * 140 * (1 - progress / 100)}\n                    initial={{ strokeDashoffset: 2 * Math.PI * 140 }}\n                    animate={{ strokeDashoffset: 2 * Math.PI * 140 * (1 - progress / 100) }}\n                    transition={{ duration: 0.5, ease: \"easeInOut\" }}\n                  />\n                  {/* Gradient definition */}\n                  <defs>\n                    <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                      <stop offset=\"0%\" stopColor=\"rgba(255, 255, 255, 0.9)\" />\n                      <stop offset=\"50%\" stopColor=\"rgba(255, 255, 255, 0.7)\" />\n                      <stop offset=\"100%\" stopColor=\"rgba(255, 255, 255, 0.5)\" />\n                    </linearGradient>\n                  </defs>\n                </svg>\n                {/* Timer display in center */}\n                <div className=\"absolute inset-0 flex flex-col items-center justify-center\">\n                  <motion.div\n                    key={timeLeft}\n                    initial={{ scale: 1 }}\n                    animate={{ scale: [1, 1.05, 1] }}\n                    transition={{ duration: 0.3 }}\n                    className=\"text-8xl font-bold text-white tracking-tight\"\n                  >\n                    {formatTime(timeLeft)}\n                  </motion.div>\n                  <p className=\"text-white/70 text-lg mt-4 capitalize\">\n                    {currentMode === 'shortBreak' ? 'Short Break' : currentMode === 'longBreak' ? 'Long Break' : 'Focus Time'}\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"text-center mb-8\">\n              <motion.div\n                key={timeLeft}\n                initial={{ scale: 1 }}\n                animate={{ scale: [1, 1.05, 1] }}\n                transition={{ duration: 0.3 }}\n                className=\"text-7xl font-bold text-white mb-4\"\n              >\n                {formatTime(timeLeft)}\n              </motion.div>\n              <p className=\"text-white/80 text-xl capitalize\">\n                {currentMode === 'work' ? 'Focus Time' : currentMode === 'shortBreak' ? 'Short Break' : 'Long Break'}\n              </p>\n            </div>\n\n            <div className=\"flex justify-center gap-4 mb-6\">\n              <Button\n                onClick={handlePlayPause}\n                size=\"lg\"\n                className=\"bg-white/20 hover:bg-white/30 text-white backdrop-blur-sm border border-white/30 px-8\"\n              >\n                {isRunning ? (\n                  <>\n                    <Pause className=\"w-5 h-5 mr-2\" />\n                    Pause\n                  </>\n                ) : (\n                  <>\n                    <Play className=\"w-5 h-5 mr-2\" />\n                    Start\n                  </>\n                )}\n              </Button>\n              <Button\n                onClick={handleReset}\n                size=\"lg\"\n                variant=\"ghost\"\n                className=\"text-white hover:bg-white/20\"\n              >\n                <RotateCcw className=\"w-5 h-5 mr-2\" />\n                Reset\n              </Button>\n            </div>\n\n            <div className=\"text-center text-white/60\">\n              <p>Completed Pomodoros: {completedPomodoros}</p>\n            </div>\n          </div>\n\n          <AnimatePresence>\n            {showSettings && (\n              <motion.div\n                initial={{ opacity: 0, y: 20, scale: 0.95 }}\n                animate={{ opacity: 1, y: 0, scale: 1 }}\n                exit={{ opacity: 0, y: 20, scale: 0.95 }}\n                transition={{ duration: 0.3 }}\n                className=\"mt-6 backdrop-blur-xl bg-white/10 rounded-3xl p-8 shadow-2xl border border-white/20\"\n              >\n                <h2 className=\"text-2xl font-bold text-white mb-6\">Settings</h2>\n                \n                <div className=\"space-y-6\">\n                  <div>\n                    <Label htmlFor=\"work-duration\" className=\"text-white/90 text-lg mb-2 block\">\n                      Work Duration (minutes)\n                    </Label>\n                    <Input\n                      id=\"work-duration\"\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"60\"\n                      value={settings.workDuration}\n                      onChange={(e) => setSettings({ ...settings, workDuration: parseInt(e.target.value) || 1 })}\n                      className=\"bg-white/20 border-white/30 text-white placeholder:text-white/50 backdrop-blur-sm\"\n                    />\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"short-break-duration\" className=\"text-white/90 text-lg mb-2 block\">\n                      Short Break Duration (minutes)\n                    </Label>\n                    <Input\n                      id=\"short-break-duration\"\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"30\"\n                      value={settings.shortBreakDuration}\n                      onChange={(e) => setSettings({ ...settings, shortBreakDuration: parseInt(e.target.value) || 1 })}\n                      className=\"bg-white/20 border-white/30 text-white placeholder:text-white/50 backdrop-blur-sm\"\n                    />\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"long-break-duration\" className=\"text-white/90 text-lg mb-2 block\">\n                      Long Break Duration (minutes)\n                    </Label>\n                    <Input\n                      id=\"long-break-duration\"\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"60\"\n                      value={settings.longBreakDuration}\n                      onChange={(e) => setSettings({ ...settings, longBreakDuration: parseInt(e.target.value) || 1 })}\n                      className=\"bg-white/20 border-white/30 text-white placeholder:text-white/50 backdrop-blur-sm\"\n                    />\n                  </div>\n\n                  <div>\n                    <Label htmlFor=\"long-break-interval\" className=\"text-white/90 text-lg mb-2 block\">\n                      Long Break Interval (pomodoros)\n                    </Label>\n                    <Input\n                      id=\"long-break-interval\"\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"10\"\n                      value={settings.longBreakInterval}\n                      onChange={(e) => setSettings({ ...settings, longBreakInterval: parseInt(e.target.value) || 1 })}\n                      className=\"bg-white/20 border-white/30 text-white placeholder:text-white/50 backdrop-blur-sm\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"flex gap-4 mt-8\">\n                  <Button\n                    onClick={() => {\n                      handleReset();\n                      setShowSettings(false);\n                    }}\n                    className=\"flex-1 bg-white text-rose-600 hover:bg-white/90\"\n                  >\n                    Save & Apply\n                  </Button>\n                  <Button\n                    onClick={() => setShowSettings(false)}\n                    variant=\"ghost\"\n                    className=\"flex-1 text-white hover:bg-white/20\"\n                  >\n                    Cancel\n                  </Button>\n                </div>\n              </motion.div>\n            )}\n          </AnimatePresence>\n\n          <AnimatePresence>\n            {showCompletion && (\n              <motion.div\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                exit={{ opacity: 0 }}\n                className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/50 backdrop-blur-sm\"\n                onClick={() => setShowCompletion(false)}\n              >\n                <motion.div\n                  initial={{ scale: 0, rotate: -180 }}\n                  animate={{ scale: 1, rotate: 0 }}\n                  exit={{ scale: 0, rotate: 180 }}\n                  transition={{ type: \"spring\", duration: 0.6 }}\n                  className=\"bg-white rounded-3xl p-12 shadow-2xl max-w-md mx-4 relative overflow-hidden\"\n                  onClick={(e) => e.stopPropagation()}\n                >\n                  {/* Confetti particles */}\n                  {Array.from({ length: 100 }).map((_, i) => (\n                    <motion.div\n                      key={i}\n                      className=\"absolute w-3 h-3 rounded-full\"\n                      style={{\n                        background: [\n                          '#ef4444', '#f59e0b', '#10b981', '#3b82f6', '#8b5cf6', '#ec4899'\n                        ][i % 6],\n                        left: '50%',\n                        top: '50%',\n                      }}\n                      initial={{ scale: 0, x: 0, y: 0 }}\n                      animate={{\n                        scale: [0, 1, 0.5],\n                        x: (Math.random() - 0.5) * 400,\n                        y: (Math.random() - 0.5) * 400,\n                        rotate: Math.random() * 360,\n                        opacity: [1, 1, 0],\n                      }}\n                      transition={{\n                        duration: 1.5 + Math.random(),\n                        ease: \"easeOut\",\n                        delay: Math.random() * 0.2,\n                      }}\n                    />\n                  ))}\n\n                  <div className=\"relative z-10 text-center\">\n                    <motion.div\n                      initial={{ scale: 0 }}\n                      animate={{ scale: [0, 1.2, 1] }}\n                      transition={{ delay: 0.2, duration: 0.5 }}\n                      className=\"text-6xl mb-4\"\n                    >\n                      \ud83c\udf89\n                    </motion.div>\n                    <motion.h2\n                      initial={{ opacity: 0, y: 20 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      transition={{ delay: 0.4 }}\n                      className={`text-3xl font-bold mb-4 bg-gradient-to-r ${timerModes[currentMode].colors} bg-clip-text text-transparent`}\n                    >\n                      {currentMode === 'work' ? 'Great Work!' : 'Break Complete!'}\n                    </motion.h2>\n                    <motion.p\n                      initial={{ opacity: 0 }}\n                      animate={{ opacity: 1 }}\n                      transition={{ delay: 0.6 }}\n                      className=\"text-gray-600 mb-6\"\n                    >\n                      {currentMode === 'work' \n                        ? `You've completed ${completedPomodoros} pomodoro${completedPomodoros !== 1 ? 's' : ''}!`\n                        : 'Time to get back to work!'}\n                    </motion.p>\n                    <motion.div\n                      initial={{ opacity: 0, y: 20 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      transition={{ delay: 0.8 }}\n                    >\n                      <Button\n                        onClick={() => setShowCompletion(false)}\n                        className={`bg-gradient-to-r ${timerModes[currentMode].colors} text-white px-8 py-6 text-lg`}\n                      >\n                        Continue\n                      </Button>\n                    </motion.div>\n                  </div>\n                </motion.div>\n              </motion.div>\n            )}\n          </AnimatePresence>\n\n          {/* Audio element for completion sound */}\n          <audio\n            ref={audioRef}\n            src=\"data:audio/wav;base64,\n        </motion.div>\n      </div>\n    </div>\n  );\n}",
      "error": null,
      "overall_score": 60,
      "code_quality_score": 18,
      "architecture_score": 16,
      "performance_score": 14,
      "accessibility_score": 12,
      "metadata": {
        "document_id": "eval_room_08a7c12082e9",
        "prompt_category": "productivity",
        "prompt_complexity": 7.0
      }
    },
    {
      "prompt_id": "pomodoro_timer",
      "prompt_name": "Pomodoro Timer",
      "mode": "parallel",
      "run_number": 35,
      "timestamp": "2025-10-14T08:38:29.716299",
      "response_time": 209.51697421073914,
      "total_tokens": null,
      "response_content": "import { useState, useCallback, useEffect, useRef } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Play, Pause, RotateCcw, Settings } from 'lucide-react';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { motion, AnimatePresence } from 'framer-motion';\n\ninterface TimerMode {\n  type: 'work' | 'shortBreak' | 'longBreak';\n  duration: number;\n  label: string;\n}\n\ninterface TimerSettings {\n  workDuration: number;\n  shortBreakDuration: number;\n  longBreakDuration: number;\n  longBreakInterval: number;\n}\n\ninterface Particle {\n  id: number;\n  x: number;\n  y: number;\n  size: number;\n  duration: number;\n  delay: number;\n}\n\nconst defaultSettings: TimerSettings = {\n  workDuration: 25,\n  shortBreakDuration: 5,\n  longBreakDuration: 15,\n  longBreakInterval: 4\n};\n\nconst timerModes: Record<string, { colors: string; gradient: string }> = {\n  work: {\n    colors: 'from-rose-500 via-pink-500 to-purple-500',\n    gradient: 'bg-gradient-to-br from-rose-500/20 via-pink-500/20 to-purple-500/20'\n  },\n  shortBreak: {\n    colors: 'from-cyan-500 via-blue-500 to-indigo-500',\n    gradient: 'bg-gradient-to-br from-cyan-500/20 via-blue-500/20 to-indigo-500/20'\n  },\n  longBreak: {\n    colors: 'from-emerald-500 via-teal-500 to-cyan-500',\n    gradient: 'bg-gradient-to-br from-emerald-500/20 via-teal-500/20 to-cyan-500/20'\n  }\n};\n\nexport default function PomodoroTimer() {\n  const [settings, setSettings] = useState<TimerSettings>(defaultSettings);\n  const [currentMode, setCurrentMode] = useState<'work' | 'shortBreak' | 'longBreak'>('work');\n  const [timeLeft, setTimeLeft] = useState(settings.workDuration * 60);\n  const [isRunning, setIsRunning] = useState(false);\n  const [completedPomodoros, setCompletedPomodoros] = useState(0);\n  const [showSettings, setShowSettings] = useState(false);\n  const [showCompletion, setShowCompletion] = useState(false);\n  const [particles, setParticles] = useState<Particle[]>([]);\n  \n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n  const audioRef = useRef<HTMLAudioElement | null>(null);\n\n  const totalTime = currentMode === 'work' \n    ? settings.workDuration * 60 \n    : currentMode === 'shortBreak'\n    ? settings.shortBreakDuration * 60\n    : settings.longBreakDuration * 60;\n\n  const progress = ((totalTime - timeLeft) / totalTime) * 100;\n\n  useEffect(() => {\n    const generatedParticles: Particle[] = Array.from({ length: 50 }, (_, i) => ({\n      id: i,\n      x: Math.random() * 100,\n      y: Math.random() * 100,\n      size: Math.random() * 4 + 2,\n      duration: Math.random() * 20 + 10,\n      delay: Math.random() * 5\n    }));\n    setParticles(generatedParticles);\n  }, []);\n  useEffect(() => {\n    if (isRunning && timeLeft > 0) {\n      intervalRef.current = setInterval(() => {\n        setTimeLeft((prev) => prev - 1);\n      }, 1000);\n    } else if (timeLeft === 0 && isRunning) {\n      setIsRunning(false);\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n        intervalRef.current = null;\n      }\n      \n      // Show completion animation\n      setShowCompletion(true);\n      \n      // Play completion sound\n      if (audioRef.current) {\n        audioRef.current.play().catch(() => {});\n      }\n      \n      // Handle mode transitions\n      if (currentMode === 'work') {\n        const newCompletedCount = completedPomodoros + 1;\n        setCompletedPomodoros(newCompletedCount);\n        \n        // Determine next break type\n        if (newCompletedCount % settings.longBreakInterval === 0) {\n          setTimeout(() => {\n            setCurrentMode('longBreak');\n            setTimeLeft(settings.longBreakDuration * 60);\n            setShowCompletion(false);\n          }, 3000);\n        } else {\n          setTimeout(() => {\n            setCurrentMode('shortBreak');\n            setTimeLeft(settings.shortBreakDuration * 60);\n            setShowCompletion(false);\n          }, 3000);\n        }\n      } else {\n        // Break completed, switch to work\n        setTimeout(() => {\n          setCurrentMode('work');\n          setTimeLeft(settings.workDuration * 60);\n          setShowCompletion(false);\n        }, 3000);\n      }\n    }\n\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [isRunning, timeLeft, currentMode, completedPomodoros, settings]);\n\n  useEffect(() => {\n    if (isRunning && timeLeft > 0) {\n      intervalRef.current = setInterval(() => {\n        setTimeLeft((prev) => {\n          if (prev <= 1) {\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } else if (timeLeft === 0 && isRunning) {\n      setIsRunning(false);\n      setShowCompletion(true);\n      \n      // Play completion sound\n      if (audioRef.current) {\n        audioRef.current.play().catch(() => {\n          // Silently handle if audio playback fails\n        });\n      }\n\n      // Auto-switch to next mode\n      setTimeout(() => {\n        setShowCompletion(false);\n        \n        if (currentMode === 'work') {\n          const newCompletedPomodoros = completedPomodoros + 1;\n          setCompletedPomodoros(newCompletedPomodoros);\n          \n          // Check if it's time for a long break\n          if (newCompletedPomodoros % settings.longBreakInterval === 0) {\n            setCurrentMode('longBreak');\n            setTimeLeft(settings.longBreakDuration * 60);\n          } else {\n            setCurrentMode('shortBreak');\n            setTimeLeft(settings.shortBreakDuration * 60);\n          }\n        } else {\n          // After any break, go back to work\n          setCurrentMode('work');\n          setTimeLeft(settings.workDuration * 60);\n        }\n      }, 2000);\n    }\n\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };</parameter>\n  }, [isRunning, timeLeft, currentMode, completedPomodoros, settings]);\n\n  const handlePlayPause = useCallback(() => {\n    setIsRunning(!isRunning);\n  }, [isRunning]);\n\n  const handleReset = useCallback(() => {\n    setIsRunning(false);\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n    const duration = currentMode === 'work' \n      ? settings.workDuration * 60 \n      : currentMode === 'shortBreak'\n      ? settings.shortBreakDuration * 60\n      : settings.longBreakDuration * 60;\n    setTimeLeft(duration);\n  }, [currentMode, settings]);\n\n  const handleModeSwitch = useCallback((mode: 'work' | 'shortBreak' | 'longBreak') => {\n    setIsRunning(false);\n    setCurrentMode(mode);\n    const newDuration = mode === 'work' \n      ? settings.workDuration * 60 \n      : mode === 'shortBreak'\n      ? settings.shortBreakDuration * 60\n      : settings.longBreakDuration * 60;\n    setTimeLeft(newDuration);\n  }, [settings]);\n\n  const formatTime = useCallback((seconds: number): string => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  }, []);\n\n  return (\n    <div className={`min-h-screen relative overflow-hidden transition-all duration-1000 ${timerModes[currentMode].gradient}`}>\n      <AnimatePresence>\n        {particles.map((particle) => (\n          <motion.div\n            key={particle.id}\n            className=\"absolute rounded-full bg-white/30 backdrop-blur-sm\"\n            style={{\n              left: `${particle.x}%`,\n              top: `${particle.y}%`,\n              width: particle.size,\n              height: particle.size,\n            }}\n            initial={{ opacity: 0, scale: 0 }}\n            animate={{\n              opacity: [0, 0.6, 0],\n              scale: [0, 1, 0],\n              y: [0, -100, -200],\n            }}\n            transition={{\n              duration: particle.duration,\n              delay: particle.delay,\n              repeat: Infinity,\n              ease: \"easeInOut\",\n            }}\n          />\n        ))}\n      </AnimatePresence>\n      \n      <div className=\"relative z-10 min-h-screen flex flex-col items-center justify-center p-8\">\n        <motion.div\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"w-full max-w-2xl\"\n        >\n          <div className=\"backdrop-blur-xl bg-white/10 rounded-3xl p-8 shadow-2xl border border-white/20\">\n            <div className=\"flex justify-between items-center mb-8\">\n              <h1 className=\"text-4xl font-bold text-white\">Pomodoro Timer</h1>\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                onClick={() => setShowSettings(!showSettings)}\n                className=\"text-white hover:bg-white/20\"\n              >\n                <Settings className=\"w-6 h-6\" />\n              </Button>\n            </div>\n\n            \n<div className=\"flex gap-2 mb-8\">\n              <Button\n                variant={currentMode === 'work' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('work')}\n                className={currentMode === 'work' \n                  ? 'bg-white/30 text-white hover:bg-white/40 backdrop-blur-sm border border-white/30' \n                  : 'text-white/60 hover:bg-white/10 hover:text-white'}\n              >\n                Work\n              </Button>\n              <Button\n                variant={currentMode === 'shortBreak' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('shortBreak')}\n                className={currentMode === 'shortBreak' \n                  ? 'bg-white/30 text-white hover:bg-white/40 backdrop-blur-sm border border-white/30' \n                  : 'text-white/60 hover:bg-white/10 hover:text-white'}\n              >\n                Short Break\n              </Button>\n              <Button\n                variant={currentMode === 'longBreak' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('longBreak')}\n                className={currentMode === 'longBreak' \n                  ? 'bg-white/30 text-white hover:bg-white/40 backdrop-blur-sm border border-white/30' \n                  : 'text-white/60 hover:bg-white/10 hover:text-white'}\n              >\n                Long Break\n              </Button>\n            </div><div className=\"flex gap-2 mb-8\">\n              <Button\n                variant={currentMode === 'work' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('work')}\n                className={`flex-1 ${\n                  currentMode === 'work'\n                    ? 'bg-white text-rose-600 hover:bg-white/90'\n                    : 'text-white hover:bg-white/20'\n                }`}\n              >\n                Work\n              </Button>\n              <Button\n                variant={currentMode === 'shortBreak' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('shortBreak')}\n                className={`flex-1 ${\n                  currentMode === 'shortBreak'\n                    ? 'bg-white text-cyan-600 hover:bg-white/90'\n                    : 'text-white hover:bg-white/20'\n                }`}\n              >\n                Short Break\n              </Button>\n              <Button\n                variant={currentMode === 'longBreak' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('longBreak')}\n                className={`flex-1 ${\n                  currentMode === 'longBreak'\n                    ? 'bg-white text-emerald-600 hover:bg-white/90'\n                    : 'text-white hover:bg-white/20'\n                }`}\n              >\n                Long Break\n              </Button>\n            </div>\n\n            <div className=\"flex justify-center items-center my-12\">\n              <div className=\"relative w-80 h-80\">\n                <svg className=\"w-full h-full transform -rotate-90\" viewBox=\"0 0 320 320\">\n                  {/* Background circle */}\n                  <circle\n                    cx=\"160\"\n                    cy=\"160\"\n                    r=\"140\"\n                    fill=\"none\"\n                    stroke=\"rgba(255, 255, 255, 0.1)\"\n                    strokeWidth=\"12\"\n                  />\n                  \n                  {/* Progress circle */}\n                  <motion.circle\n                    cx=\"160\"\n                    cy=\"160\"\n                    r=\"140\"\n                    fill=\"none\"\n                    stroke=\"url(#gradient)\"\n                    strokeWidth=\"12\"\n                    strokeLinecap=\"round\"\n                    strokeDasharray={2 * Math.PI * 140}\n                    initial={{ strokeDashoffset: 2 * Math.PI * 140 }}\n                    animate={{ \n                      strokeDashoffset: 2 * Math.PI * 140 * (1 - progress / 100)\n                    }}\n                    transition={{ duration: 0.5, ease: \"easeInOut\" }}\n                  />\n                  \n                  {/* Gradient definition */}\n                  <defs>\n                    <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                      <stop \n                        offset=\"0%\" \n                        stopColor={currentMode === 'work' ? '#f43f5e' : currentMode === 'shortBreak' ? '#06b6d4' : '#10b981'} \n                      />\n                      <stop \n                        offset=\"50%\" \n                        stopColor={currentMode === 'work' ? '#ec4899' : currentMode === 'shortBreak' ? '#3b82f6' : '#14b8a6'} \n                      />\n                      <stop \n                        offset=\"100%\" \n                        stopColor={currentMode === 'work' ? '#a855f7' : currentMode === 'shortBreak' ? '#6366f1' : '#06b6d4'} \n                      />\n                    </linearGradient>\n                  </defs>\n                </svg>\n                \n                {/* Timer display in center */}\n                <div className=\"absolute inset-0 flex flex-col items-center justify-center\">\n                  <motion.div\n                    key={timeLeft}\n                    initial={{ scale: 1 }}\n                    animate={{ scale: timeLeft <= 10 && isRunning ? [1, 1.05, 1] : 1 }}\n                    transition={{ duration: 0.5, repeat: timeLeft <= 10 && isRunning ? Infinity : 0 }}\n                    className=\"text-8xl font-bold text-white tracking-tight\"\n                  >\n                    {formatTime(timeLeft)}\n                  </motion.div>\n                  <div className=\"text-xl text-white/80 mt-4 capitalize\">\n                    {currentMode === 'work' ? 'Focus Time' : currentMode === 'shortBreak' ? 'Short Break' : 'Long Break'}\n                  </div>\n                  <div className=\"text-sm text-white/60 mt-2\">\n                    Pomodoros: {completedPomodoros}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"text-center mb-8\">\n              <motion.div\n                key={timeLeft}\n                initial={{ scale: 1 }}\n                animate={{ scale: [1, 1.05, 1] }}\n                transition={{ duration: 0.3 }}\n                className=\"text-7xl font-bold text-white mb-4\"\n              >\n                {formatTime(timeLeft)}\n              </motion.div>\n              <p className=\"text-white/80 text-xl capitalize\">\n                {currentMode === 'work' ? 'Focus Time' : currentMode === 'shortBreak' ? 'Short Break' : 'Long Break'}\n              </p>\n            </div>\n\n            <div className=\"flex justify-center gap-4 mb-6\">\n              <Button\n                onClick={handlePlayPause}\n                size=\"lg\"\n                className=\"bg-white/20 hover:bg-white/30 text-white backdrop-blur-sm border border-white/30 px-8\"\n              >\n                {isRunning ? (\n                  <>\n                    <Pause className=\"w-5 h-5 mr-2\" />\n                    Pause\n                  </>\n                ) : (\n                  <>\n                    <Play className=\"w-5 h-5 mr-2\" />\n                    Start\n                  </>\n                )}\n              </Button>\n              <Button\n                onClick={handleReset}\n                size=\"lg\"\n                variant=\"ghost\"\n                className=\"text-white hover:bg-white/20\"\n              >\n                <RotateCcw className=\"w-5 h-5 mr-2\" />\n                Reset\n              </Button>\n            </div>\n\n            <div className=\"text-center text-white/60\">\n              <p>Completed Pomodoros: {completedPomodoros}</p>\n            </div>\n          </div>\n\n          \n<AnimatePresence>\n            {showSettings && (\n              <motion.div\n                initial={{ opacity: 0, y: 20, scale: 0.95 }}\n                animate={{ opacity: 1, y: 0, scale: 1 }}\n                exit={{ opacity: 0, y: 20, scale: 0.95 }}\n                transition={{ duration: 0.3 }}\n                className=\"backdrop-blur-xl bg-white/10 rounded-3xl p-8 shadow-2xl border border-white/20 mt-6\"\n              >\n                <h2 className=\"text-2xl font-bold text-white mb-6\">Settings</h2>\n                <div className=\"space-y-6\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"work-duration\" className=\"text-white text-sm\">\n                      Work Duration (minutes)\n                    </Label>\n                    <Input\n                      id=\"work-duration\"\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"60\"\n                      value={settings.workDuration}\n                      onChange={(e) => setSettings({ ...settings, workDuration: parseInt(e.target.value) || 1 })}\n                      className=\"bg-white/10 border-white/30 text-white placeholder:text-white/50 focus:border-white/50\"\n                    />\n                  </div>\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"short-break-duration\" className=\"text-white text-sm\">\n                      Short Break Duration (minutes)\n                    </Label>\n                    <Input\n                      id=\"short-break-duration\"\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"30\"\n                      value={settings.shortBreakDuration}\n                      onChange={(e) => setSettings({ ...settings, shortBreakDuration: parseInt(e.target.value) || 1 })}\n                      className=\"bg-white/10 border-white/30 text-white placeholder:text-white/50 focus:border-white/50\"\n                    />\n                  </div>\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"long-break-duration\" className=\"text-white text-sm\">\n                      Long Break Duration (minutes)\n                    </Label>\n                    <Input\n                      id=\"long-break-duration\"\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"60\"\n                      value={settings.longBreakDuration}\n                      onChange={(e) => setSettings({ ...settings, longBreakDuration: parseInt(e.target.value) || 1 })}\n                      className=\"bg-white/10 border-white/30 text-white placeholder:text-white/50 focus:border-white/50\"\n                    />\n                  </div>\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"long-break-interval\" className=\"text-white text-sm\">\n                      Long Break Interval (pomodoros)\n                    </Label>\n                    <Input\n                      id=\"long-break-interval\"\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"10\"\n                      value={settings.longBreakInterval}\n                      onChange={(e) => setSettings({ ...settings, longBreakInterval: parseInt(e.target.value) || 1 })}\n                      className=\"bg-white/10 border-white/30 text-white placeholder:text-white/50 focus:border-white/50\"\n                    />\n                  </div>\n                  <div className=\"flex gap-3 pt-4\">\n                    <Button\n                      onClick={() => {\n                        handleReset();\n                        setShowSettings(false);\n                      }}\n                      className=\"flex-1 bg-white/20 hover:bg-white/30 text-white backdrop-blur-sm border border-white/30\"\n                    >\n                      Save\n                    </Button>\n                    <Button\n                      onClick={() => setShowSettings(false)}\n                      variant=\"ghost\"\n                      className=\"flex-1 text-white hover:bg-white/20\"\n                    >\n                      Cancel\n                    </Button>\n                  </div>\n                </div>\n              </motion.div>\n            )}\n          </AnimatePresence>\n\n          <AnimatePresence>\n          {showCompletion && (\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              exit={{ opacity: 0 }}\n              className=\"fixed inset-0 z-50 flex items-center justify-center pointer-events-none\"\n            >\n              {/* Confetti particles */}\n              {Array.from({ length: 100 }, (_, i) => {\n                const angle = (Math.PI * 2 * i) / 100;\n                const velocity = Math.random() * 300 + 200;\n                const x = Math.cos(angle) * velocity;\n                const y = Math.sin(angle) * velocity - 200;\n                const rotation = Math.random() * 360;\n                const colors = ['#ef4444', '#f59e0b', '#10b981', '#3b82f6', '#8b5cf6', '#ec4899'];\n                const color = colors[Math.floor(Math.random() * colors.length)];\n                \n                return (\n                  <motion.div\n                    key={i}\n                    className=\"absolute w-3 h-3 rounded-sm\"\n                    style={{\n                      backgroundColor: color,\n                      left: '50%',\n                      top: '50%',\n                    }}\n                    initial={{ \n                      x: 0, \n                      y: 0, \n                      opacity: 1, \n                      rotate: 0,\n                      scale: 1 \n                    }}\n                    animate={{\n                      x: x,\n                      y: y,\n                      opacity: 0,\n                      rotate: rotation,\n                      scale: [1, 1.5, 0.5],\n                    }}\n                    transition={{\n                      duration: 2,\n                      ease: [0.25, 0.46, 0.45, 0.94],\n                    }}\n                  />\n                );\n              })}\n              \n              {/* Celebration message */}\n              <motion.div\n                initial={{ scale: 0, rotate: -10 }}\n                animate={{ \n                  scale: [0, 1.2, 1],\n                  rotate: [0, 10, -10, 0],\n                }}\n                transition={{\n                  duration: 0.6,\n                  ease: \"easeOut\",\n                }}\n                className=\"backdrop-blur-xl bg-white/20 rounded-3xl p-12 shadow-2xl border-4 border-white/40 pointer-events-auto\"\n              >\n                <motion.div\n                  animate={{\n                    scale: [1, 1.1, 1],\n                  }}\n                  transition={{\n                    duration: 1,\n                    repeat: Infinity,\n                    ease: \"easeInOut\",\n                  }}\n                  className=\"text-center\"\n                >\n                  <div className=\"text-6xl mb-4\">\ud83c\udf89</div>\n                  <h2 className=\"text-4xl font-bold text-white mb-2\">\n                    {currentMode === 'work' ? 'Great Work!' : 'Break Complete!'}\n                  </h2>\n                  <p className=\"text-xl text-white/80\">\n                    {currentMode === 'work' \n                      ? 'Time for a well-deserved break!' \n                      : 'Ready to focus again?'}\n                  </p>\n                </motion.div>\n              </motion.div>\n              \n              {/* Radial pulse effect */}\n              <motion.div\n                className=\"absolute inset-0 flex items-center justify-center\"\n                initial={{ opacity: 0 }}\n                animate={{ opacity: [0, 0.5, 0] }}\n                transition={{ duration: 1.5 }}\n              >\n                <motion.div\n                  className=\"w-32 h-32 rounded-full border-4 border-white\"\n                  initial={{ scale: 0, opacity: 1 }}\n                  animate={{ scale: 8, opacity: 0 }}\n                  transition={{ duration: 1.5, ease: \"easeOut\" }}\n                />\n              </motion.div>\n            </motion.div>\n          )}\n        </AnimatePresence>\n\n        {/* Hidden audio element for completion sound */}\n        <audio\n          ref={audioRef}\n          src=\"data:audio/wav;base64,\n        </motion.div>\n      </div>\n    </div>\n  );\n}",
      "error": null,
      "overall_score": 53,
      "code_quality_score": 14,
      "architecture_score": 12,
      "performance_score": 11,
      "accessibility_score": 16,
      "metadata": {
        "document_id": "eval_room_7548a2189618",
        "prompt_category": "productivity",
        "prompt_complexity": 7.0
      }
    },
    {
      "prompt_id": "pomodoro_timer",
      "prompt_name": "Pomodoro Timer",
      "mode": "parallel",
      "run_number": 37,
      "timestamp": "2025-10-14T09:29:40.153218",
      "response_time": 234.54723405838013,
      "total_tokens": null,
      "response_content": "import { useState, useCallback, useEffect, useRef } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Play, Pause, RotateCcw, Settings } from 'lucide-react';\nimport { motion, AnimatePresence } from 'framer-motion';\n\ninterface TimerMode {\n  type: 'work' | 'shortBreak' | 'longBreak';\n  duration: number;\n  label: string;\n}\n\ninterface TimerSettings {\n  workDuration: number;\n  shortBreakDuration: number;\n  longBreakDuration: number;\n  longBreakInterval: number;\n}\n\ninterface Particle {\n  id: number;\n  x: number;\n  y: number;\n  size: number;\n  duration: number;\n  delay: number;\n}\n\nconst defaultSettings: TimerSettings = {\n  workDuration: 25,\n  shortBreakDuration: 5,\n  longBreakDuration: 15,\n  longBreakInterval: 4\n};\n\nconst timerModes: Record<string, { colors: string; gradient: string }> = {\n  work: {\n    colors: 'from-rose-500 via-pink-500 to-purple-500',\n    gradient: 'bg-gradient-to-br from-rose-500/20 via-pink-500/20 to-purple-500/20'\n  },\n  shortBreak: {\n    colors: 'from-cyan-500 via-blue-500 to-indigo-500',\n    gradient: 'bg-gradient-to-br from-cyan-500/20 via-blue-500/20 to-indigo-500/20'\n  },\n  longBreak: {\n    colors: 'from-emerald-500 via-teal-500 to-cyan-500',\n    gradient: 'bg-gradient-to-br from-emerald-500/20 via-teal-500/20 to-cyan-500/20'\n  }\n};\n\nexport default function PomodoroTimer() {\n  const [settings, setSettings] = useState<TimerSettings>(defaultSettings);\n  const [currentMode, setCurrentMode] = useState<'work' | 'shortBreak' | 'longBreak'>('work');\n  const [timeLeft, setTimeLeft] = useState(settings.workDuration * 60);\n  const [isRunning, setIsRunning] = useState(false);\n  const [completedPomodoros, setCompletedPomodoros] = useState(0);\n  const [showSettings, setShowSettings] = useState(false);\n  const [showCompletion, setShowCompletion] = useState(false);\n  const [particles, setParticles] = useState<Particle[]>([]);\n  \n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n  const audioRef = useRef<HTMLAudioElement | null>(null);\n\n  const totalTime = currentMode === 'work' \n    ? settings.workDuration * 60 \n    : currentMode === 'shortBreak'\n    ? settings.shortBreakDuration * 60\n    : settings.longBreakDuration * 60;\n\n  const progress = ((totalTime - timeLeft) / totalTime) * 100;\n\n  useEffect(() => {\n    const generatedParticles: Particle[] = Array.from({ length: 50 }, (_, i) => ({\n      id: i,\n      x: Math.random() * 100,\n      y: Math.random() * 100,\n      size: Math.random() * 4 + 2,\n      duration: Math.random() * 10 + 10,\n      delay: Math.random() * 5\n    }));\n    setParticles(generatedParticles);\n  }, []);\n\n  useEffect(() => {\n    if (isRunning && timeLeft > 0) {\n      intervalRef.current = setInterval(() => {\n        setTimeLeft((prev) => {\n          if (prev <= 1) {\n            setIsRunning(false);\n            \n            // Play completion sound\n            if (audioRef.current) {\n              audioRef.current.play().catch(() => {});\n            }\n            \n            // Show completion animation\n            setShowCompletion(true);\n            setTimeout(() => setShowCompletion(false), 2000);\n            \n            // Handle mode switching\n            if (currentMode === 'work') {\n              const newCompletedPomodoros = completedPomodoros + 1;\n              setCompletedPomodoros(newCompletedPomodoros);\n              \n              // Switch to long break after longBreakInterval pomodoros, otherwise short break\n              if (newCompletedPomodoros % settings.longBreakInterval === 0) {\n                setCurrentMode('longBreak');\n                setTimeLeft(settings.longBreakDuration * 60);\n              } else {\n                setCurrentMode('shortBreak');\n                setTimeLeft(settings.shortBreakDuration * 60);\n              }\n            } else {\n              // After any break, return to work\n              setCurrentMode('work');\n              setTimeLeft(settings.workDuration * 60);\n            }\n            \n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } else {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n        intervalRef.current = null;\n      }\n    }\n    \n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [isRunning, timeLeft, currentMode, completedPomodoros, settings]);\n\n  const handlePlayPause = useCallback(() => {\n    setIsRunning(!isRunning);\n  }, [isRunning]);\n\n  useEffect(() => {\n    if (isRunning && timeLeft > 0) {\n      intervalRef.current = setInterval(() => {\n        setTimeLeft((prev) => {\n          if (prev <= 1) {\n            setIsRunning(false);\n            setShowCompletion(true);\n            \n            // Play completion sound\n            if (audioRef.current) {\n              audioRef.current.play().catch(() => {});\n            }\n            \n            // Handle mode switching\n            if (currentMode === 'work') {\n              const newCompletedCount = completedPomodoros + 1;\n              setCompletedPomodoros(newCompletedCount);\n              \n              // Switch to long break after interval, otherwise short break\n              if (newCompletedCount % settings.longBreakInterval === 0) {\n                setTimeout(() => {\n                  setCurrentMode('longBreak');\n                  setTimeLeft(settings.longBreakDuration * 60);\n                  setShowCompletion(false);\n                }, 3000);\n              } else {\n                setTimeout(() => {\n                  setCurrentMode('shortBreak');\n                  setTimeLeft(settings.shortBreakDuration * 60);\n                  setShowCompletion(false);\n                }, 3000);\n              }\n            } else {\n              // Break finished, switch back to work\n              setTimeout(() => {\n                setCurrentMode('work');\n                setTimeLeft(settings.workDuration * 60);\n                setShowCompletion(false);\n              }, 3000);\n            }\n            \n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } else if (!isRunning && intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n    \n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [isRunning, timeLeft, currentMode, completedPomodoros, settings]);\n\n  const handleReset = useCallback(() => {\n    setIsRunning(false);\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n    const duration = currentMode === 'work' \n      ? settings.workDuration * 60 \n      : currentMode === 'shortBreak'\n      ? settings.shortBreakDuration * 60\n      : settings.longBreakDuration * 60;\n    setTimeLeft(duration);\n  }, [currentMode, settings]);\n\n  const handleModeSwitch = useCallback((mode: 'work' | 'shortBreak' | 'longBreak') => {\n    setIsRunning(false);\n    setCurrentMode(mode);\n    const newDuration = mode === 'work' \n      ? settings.workDuration * 60 \n      : mode === 'shortBreak'\n      ? settings.shortBreakDuration * 60\n      : settings.longBreakDuration * 60;\n    setTimeLeft(newDuration);\n  }, [settings]);\n\n  const formatTime = useCallback((seconds: number): string => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  }, []);\n\n  return (\n    <div className={`min-h-screen relative overflow-hidden transition-all duration-1000 ${timerModes[currentMode].gradient}`}>\n      <AnimatePresence>\n        {particles.map((particle) => (\n          <motion.div\n            key={particle.id}\n            className=\"absolute rounded-full bg-white/30 backdrop-blur-sm\"\n            style={{\n              left: `${particle.x}%`,\n              top: `${particle.y}%`,\n              width: particle.size,\n              height: particle.size,\n            }}\n            initial={{ opacity: 0, scale: 0 }}\n            animate={{\n              opacity: [0, 0.6, 0],\n              scale: [0, 1, 0],\n              y: [0, -100, -200],\n            }}\n            transition={{\n              duration: particle.duration,\n              delay: particle.delay,\n              repeat: Infinity,\n              ease: \"easeInOut\",\n            }}\n          />\n        ))}\n      </AnimatePresence>\n      \n      <div className=\"relative z-10 min-h-screen flex flex-col items-center justify-center p-8\">\n        <motion.div\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"w-full max-w-2xl\"\n        >\n          <div className=\"backdrop-blur-xl bg-white/10 rounded-3xl p-8 shadow-2xl border border-white/20\">\n            <div className=\"flex justify-between items-center mb-8\">\n              <h1 className=\"text-4xl font-bold text-white\">Pomodoro Timer</h1>\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                onClick={() => setShowSettings(!showSettings)}\n                className=\"text-white hover:bg-white/20\"\n              >\n                <Settings className=\"w-6 h-6\" />\n              </Button>\n            </div>\n\n            \n            <div className=\"flex gap-2 mb-8\">\n              <Button\n                variant={currentMode === 'work' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('work')}\n                className={currentMode === 'work' \n                  ? 'bg-white/30 text-white hover:bg-white/40 backdrop-blur-sm border border-white/30' \n                  : 'text-white/70 hover:bg-white/20 hover:text-white'}\n              >\n                Work\n              </Button>\n              <Button\n                variant={currentMode === 'shortBreak' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('shortBreak')}\n                className={currentMode === 'shortBreak' \n                  ? 'bg-white/30 text-white hover:bg-white/40 backdrop-blur-sm border border-white/30' \n                  : 'text-white/70 hover:bg-white/20 hover:text-white'}\n              >\n                Short Break\n              </Button>\n              <Button\n                variant={currentMode === 'longBreak' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('longBreak')}\n                className={currentMode === 'longBreak' \n                  ? 'bg-white/30 text-white hover:bg-white/40 backdrop-blur-sm border border-white/30' \n                  : 'text-white/70 hover:bg-white/20 hover:text-white'}\n              >\n                Long Break\n              </Button>\n            </div><div className=\"flex gap-2 mb-8\">\n              <Button\n                variant={currentMode === 'work' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('work')}\n                className={`flex-1 ${\n                  currentMode === 'work'\n                    ? 'bg-white text-rose-600 hover:bg-white/90'\n                    : 'text-white hover:bg-white/20'\n                }`}\n              >\n                Work\n              </Button>\n              <Button\n                variant={currentMode === 'shortBreak' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('shortBreak')}\n                className={`flex-1 ${\n                  currentMode === 'shortBreak'\n                    ? 'bg-white text-cyan-600 hover:bg-white/90'\n                    : 'text-white hover:bg-white/20'\n                }`}\n              >\n                Short Break\n              </Button>\n              <Button\n                variant={currentMode === 'longBreak' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('longBreak')}\n                className={`flex-1 ${\n                  currentMode === 'longBreak'\n                    ? 'bg-white text-emerald-600 hover:bg-white/90'\n                    : 'text-white hover:bg-white/20'\n                }`}\n              >\n                Long Break\n              </Button>\n            </div>\n\n            <div className=\"flex justify-center items-center my-12\">\n              <div className=\"relative w-80 h-80\">\n                <svg className=\"w-full h-full transform -rotate-90\" viewBox=\"0 0 320 320\">\n                  {/* Background circle */}\n                  <circle\n                    cx=\"160\"\n                    cy=\"160\"\n                    r=\"140\"\n                    stroke=\"rgba(255, 255, 255, 0.1)\"\n                    strokeWidth=\"12\"\n                    fill=\"none\"\n                  />\n                  {/* Progress circle */}\n                  <motion.circle\n                    cx=\"160\"\n                    cy=\"160\"\n                    r=\"140\"\n                    stroke=\"url(#gradient)\"\n                    strokeWidth=\"12\"\n                    fill=\"none\"\n                    strokeLinecap=\"round\"\n                    strokeDasharray={2 * Math.PI * 140}\n                    initial={{ strokeDashoffset: 2 * Math.PI * 140 }}\n                    animate={{ \n                      strokeDashoffset: 2 * Math.PI * 140 * (1 - progress / 100)\n                    }}\n                    transition={{ duration: 0.5, ease: \"easeInOut\" }}\n                  />\n                  {/* Gradient definition */}\n                  <defs>\n                    <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                      <stop offset=\"0%\" stopColor=\"rgba(255, 255, 255, 0.9)\" />\n                      <stop offset=\"50%\" stopColor=\"rgba(255, 255, 255, 0.7)\" />\n                      <stop offset=\"100%\" stopColor=\"rgba(255, 255, 255, 0.5)\" />\n                    </linearGradient>\n                  </defs>\n                </svg>\n                {/* Timer display in center */}\n                <div className=\"absolute inset-0 flex flex-col items-center justify-center\">\n                  <motion.div\n                    key={timeLeft}\n                    initial={{ scale: 1 }}\n                    animate={{ scale: timeLeft <= 10 && isRunning ? [1, 1.05, 1] : 1 }}\n                    transition={{ duration: 0.5, repeat: timeLeft <= 10 && isRunning ? Infinity : 0 }}\n                    className=\"text-8xl font-bold text-white tracking-tight\"\n                  >\n                    {formatTime(timeLeft)}\n                  </motion.div>\n                  <div className=\"text-xl text-white/70 mt-2 capitalize\">\n                    {currentMode === 'shortBreak' ? 'Short Break' : currentMode === 'longBreak' ? 'Long Break' : 'Focus Time'}\n                  </div>\n                </div>\n              </div></parameter>\n</invoke>\n            </div>\n\n            <div className=\"text-center mb-8\">\n              <motion.div\n                key={timeLeft}\n                initial={{ scale: 1 }}\n                animate={{ scale: [1, 1.05, 1] }}\n                transition={{ duration: 0.3 }}\n                className=\"text-7xl font-bold text-white mb-4\"\n              >\n                {formatTime(timeLeft)}\n              </motion.div>\n              <p className=\"text-white/80 text-xl capitalize\">\n                {currentMode === 'work' ? 'Focus Time' : currentMode === 'shortBreak' ? 'Short Break' : 'Long Break'}\n              </p>\n            </div>\n\n            <div className=\"flex justify-center gap-4 mb-6\">\n              <Button\n                onClick={handlePlayPause}\n                size=\"lg\"\n                className=\"bg-white/20 hover:bg-white/30 text-white backdrop-blur-sm border border-white/30 px-8\"\n              >\n                {isRunning ? (\n                  <>\n                    <Pause className=\"w-5 h-5 mr-2\" />\n                    Pause\n                  </>\n                ) : (\n                  <>\n                    <Play className=\"w-5 h-5 mr-2\" />\n                    Start\n                  </>\n                )}\n              </Button>\n              <Button\n                onClick={handleReset}\n                size=\"lg\"\n                variant=\"ghost\"\n                className=\"text-white hover:bg-white/20\"\n              >\n                <RotateCcw className=\"w-5 h-5 mr-2\" />\n                Reset\n              </Button>\n            </div>\n\n            <div className=\"text-center text-white/60\">\n              <p className=\"text-sm\">Completed Pomodoros: {completedPomodoros}</p>\n            </div>\n          </div>\n\n                    <AnimatePresence>\n            {showSettings && (\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                exit={{ opacity: 0, y: 20 }}\n                className=\"mt-6 backdrop-blur-xl bg-white/10 rounded-3xl p-8 shadow-2xl border border-white/20\"\n              >\n                <h2 className=\"text-2xl font-bold text-white mb-6\">Settings</h2>\n                <div className=\"space-y-4\">\n                  <div>\n                    <label className=\"block text-white/80 mb-2\">Work Duration (minutes)</label>\n                    <input\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"60\"\n                      value={settings.workDuration}\n                      onChange={(e) => setSettings({ ...settings, workDuration: parseInt(e.target.value) || 25 })}\n                      className=\"w-full px-4 py-2 rounded-lg bg-white/20 text-white border border-white/30 focus:outline-none focus:ring-2 focus:ring-white/50\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-white/80 mb-2\">Short Break Duration (minutes)</label>\n                    <input\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"30\"\n                      value={settings.shortBreakDuration}\n                      onChange={(e) => setSettings({ ...settings, shortBreakDuration: parseInt(e.target.value) || 5 })}\n                      className=\"w-full px-4 py-2 rounded-lg bg-white/20 text-white border border-white/30 focus:outline-none focus:ring-2 focus:ring-white/50\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-white/80 mb-2\">Long Break Duration (minutes)</label>\n                    <input\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"60\"\n                      value={settings.longBreakDuration}\n                      onChange={(e) => setSettings({ ...settings, longBreakDuration: parseInt(e.target.value) || 15 })}\n                      className=\"w-full px-4 py-2 rounded-lg bg-white/20 text-white border border-white/30 focus:outline-none focus:ring-2 focus:ring-white/50\"\n                    />\n                  </div>\n                  <div>\n                    <label className=\"block text-white/80 mb-2\">Long Break Interval (pomodoros)</label>\n                    <input\n                      type=\"number\"\n                      min=\"2\"\n                      max=\"10\"\n                      value={settings.longBreakInterval}\n                      onChange={(e) => setSettings({ ...settings, longBreakInterval: parseInt(e.target.value) || 4 })}\n                      className=\"w-full px-4 py-2 rounded-lg bg-white/20 text-white border border-white/30 focus:outline-none focus:ring-2 focus:ring-white/50\"\n                    />\n                  </div>\n                </div>\n                <div className=\"flex gap-4 mt-6\">\n                  <Button\n                    onClick={() => {\n                      setShowSettings(false);\n                      // Update time if current mode duration changed\n                      if (!isRunning) {\n                        const newDuration = currentMode === 'work' \n                          ? settings.workDuration * 60 \n                          : currentMode === 'shortBreak'\n                          ? settings.shortBreakDuration * 60\n                          : settings.longBreakDuration * 60;\n                        setTimeLeft(newDuration);\n                      }\n                    }}\n                    className=\"flex-1 bg-white/20 hover:bg-white/30 text-white backdrop-blur-sm border border-white/30\"\n                  >\n                    Save\n                  </Button>\n                  <Button\n                    onClick={() => {\n                      setSettings(defaultSettings);\n                      setShowSettings(false);\n                    }}\n                    variant=\"ghost\"\n                    className=\"flex-1 text-white hover:bg-white/20\"\n                  >\n                    Cancel\n                  </Button>\n                </div>\n              </motion.div>\n            )}\n          </AnimatePresence>\n\n          <AnimatePresence>\n            {showCompletion && (\n              <motion.div\n                initial={{ opacity: 0, scale: 0.8 }}\n                animate={{ opacity: 1, scale: 1 }}\n                exit={{ opacity: 0, scale: 0.8 }}\n                className=\"fixed inset-0 flex items-center justify-center z-50 pointer-events-none\"\n              >\n                <motion.div\n                  initial={{ scale: 0 }}\n                  animate={{ scale: [0, 1.2, 1] }}\n                  transition={{ duration: 0.6, ease: \"easeOut\" }}\n                  className=\"backdrop-blur-xl bg-white/20 rounded-3xl p-12 shadow-2xl border border-white/30\"\n                >\n                  <motion.div\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ delay: 0.3 }}\n                  >\n                    <h2 className=\"text-5xl font-bold text-white text-center mb-4\">\n                      {currentMode === 'work' ? '\ud83c\udf89 Great Work!' : '\u2728 Break Complete!'}\n                    </h2>\n                    <p className=\"text-white/80 text-xl text-center\">\n                      {currentMode === 'work' \n                        ? 'Time for a well-deserved break!' \n                        : 'Ready to focus again?'}\n                    </p>\n                  </motion.div>\n                  <motion.div\n                    className=\"absolute inset-0 rounded-3xl\"\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: [0, 0.5, 0] }}\n                    transition={{ duration: 2, repeat: Infinity }}\n                  >\n                    <div className={`absolute inset-0 rounded-3xl bg-gradient-to-r ${timerModes[currentMode].colors} blur-xl`} />\n                  </motion.div>\n                </motion.div>\n              </motion.div>\n            )}\n          </AnimatePresence>\n\n          <audio ref={audioRef} src=\"data:audio/wav;base64,\n\n          <AnimatePresence>\n            {showCompletion && (\n              <motion.div\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                exit={{ opacity: 0 }}\n                className=\"fixed inset-0 z-50 flex items-center justify-center pointer-events-none\"\n              >\n                {/* Confetti particles */}\n                {Array.from({ length: 100 }, (_, i) => {\n                  const angle = (Math.PI * 2 * i) / 100;\n                  const velocity = Math.random() * 300 + 200;\n                  const colors = ['#ef4444', '#f59e0b', '#10b981', '#3b82f6', '#8b5cf6', '#ec4899'];\n                  const color = colors[Math.floor(Math.random() * colors.length)];\n                  \n                  return (\n                    <motion.div\n                      key={i}\n                      className=\"absolute rounded-full\"\n                      style={{\n                        width: Math.random() * 10 + 5,\n                        height: Math.random() * 10 + 5,\n                        backgroundColor: color,\n                        left: '50%',\n                        top: '50%',\n                      }}\n                      initial={{ \n                        x: 0, \n                        y: 0, \n                        opacity: 1,\n                        scale: 0,\n                        rotate: 0\n                      }}\n                      animate={{\n                        x: Math.cos(angle) * velocity,\n                        y: Math.sin(angle) * velocity - 200,\n                        opacity: [1, 1, 0],\n                        scale: [0, 1, 0.5],\n                        rotate: Math.random() * 720 - 360\n                      }}\n                      transition={{\n                        duration: 2,\n                        ease: [0.17, 0.67, 0.83, 0.67],\n                      }}\n                    />\n                  );\n                })}\n                \n                {/* Center celebration message */}\n                <motion.div\n                  initial={{ scale: 0, rotate: -180 }}\n                  animate={{ scale: 1, rotate: 0 }}\n                  exit={{ scale: 0, rotate: 180 }}\n                  transition={{ \n                    type: \"spring\", \n                    stiffness: 200, \n                    damping: 15 \n                  }}\n                  className=\"backdrop-blur-xl bg-white/20 rounded-3xl p-12 shadow-2xl border-4 border-white/40 pointer-events-auto\"\n                >\n                  <motion.div\n                    animate={{ \n                      scale: [1, 1.2, 1],\n                      rotate: [0, 5, -5, 0]\n                    }}\n                    transition={{ \n                      duration: 0.5,\n                      repeat: Infinity,\n                      repeatDelay: 0.5\n                    }}\n                    className=\"text-8xl mb-4 text-center\"\n                  >\n                    \ud83c\udf89\n                  </motion.div>\n                  <h2 className=\"text-4xl font-bold text-white text-center mb-2\">\n                    {currentMode === 'work' ? 'Great Work!' : 'Break Complete!'}\n                  </h2>\n                  <p className=\"text-white/80 text-xl text-center\">\n                    {currentMode === 'work' \n                      ? 'Time for a well-deserved break!' \n                      : 'Ready to focus again?'}\n                  </p>\n                  <Button\n                    onClick={() => setShowCompletion(false)}\n                    className=\"mt-6 w-full bg-white/30 hover:bg-white/40 text-white backdrop-blur-sm border border-white/40\"\n                    size=\"lg\"\n                  >\n                    Continue\n                  </Button>\n                </motion.div>\n              </motion.div>\n            )}\n          </AnimatePresence>\n        </motion.div>\n      </div>\n    </div>\n  );\n}",
      "error": null,
      "overall_score": 41,
      "code_quality_score": 12,
      "architecture_score": 10,
      "performance_score": 8,
      "accessibility_score": 11,
      "metadata": {
        "document_id": "eval_room_fad48d4c8935",
        "prompt_category": "productivity",
        "prompt_complexity": 7.0
      }
    },
    {
      "prompt_id": "algorithm_visualizer",
      "prompt_name": "Algorithm Visualizer",
      "mode": "parallel",
      "run_number": 1,
      "timestamp": "2025-10-14T09:34:18.805784",
      "response_time": 409.7918312549591,
      "total_tokens": null,
      "response_content": "import { useState, useCallback } from 'react';\nimport { useEffect, useRef } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Slider } from '@/components/ui/slider';\nimport { Play, Pause, RotateCcw, Zap, BarChart3 } from 'lucide-react';\nimport { motion } from 'framer-motion';\n\ninterface ArrayElement {\n  value: number;\n  id: string;\n  isComparing?: boolean;\n  isSwapping?: boolean;\n  isSorted?: boolean;\n}\n\ninterface AlgorithmStep {\n  array: ArrayElement[];\n  comparingIndices: number[];\n  swappingIndices: number[];\n  sortedIndices: number[];\n}\n\ntype AlgorithmType = 'bubble' | 'quick' | 'merge' | 'insertion';\n\nconst NEON_COLORS = [\n  '#00ffff',\n  '#ff00ff', \n  '#00ff00',\n  '#ffff00',\n  '#ff0066',\n  '#00ffaa'\n];\n\nconst mockAlgorithms = [\n  { id: 'bubble', name: 'Bubble Sort', complexity: 'O(n\u00b2)' },\n  { id: 'quick', name: 'Quick Sort', complexity: 'O(n log n)' },\n  { id: 'merge', name: 'Merge Sort', complexity: 'O(n log n)' },\n  { id: 'insertion', name: 'Insertion Sort', complexity: 'O(n\u00b2)' }\n];\n\nexport default function AlgorithmVisualizer() {\n  const [array, setArray] = useState<ArrayElement[]>([]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [speed, setSpeed] = useState([50]);\n  const [arraySize, setArraySize] = useState([20]);\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState<AlgorithmType>('bubble');\n  const [currentStep, setCurrentStep] = useState(0);\n  const [steps, setSteps] = useState<AlgorithmStep[]>([]);\n  const [comparisons, setComparisons] = useState(0);\n  const [swaps, setSwaps] = useState(0);\n\n  const generateRandomArray = useCallback(() => {\n    const newArray: ArrayElement[] = Array.from({ length: arraySize[0] }, (_, index) => ({\n      value: Math.floor(Math.random() * 100) + 5,\n      id: `element-${Date.now()}-${index}`,\n      isComparing: false,\n      isSwapping: false,\n      isSorted: false\n    }));\n    setArray(newArray);\n    setSteps([]);\n    setCurrentStep(0);\n    setIsPlaying(false);\n  }, [arraySize]);\n\n  const resetVisualization = useCallback(() => {\n\nsetIsPlaying(false);\n    setCurrentStep(0);\n    setSteps([]);\n        generateRandomArray();\n  }, [generateRandomArray]);\n\n  const animateSteps = useCallback(() => {\n    if (currentStep >= steps.length) {\n      setIsPlaying(false);\n      return;\n    }\n\n    const step = steps[currentStep];\n    setArray(step.array);\n    setCurrentStep(prev => prev + 1);\n  }, [currentStep, steps]);\n\n  const startVisualization = useCallback(() => {\n    if (steps.length === 0 || currentStep >= steps.length) return;\n    setIsPlaying(true);\n    \n  }, [steps, speed, currentStep]);\n  useEffect(() => {\n    if (!isPlaying) return;\n\n    const delay = 1000 - (speed[0] * 9.5);\n    const timer = setTimeout(() => {\n      animateSteps();\n    }, delay);\n\n    return () => clearTimeout(timer);\n  }, [isPlaying, speed, animateSteps]);\n\n  const pauseVisualization = useCallback(() => {\n\n    setIsPlaying(false);\n  }, []);\n\n  const generateSortingSteps = useCallback((algorithm: AlgorithmType) => {\n    if (array.length === 0) return;\n\n    const newSteps: AlgorithmStep[] = [];\n    const arr = [...array];\n\n    const addStep = (\n      comparingIndices: number[] = [],\n      swappingIndices: number[] = [],\n      sortedIndices: number[] = []\n    ) => {\n      newSteps.push({\n        array: arr.map((el, idx) => ({\n          ...el,\n          isComparing: comparingIndices.includes(idx),\n          isSwapping: swappingIndices.includes(idx),\n          isSorted: sortedIndices.includes(idx)\n        })),\n        comparingIndices,\n        swappingIndices,\n        sortedIndices\n      });\n    };\n\n    const swap = (i: number, j: number) => {\n      [arr[i], arr[j]] = [arr[j], arr[i]];\n    };\n\n    switch (algorithm) {\n      case 'bubble': {\n        const sorted: number[] = [];\n        for (let i = 0; i < arr.length - 1; i++) {\n          for (let j = 0; j < arr.length - i - 1; j++) {\n            addStep([j, j + 1], [], sorted);\n            if (arr[j].value > arr[j + 1].value) {\n              addStep([j, j + 1], [j, j + 1], sorted);\n              swap(j, j + 1);\n              addStep([], [], sorted);\n            }\n          }\n          sorted.push(arr.length - i - 1);\n          addStep([], [], sorted);\n        }\n        sorted.push(0);\n        addStep([], [], sorted);\n        break;\n      }\n\n      case 'insertion': {\n        const sorted: number[] = [0];\n        addStep([], [], sorted);\n        for (let i = 1; i < arr.length; i++) {\n          let j = i;\n          addStep([j, j - 1], [], sorted);\n          while (j > 0 && arr[j].value < arr[j - 1].value) {\n            addStep([j, j - 1], [j, j - 1], sorted);\n            swap(j, j - 1);\n            j--;\n            addStep([j, j + 1], [], sorted);\n          }\n          sorted.push(i);\n          addStep([], [], sorted);\n        }\n        break;\n      }\n\n      case 'quick': {\n        const sorted: number[] = [];\n        const quickSort = (low: number, high: number) => {\n          if (low < high) {\n            const pivotIndex = partition(low, high);\n            sorted.push(pivotIndex);\n            addStep([], [], sorted);\n            quickSort(low, pivotIndex - 1);\n            quickSort(pivotIndex + 1, high);\n          } else if (low === high) {\n            sorted.push(low);\n            addStep([], [], sorted);\n          }\n        };\n\n        const partition = (low: number, high: number): number => {\n          const pivot = arr[high].value;\n          let i = low - 1;\n\n          for (let j = low; j < high; j++) {\n            addStep([j, high], [], sorted);\n            if (arr[j].value < pivot) {\n              i++;\n              if (i !== j) {\n                addStep([i, j], [i, j], sorted);\n                swap(i, j);\n              }\n            }\n          }\n          addStep([i + 1, high], [i + 1, high], sorted);\n          swap(i + 1, high);\n          return i + 1;\n        };\n\n        quickSort(0, arr.length - 1);\n        break;\n      }\n\n      case 'merge': {\n        const sorted: number[] = [];\n        const mergeSort = (left: number, right: number) => {\n          if (left >= right) {\n            return;\n          }\n\n          const mid = Math.floor((left + right) / 2);\n          mergeSort(left, mid);\n          mergeSort(mid + 1, right);\n          merge(left, mid, right);\n        };\n\n        const merge = (left: number, mid: number, right: number) => {\n          const leftArr = arr.slice(left, mid + 1);\n          const rightArr = arr.slice(mid + 1, right + 1);\n\n          let i = 0, j = 0, k = left;\n\n          while (i < leftArr.length && j < rightArr.length) {\n            addStep([left + i, mid + 1 + j], [], sorted);\n            if (leftArr[i].value <= rightArr[j].value) {\n              arr[k] = leftArr[i];\n              i++;\n            } else {\n              arr[k] = rightArr[j];\n              j++;\n            }\n            k++;\n            addStep([], [k - 1], sorted);\n          }\n\n          while (i < leftArr.length) {\n            arr[k] = leftArr[i];\n            addStep([], [k], sorted);\n            i++;\n            k++;\n          }\n\n          while (j < rightArr.length) {\n            arr[k] = rightArr[j];\n            addStep([], [k], sorted);\n            j++;\n            k++;\n          }\n\n          for (let idx = left; idx <= right; idx++) {\n            if (!sorted.includes(idx)) {\n              sorted.push(idx);\n            }\n          }\n          addStep([], [], sorted);\n        };\n\n        mergeSort(0, arr.length - 1);\n        break;\n      }\n    }\n\n    setSteps(newSteps);\n    setCurrentStep(0);\n  }, [array]);\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-purple-900 to-gray-900 p-8\">\n      <div className=\"max-w-7xl mx-auto space-y-8\">\n        <motion.div\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n          className=\"text-center space-y-4\"\n        >\n          <motion.h1\n            className=\"text-6xl font-bold bg-gradient-to-r from-cyan-400 via-purple-400 to-pink-400 bg-clip-text text-transparent\"\n            animate={{\n              textShadow: [\n                '0 0 20px rgba(0, 255, 255, 0.5)',\n                '0 0 40px rgba(255, 0, 255, 0.5)',\n                '0 0 20px rgba(0, 255, 255, 0.5)'\n              ]\n            }}\n            transition={{ duration: 2, repeat: Infinity }}\n          >\n            Algorithm Visualizer\n          </motion.h1>\n          \n          <div className=\"flex items-center justify-center gap-4\">\n            <motion.div\n              initial={{ scale: 0 }}\n              animate={{ scale: 1 }}\n              transition={{ delay: 0.3, type: \"spring\" }}\n              className=\"flex items-center gap-2 px-6 py-3 bg-gray-800/50 backdrop-blur-sm rounded-full border border-cyan-500/30\"\n            >\n              <Zap className=\"w-5 h-5 text-cyan-400\" />\n              <span className=\"text-xl font-semibold text-cyan-300\">\n                {mockAlgorithms.find(a => a.id === selectedAlgorithm)?.name}\n              </span>\n            </motion.div>\n            \n            <motion.div\n              initial={{ scale: 0 }}\n              animate={{ scale: 1 }}\n              transition={{ delay: 0.5, type: \"spring\" }}\n              className=\"flex items-center gap-2 px-4 py-2 bg-purple-900/50 backdrop-blur-sm rounded-full border border-purple-500/50\"\n              style={{\n                boxShadow: '0 0 20px rgba(168, 85, 247, 0.4)'\n              }}\n            >\n              <BarChart3 className=\"w-4 h-4 text-purple-300\" />\n              <span className=\"text-sm font-mono text-purple-200\">\n                {mockAlgorithms.find(a => a.id === selectedAlgorithm)?.complexity}\n              </span>\n            </motion.div>\n          </div>\n        </motion.div></parameter>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\n          <div className=\"lg:col-span-1 space-y-6\">\n            <motion.div\n              initial={{ opacity: 0, x: -50 }}\n              animate={{ opacity: 1, x: 0 }}\n              className=\"bg-gray-800/50 backdrop-blur-lg rounded-2xl p-6 border border-cyan-500/30 shadow-[0_0_30px_rgba(0,255,255,0.3)]\"\n            >\n              <div className=\"space-y-6\">\n                {/* Algorithm Selection */}\n                <div className=\"space-y-3\">\n                  <div className=\"flex items-center gap-2 text-cyan-400\">\n                    <Zap className=\"w-5 h-5\" />\n                    <h3 className=\"font-semibold text-lg\">Algorithm</h3>\n                  </div>\n                  <div className=\"space-y-2\">\n                    {mockAlgorithms.map((algo) => (\n                      <button\n                        key={algo.id}\n                        onClick={() => {\n                          setSelectedAlgorithm(algo.id as AlgorithmType);\n                          generateSortingSteps(algo.id as AlgorithmType);\n                        }}\n                        disabled={isPlaying}\n                        className={`w-full p-3 rounded-lg text-left transition-all duration-300 ${\n                          selectedAlgorithm === algo.id\n                            ? 'bg-cyan-500/20 border-2 border-cyan-400 shadow-[0_0_20px_rgba(0,255,255,0.4)]'\n                            : 'bg-gray-700/50 border-2 border-gray-600/50 hover:border-cyan-500/50 hover:shadow-[0_0_15px_rgba(0,255,255,0.2)]'\n                        } disabled:opacity-50 disabled:cursor-not-allowed`}\n                      >\n                        <div className=\"font-medium text-white\">{algo.name}</div>\n                        <div className=\"text-xs text-gray-400 mt-1\">{algo.complexity}</div>\n                      </button>\n                    ))}\n                  </div>\n                </div>\n\n                {/* Array Size Control */}\n                <div className=\"space-y-3\">\n                  <div className=\"flex items-center gap-2 text-purple-400\">\n                    <BarChart3 className=\"w-5 h-5\" />\n                    <h3 className=\"font-semibold\">Array Size</h3>\n                  </div>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex justify-between text-sm text-gray-300\">\n                      <span>Size</span>\n                      <span className=\"text-cyan-400 font-mono\">{arraySize[0]}</span>\n                    </div>\n                    <Slider\n                      value={arraySize}\n                      onValueChange={setArraySize}\n                      min={5}\n                      max={50}\n                      step={1}\n                      disabled={isPlaying}\n                      className=\"cursor-pointer\"\n                    />\n                  </div>\n                </div>\n\n                {/* Speed Control */}\n                <div className=\"space-y-3\">\n                  <div className=\"flex items-center gap-2 text-pink-400\">\n                    <Zap className=\"w-5 h-5\" />\n                    <h3 className=\"font-semibold\">Speed</h3>\n                  </div>\n                  <div className=\"space-y-2\">\n                    <div className=\"flex justify-between text-sm text-gray-300\">\n                      <span>Animation Speed</span>\n                      <span className=\"text-cyan-400 font-mono\">{speed[0]}%</span>\n                    </div>\n                    <Slider\n                      value={speed}\n                      onValueChange={setSpeed}\n                      min={10}\n                      max={100}\n                      step={10}\n                      className=\"cursor-pointer\"\n                    />\n                  </div>\n                </div>\n\n                {/* Control Buttons */}\n                <div className=\"space-y-3 pt-4 border-t border-gray-700/50\">\n                  <Button\n                    onClick={isPlaying ? pauseVisualization : startVisualization}\n                    disabled={steps.length === 0 || (currentStep >= steps.length && !isPlaying)}\n                    className=\"w-full bg-gradient-to-r from-cyan-500 to-blue-500 hover:from-cyan-400 hover:to-blue-400 text-white font-semibold py-6 rounded-lg shadow-[0_0_25px_rgba(0,255,255,0.5)] hover:shadow-[0_0_35px_rgba(0,255,255,0.7)] transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    {isPlaying ? (\n                      <>\n                        <Pause className=\"w-5 h-5 mr-2\" />\n                        Pause\n                      </>\n                    ) : (\n                      <>\n                        <Play className=\"w-5 h-5 mr-2\" />\n                        {currentStep >= steps.length ? 'Finished' : 'Start'}\n                      </>\n                    )}\n                  </Button>\n\n                  <Button\n                    onClick={resetVisualization}\n                    disabled={isPlaying}\n                    className=\"w-full bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-400 hover:to-pink-400 text-white font-semibold py-6 rounded-lg shadow-[0_0_25px_rgba(255,0,255,0.5)] hover:shadow-[0_0_35px_rgba(255,0,255,0.7)] transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    <RotateCcw className=\"w-5 h-5 mr-2\" />\n                    Reset\n                  </Button>\n                </div>\n\n                {/* Stats Display */}\n                <div className=\"pt-4 border-t border-gray-700/50 space-y-2\">\n                  <div className=\"flex justify-between text-sm\">\n                    <span className=\"text-gray-400\">Current Step</span>\n                    <span className=\"text-cyan-400 font-mono\">{currentStep} / {steps.length}</span>\n                  </div>\n                  <div className=\"flex justify-between text-sm\">\n                    <span className=\"text-gray-400\">Array Elements</span>\n                    <span className=\"text-purple-400 font-mono\">{array.length}</span>\n                  </div>\n                </div>\n              </div>\n            </motion.div>\n            \n            <div className=\"bg-gray-800/50 backdrop-blur-lg rounded-2xl p-6 border border-cyan-500/30 shadow-lg shadow-cyan-500/20\">\n              <div className=\"space-y-6\">\n                <div>\n                  <h3 className=\"text-cyan-400 font-semibold mb-4 flex items-center gap-2\">\n                    <Zap className=\"w-5 h-5\" />\n                    Algorithm\n                  </h3>\n                  <div className=\"grid grid-cols-2 gap-3\">\n                    {mockAlgorithms.map((algo) => (\n                      <motion.button\n                        key={algo.id}\n                        onClick={() => setSelectedAlgorithm(algo.id as AlgorithmType)}\n                        className={`relative p-3 rounded-lg font-medium text-sm transition-all duration-300 ${\n                          selectedAlgorithm === algo.id\n                            ? 'bg-cyan-500/20 text-cyan-300 border-2 border-cyan-400 shadow-lg shadow-cyan-500/50'\n                            : 'bg-gray-700/50 text-gray-300 border border-gray-600 hover:border-cyan-500/50 hover:shadow-lg hover:shadow-cyan-500/30'\n                        }`}\n                        whileHover={{ scale: 1.05 }}\n                        whileTap={{ scale: 0.95 }}\n                      >\n                        <div className=\"flex flex-col items-center gap-1\">\n                          <span>{algo.name.split(' ')[0]}</span>\n                          <span className=\"text-xs opacity-70\">{algo.complexity}</span>\n                        </div>\n                        {selectedAlgorithm === algo.id && (\n                          <motion.div\n                            className=\"absolute inset-0 rounded-lg bg-cyan-400/10\"\n                            layoutId=\"algorithmGlow\"\n                            transition={{ type: \"spring\", bounce: 0.2, duration: 0.6 }}\n                          />\n                        )}\n                      </motion.button>\n                    ))}\n                  </div>\n                </div>\n\n                <div>\n                  <h3 className=\"text-cyan-400 font-semibold mb-4\">Speed</h3>\n                  <Slider\n                    value={speed}\n                    onValueChange={setSpeed}\n                    min={1}\n                    max={100}\n                    step={1}\n                    className=\"[&_[role=slider]]:bg-cyan-400 [&_[role=slider]]:border-cyan-300 [&_[role=slider]]:shadow-lg [&_[role=slider]]:shadow-cyan-400/50 [&_[role=slider]]:transition-shadow [&_[role=slider]]:hover:shadow-cyan-400/80 [&_.relative]:bg-gray-700 [&_.bg-primary]:bg-gradient-to-r [&_.bg-primary]:from-cyan-500 [&_.bg-primary]:to-purple-500\"\n                  />\n                  <div className=\"flex justify-between text-xs text-gray-400 mt-2\">\n                    <span>Slow</span>\n                    <span className=\"text-cyan-400 font-semibold\">{speed[0]}%</span>\n                    <span>Fast</span>\n                  </div></parameter>\n</invoke>\n                </div>\n\n                <div>\n                  <h3 className=\"text-cyan-400 font-semibold mb-4\">Array Size</h3>\n                  <div className=\"space-y-3\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm text-gray-400\">Size</span>\n                      <motion.span \n                        key={arraySize[0]}\n                        initial={{ scale: 1.3, color: '#00ffff' }}\n                        animate={{ scale: 1, color: '#9ca3af' }}\n                        className=\"text-sm font-mono font-bold\"\n                      >\n                        {arraySize[0]}\n                      </motion.span>\n                    </div>\n                    <Slider\n                      value={arraySize}\n                      onValueChange={setArraySize}\n                      min={5}\n                      max={50}\n                      step={1}\n                      className=\"[&_[role=slider]]:bg-cyan-400 [&_[role=slider]]:border-cyan-300 [&_[role=slider]]:shadow-lg [&_[role=slider]]:shadow-cyan-400/50 [&_.slider-track]:bg-cyan-500/30 [&_.slider-range]:bg-gradient-to-r [&_.slider-range]:from-cyan-500 [&_.slider-range]:to-purple-500\"\n                      disabled={isPlaying}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"space-y-3 pt-4 border-t border-cyan-500/20\">\n                  <motion.button\n                    onClick={isPlaying ? pauseVisualization : startVisualization}\n                    disabled={array.length === 0 || (currentStep >= steps.length && steps.length > 0)}\n                    className={`w-full py-4 rounded-xl font-bold text-lg transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed ${\n                      isPlaying\n                        ? 'bg-gradient-to-r from-orange-500 to-red-500 hover:from-orange-600 hover:to-red-600 shadow-[0_0_30px_rgba(249,115,22,0.6)]'\n                        : 'bg-gradient-to-r from-cyan-500 to-blue-500 hover:from-cyan-600 hover:to-blue-600 shadow-[0_0_30px_rgba(6,182,212,0.6)]'\n                    }`}\n                    whileHover={{ scale: 1.05 }}\n                    whileTap={{ scale: 0.95 }}\n                  >\n                    <motion.div\n                      className=\"flex items-center justify-center gap-3\"\n                      animate={isPlaying ? { scale: [1, 1.1, 1] } : {}}\n                      transition={{ duration: 1, repeat: isPlaying ? Infinity : 0 }}\n                    >\n                      {isPlaying ? (\n                        <>\n                          <Pause className=\"w-6 h-6\" />\n                          <span>Pause</span>\n                        </>\n                      ) : (\n                        <>\n                          <Play className=\"w-6 h-6\" />\n                          <span>Start</span>\n                        </>\n                      )}\n                    </motion.div>\n                  </motion.button>\n\n                  <motion.button\n                    onClick={resetVisualization}\n                    disabled={isPlaying}\n                    className=\"w-full py-4 rounded-xl font-bold text-lg bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 transition-all duration-300 shadow-[0_0_30px_rgba(168,85,247,0.6)] hover:shadow-[0_0_40px_rgba(168,85,247,0.8)] disabled:opacity-50 disabled:cursor-not-allowed\"\n                    whileHover={{ scale: 1.05 }}\n                    whileTap={{ scale: 0.95 }}\n                  >\n                    <motion.div\n                      className=\"flex items-center justify-center gap-3\"\n                      whileHover={{ rotate: 180 }}\n                      transition={{ duration: 0.5 }}\n                    >\n                      <RotateCcw className=\"w-6 h-6\" />\n                      <span>Reset</span>\n                    </motion.div>\n                  </motion.button>\n                </div>\n              </div>\n            </div>\n\n            \n<motion.div\n              initial={{ opacity: 0, x: -50 }}\n              animate={{ opacity: 1, x: 0 }}\n              transition={{ delay: 0.2 }}\n              className=\"bg-gray-800/50 backdrop-blur-lg rounded-2xl p-6 border border-purple-500/30 shadow-[0_0_30px_rgba(168,85,247,0.3)]\"\n            >\n              <div className=\"space-y-4\">\n                <div className=\"flex items-center gap-2 text-purple-400 mb-4\">\n                  <BarChart3 className=\"w-5 h-5\" />\n                  <h3 className=\"font-semibold text-lg\">Statistics</h3>\n                </div>\n\n                <div className=\"grid grid-cols-1 gap-4\">\n                  {/* Comparisons */}\n                  <motion.div\n                    className=\"bg-gradient-to-br from-cyan-900/30 to-cyan-800/20 rounded-xl p-4 border border-cyan-500/40 shadow-[0_0_15px_rgba(0,255,255,0.2)]\"\n                    whileHover={{ scale: 1.02, boxShadow: '0 0 25px rgba(0,255,255,0.4)' }}\n                    transition={{ duration: 0.2 }}\n                  >\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <div className=\"text-xs text-cyan-300/70 uppercase tracking-wider mb-1\">\n                          Comparisons\n                        </div>\n                        <motion.div\n                          key={comparisons}\n                          initial={{ scale: 1.3, color: '#00ffff' }}\n                          animate={{ scale: 1, color: '#ffffff' }}\n                          className=\"text-3xl font-bold text-white font-mono\"\n                        >\n                          {comparisons}\n                        </motion.div>\n                      </div>\n                      <motion.div\n                        animate={{\n                          boxShadow: [\n                            '0 0 10px rgba(0,255,255,0.5)',\n                            '0 0 20px rgba(0,255,255,0.8)',\n                            '0 0 10px rgba(0,255,255,0.5)'\n                          ]\n                        }}\n                        transition={{ duration: 2, repeat: Infinity }}\n                        className=\"w-12 h-12 rounded-full bg-cyan-500/20 flex items-center justify-center\"\n                      >\n                        <BarChart3 className=\"w-6 h-6 text-cyan-400\" />\n                      </motion.div>\n                    </div>\n                  </motion.div>\n\n                  {/* Swaps */}\n                  <motion.div\n                    className=\"bg-gradient-to-br from-pink-900/30 to-pink-800/20 rounded-xl p-4 border border-pink-500/40 shadow-[0_0_15px_rgba(255,0,102,0.2)]\"\n                    whileHover={{ scale: 1.02, boxShadow: '0 0 25px rgba(255,0,102,0.4)' }}\n                    transition={{ duration: 0.2 }}\n                  >\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <div className=\"text-xs text-pink-300/70 uppercase tracking-wider mb-1\">\n                          Swaps\n                        </div>\n                        <motion.div\n                          key={swaps}\n                          initial={{ scale: 1.3, color: '#ff0066' }}\n                          animate={{ scale: 1, color: '#ffffff' }}\n                          className=\"text-3xl font-bold text-white font-mono\"\n                        >\n                          {swaps}\n                        </motion.div>\n                      </div>\n                      <motion.div\n                        animate={{\n                          rotate: [0, 180, 360],\n                          boxShadow: [\n                            '0 0 10px rgba(255,0,102,0.5)',\n                            '0 0 20px rgba(255,0,102,0.8)',\n                            '0 0 10px rgba(255,0,102,0.5)'\n                          ]\n                        }}\n                        transition={{ duration: 3, repeat: Infinity }}\n                        className=\"w-12 h-12 rounded-full bg-pink-500/20 flex items-center justify-center\"\n                      >\n                        <RotateCcw className=\"w-6 h-6 text-pink-400\" />\n                      </motion.div>\n                    </div>\n                  </motion.div>\n\n                  {/* Progress */}\n                  <motion.div\n                    className=\"bg-gradient-to-br from-purple-900/30 to-purple-800/20 rounded-xl p-4 border border-purple-500/40 shadow-[0_0_15px_rgba(168,85,247,0.2)]\"\n                    whileHover={{ scale: 1.02, boxShadow: '0 0 25px rgba(168,85,247,0.4)' }}\n                    transition={{ duration: 0.2 }}\n                  >\n                    <div className=\"space-y-3\">\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"text-xs text-purple-300/70 uppercase tracking-wider\">\n                          Progress\n                        </div>\n                        <motion.div\n                          key={currentStep}\n                          initial={{ scale: 1.2 }}\n                          animate={{ scale: 1 }}\n                          className=\"text-lg font-bold text-white font-mono\"\n                        >\n                          {steps.length > 0 ? Math.round((currentStep / steps.length) * 100) : 0}%\n                        </motion.div>\n                      </div>\n                      \n                      <div className=\"relative h-3 bg-gray-700/50 rounded-full overflow-hidden\">\n                        <motion.div\n                          className=\"absolute inset-y-0 left-0 bg-gradient-to-r from-purple-500 via-pink-500 to-cyan-500 rounded-full\"\n                          initial={{ width: 0 }}\n                          animate={{\n                            width: steps.length > 0 ? `${(currentStep / steps.length) * 100}%` : '0%'\n                          }}\n                          transition={{ duration: 0.3 }}\n                          style={{\n                            boxShadow: '0 0 15px rgba(168,85,247,0.6)'\n                          }}\n                        />\n                        <motion.div\n                          className=\"absolute inset-0 bg-gradient-to-r from-transparent via-white/30 to-transparent\"\n                          animate={{\n                            x: ['-100%', '200%']\n                          }}\n                          transition={{\n                            duration: 2,\n                            repeat: Infinity,\n                            ease: 'linear'\n                          }}\n                        />\n                      </div>\n\n                      <div className=\"flex justify-between text-xs text-gray-400 font-mono\">\n                        <span>Step {currentStep}</span>\n                        <span>of {steps.length}</span>\n                      </div>\n                    </div>\n                  </motion.div>\n\n                  {/* Array Status */}\n                  <motion.div\n                    className=\"bg-gradient-to-br from-green-900/30 to-green-800/20 rounded-xl p-4 border border-green-500/40 shadow-[0_0_15px_rgba(0,255,170,0.2)]\"\n                    whileHover={{ scale: 1.02, boxShadow: '0 0 25px rgba(0,255,170,0.4)' }}\n                    transition={{ duration: 0.2 }}\n                  >\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <div className=\"text-xs text-green-300/70 uppercase tracking-wider mb-1\">\n                          Array Size\n                        </div>\n                        <div className=\"text-3xl font-bold text-white font-mono\">\n                          {array.length}\n                        </div>\n                      </div>\n                      <motion.div\n                        animate={{\n                          scale: [1, 1.1, 1],\n                          boxShadow: [\n                            '0 0 10px rgba(0,255,170,0.5)',\n                            '0 0 20px rgba(0,255,170,0.8)',\n                            '0 0 10px rgba(0,255,170,0.5)'\n                          ]\n                        }}\n                        transition={{ duration: 2, repeat: Infinity }}\n                        className=\"w-12 h-12 rounded-full bg-green-500/20 flex items-center justify-center\"\n                      >\n                        <BarChart3 className=\"w-6 h-6 text-green-400\" />\n                      </motion.div>\n                    </div>\n                  </motion.div>\n                </div>\n\n                {/* Status Indicator */}\n                <motion.div\n                  className=\"mt-4 p-3 rounded-lg bg-gray-700/30 border border-gray-600/50\"\n                  animate={{\n                    borderColor: isPlaying \n                      ? ['rgba(0,255,255,0.5)', 'rgba(255,0,255,0.5)', 'rgba(0,255,255,0.5)']\n                      : 'rgba(156,163,175,0.5)'\n                  }}\n                  transition={{ duration: 2, repeat: Infinity }}\n                >\n                  <div className=\"flex items-center justify-center gap-2\">\n                    <motion.div\n                      className={`w-2 h-2 rounded-full ${\n                        isPlaying ? 'bg-cyan-400' : 'bg-gray-500'\n                      }`}\n                      animate={{\n                        scale: isPlaying ? [1, 1.5, 1] : 1,\n                        boxShadow: isPlaying \n                          ? ['0 0 5px rgba(0,255,255,0.8)', '0 0 15px rgba(0,255,255,1)', '0 0 5px rgba(0,255,255,0.8)']\n                          : 'none'\n                      }}\n                      transition={{ duration: 1, repeat: Infinity }}\n                    />\n                    <span className={`text-sm font-medium ${\n                      isPlaying ? 'text-cyan-300' : 'text-gray-400'\n                    }`}>\n                      {isPlaying ? 'Sorting...' : currentStep === steps.length && steps.length > 0 ? 'Complete' : 'Ready'}\n                    </span>\n                  </div>\n                </motion.div>\n              </div>\n            </motion.div>\n          </div>\n\n          <div className=\"lg:col-span-3\">\n            <div className=\"bg-gray-800/50 backdrop-blur-lg rounded-2xl p-8 border border-purple-500/30 shadow-lg shadow-purple-500/20 min-h-[600px]\">\n              {array.length === 0 ? (\n                <motion.div\n                  initial={{ opacity: 0, scale: 0.8 }}\n                  animate={{ opacity: 1, scale: 1 }}\n                  className=\"flex flex-col items-center justify-center h-full space-y-6\"\n                >\n                  <motion.div\n                    animate={{\n                      rotate: [0, 360],\n                      scale: [1, 1.2, 1]\n                    }}\n                    transition={{\n                      duration: 3,\n                      repeat: Infinity,\n                      ease: \"easeInOut\"\n                    }}\n                  >\n                    <BarChart3 className=\"w-24 h-24 text-cyan-400/50\" />\n                  </motion.div>\n                  <div className=\"text-center space-y-2\">\n                    <h3 className=\"text-2xl font-semibold text-gray-400\">\n                      No Array Generated\n                    </h3>\n                    <p className=\"text-gray-500\">\n                      Click \"Generate Array\" to start visualizing\n                    </p>\n                  </div>\n                  <motion.div\n                    animate={{\n                      boxShadow: [\n                        '0 0 20px rgba(0, 255, 255, 0.3)',\n                        '0 0 40px rgba(0, 255, 255, 0.6)',\n                        '0 0 20px rgba(0, 255, 255, 0.3)'\n                      ]\n                    }}\n                    transition={{ duration: 2, repeat: Infinity }}\n                  >\n                    <Button\n                      onClick={generateRandomArray}\n                      className=\"bg-gradient-to-r from-cyan-500 to-purple-500 hover:from-cyan-600 hover:to-purple-600 text-white font-semibold px-8 py-6 text-lg rounded-xl shadow-lg\"\n                    >\n                      <Zap className=\"w-5 h-5 mr-2\" />\n                      Generate Array\n                    </Button>\n                  </motion.div>\n                </motion.div>\n              ) : (\n                <div className=\"h-full flex items-end justify-center gap-1 px-4\">\n                  {array.map((element, index) => {\n                    const maxValue = Math.max(...array.map(e => e.value));\n                    const heightPercentage = (element.value / maxValue) * 100;\n                    const colorIndex = index % NEON_COLORS.length;\n                    const baseColor = NEON_COLORS[colorIndex];\n\n                    let glowColor = baseColor;\n                    let glowIntensity = 0.3;\n\n                    if (element.isComparing) {\n                      glowColor = '#ffff00';\n                      glowIntensity = 0.8;\n                    } else if (element.isSwapping) {\n                      glowColor = '#ff00ff';\n                      glowIntensity = 1;\n                    } else if (element.isSorted) {\n                      glowColor = '#00ff00';\n                      glowIntensity = 0.6;\n                    }\n\n                    return (\n                      <motion.div\n                        key={element.id}\n                        layout\n                        initial={{ height: 0, opacity: 0 }}\n                        animate={{\n                          height: `${heightPercentage}%`,\n                          opacity: 1,\n                          scale: element.isSwapping ? [1, 1.1, 1] : 1,\n                          y: element.isSwapping ? [0, -10, 0] : 0\n                        }}\n                        transition={{\n                          height: { duration: 0.5, ease: \"easeOut\" },\n                          opacity: { duration: 0.3 },\n                          scale: { duration: 0.3, repeat: element.isSwapping ? Infinity : 0 },\n                          y: { duration: 0.3, repeat: element.isSwapping ? Infinity : 0 },\n                          layout: { duration: 0.5, ease: \"easeInOut\" }\n                        }}\n                        className=\"relative flex-1 min-w-[8px] max-w-[60px] rounded-t-lg\"\n                        style={{\n                          background: element.isSorted\n                            ? 'linear-gradient(to top, #00ff00, #00ffaa)'\n                            : element.isComparing\n                            ? 'linear-gradient(to top, #ffff00, #ffaa00)'\n                            : element.isSwapping\n                            ? 'linear-gradient(to top, #ff00ff, #ff0066)'\n                            : `linear-gradient(to top, ${baseColor}, ${baseColor}dd)`,\n                          boxShadow: `\n                            0 0 ${20 * glowIntensity}px ${glowColor}${Math.floor(glowIntensity * 100).toString(16)},\n                            0 0 ${40 * glowIntensity}px ${glowColor}${Math.floor(glowIntensity * 50).toString(16)},\n                            inset 0 0 ${10 * glowIntensity}px rgba(255, 255, 255, ${0.2 * glowIntensity})\n                          `,\n                          border: `1px solid ${glowColor}${Math.floor(glowIntensity * 150).toString(16)}`\n                        }}\n                      >\n                        {/* Trail effect for swapping */}\n                        {element.isSwapping && (\n                          <motion.div\n                            className=\"absolute inset-0 rounded-t-lg\"\n                            style={{\n                              background: `linear-gradient(to top, ${glowColor}40, transparent)`\n                            }}\n                            animate={{\n                              opacity: [0.8, 0, 0.8],\n                              scale: [1, 1.5, 1]\n                            }}\n                            transition={{\n                              duration: 0.6,\n                              repeat: Infinity,\n                              ease: \"easeInOut\"\n                            }}\n                          />\n                        )}\n\n                        {/* Value label */}\n                        <motion.div\n                          className=\"absolute -top-8 left-1/2 transform -translate-x-1/2 text-xs font-mono font-bold whitespace-nowrap\"\n                          initial={{ opacity: 0, y: 10 }}\n                          animate={{ opacity: 1, y: 0 }}\n                          style={{\n                            color: element.isSorted\n                              ? '#00ff00'\n                              : element.isComparing\n                              ? '#ffff00'\n                              : element.isSwapping\n                              ? '#ff00ff'\n                              : baseColor,\n                            textShadow: `0 0 10px ${glowColor}, 0 0 20px ${glowColor}40`\n                          }}\n                        >\n                          {element.value}\n                        </motion.div>\n\n                        {/* Pulse effect for comparing */}\n                        {element.isComparing && (\n                          <motion.div\n                            className=\"absolute inset-0 rounded-t-lg border-2\"\n                            style={{\n                              borderColor: glowColor\n                            }}\n                            animate={{\n                              opacity: [1, 0.3, 1],\n                              scale: [1, 1.05, 1]\n                            }}\n                            transition={{\n                              duration: 0.5,\n                              repeat: Infinity,\n                              ease: \"easeInOut\"\n                            }}\n                          />\n                        )}\n                      </motion.div>\n                    );\n                  })}\n                </div>\n              )}</parameter>\n              \n              <div className=\"h-full flex items-end justify-center gap-1\">\n                {array.length === 0 ? (\n                  <div className=\"flex flex-col items-center justify-center h-full space-y-4\">\n                    <motion.div\n                      animate={{\n                        scale: [1, 1.2, 1],\n                        rotate: [0, 360],\n                      }}\n                      transition={{\n                        duration: 3,\n                        repeat: Infinity,\n                        ease: \"easeInOut\"\n                      }}\n                    >\n                      <BarChart3 className=\"w-20 h-20 text-cyan-400/50\" />\n                    </motion.div>\n                    <p className=\"text-gray-400 text-lg\">Generate an array to start visualizing</p>\n                    <Button\n                      onClick={generateRandomArray}\n                      className=\"bg-gradient-to-r from-cyan-500 to-purple-500 hover:from-cyan-400 hover:to-purple-400 text-white font-semibold px-6 py-3 rounded-lg shadow-[0_0_20px_rgba(0,255,255,0.5)] hover:shadow-[0_0_30px_rgba(0,255,255,0.7)] transition-all duration-300\"\n                    >\n                      <Zap className=\"w-5 h-5 mr-2\" />\n                      Generate Array\n                    </Button>\n                  </div>\n                ) : (\n                  array.map((element, index) => {\n                    const isComparing = element.isComparing;\n                    const isSwapping = element.isSwapping;\n                    const isSorted = element.isSorted;\n                    \n                    let barColor = NEON_COLORS[index % NEON_COLORS.length];\n                    let glowColor = barColor;\n                    let glowIntensity = 0.3;\n                    \n                    if (isSorted) {\n                      barColor = '#00ff00';\n                      glowColor = '#00ff00';\n                      glowIntensity = 0.6;\n                    } else if (isSwapping) {\n                      barColor = '#ff0066';\n                      glowColor = '#ff0066';\n                      glowIntensity = 0.8;\n                    } else if (isComparing) {\n                      barColor = '#ffff00';\n                      glowColor = '#ffff00';\n                      glowIntensity = 0.7;\n                    }\n\n                    return (\n                      <motion.div\n                        key={element.id}\n                        layout\n                        initial={{ opacity: 0, scale: 0, y: 50 }}\n                        animate={{\n                          opacity: 1,\n                          scale: 1,\n                          y: 0,\n                          height: `${element.value * 4}px`,\n                        }}\n                        exit={{ opacity: 0, scale: 0 }}\n                        transition={{\n                          layout: { duration: 0.3, ease: \"easeInOut\" },\n                          height: { duration: 0.3, ease: \"easeOut\" },\n                          scale: { duration: 0.2 },\n                          opacity: { duration: 0.2 }\n                        }}\n                        className=\"relative flex-1 min-w-[8px] max-w-[60px] rounded-t-lg\"\n                        style={{\n                          backgroundColor: barColor,\n                          boxShadow: `\n                            0 0 ${glowIntensity * 20}px ${glowColor},\n                            0 0 ${glowIntensity * 40}px ${glowColor}80,\n                            inset 0 0 ${glowIntensity * 10}px ${glowColor}40\n                          `,\n                          border: `1px solid ${glowColor}`,\n                        }}\n                      >\n                        {/* Trail effect for swapping */}\n                        {isSwapping && (\n                          <>\n                            <motion.div\n                              className=\"absolute inset-0 rounded-t-lg\"\n                              style={{\n                                backgroundColor: barColor,\n                                opacity: 0.6,\n                              }}\n                              animate={{\n                                scale: [1, 1.2, 1],\n                                opacity: [0.6, 0.3, 0.6],\n                              }}\n                              transition={{\n                                duration: 0.5,\n                                repeat: Infinity,\n                                ease: \"easeInOut\"\n                              }}\n                            />\n                            <motion.div\n                              className=\"absolute -top-2 left-1/2 -translate-x-1/2\"\n                              animate={{\n                                y: [-10, -20, -10],\n                                opacity: [1, 0.5, 1],\n                              }}\n                              transition={{\n                                duration: 0.6,\n                                repeat: Infinity,\n                              }}\n                            >\n                              <div \n                                className=\"w-2 h-2 rounded-full\"\n                                style={{\n                                  backgroundColor: barColor,\n                                  boxShadow: `0 0 10px ${barColor}, 0 0 20px ${barColor}`\n                                }}\n                              />\n                            </motion.div>\n                          </>\n                        )}\n\n                        {/* Pulse effect for comparing */}\n                        {isComparing && (\n                          <motion.div\n                            className=\"absolute inset-0 rounded-t-lg border-2\"\n                            style={{\n                              borderColor: barColor,\n                            }}\n                            animate={{\n                              scale: [1, 1.15, 1],\n                              opacity: [0.8, 0.4, 0.8],\n                            }}\n                            transition={{\n                              duration: 0.8,\n                              repeat: Infinity,\n                              ease: \"easeInOut\"\n                            }}\n                          />\n                        )}\n\n                        {/* Sparkle effect for sorted */}\n                        {isSorted && (\n                          <motion.div\n                            className=\"absolute -top-1 left-1/2 -translate-x-1/2\"\n                            initial={{ scale: 0, rotate: 0 }}\n                            animate={{\n                              scale: [0, 1.5, 0],\n                              rotate: [0, 180, 360],\n                              opacity: [0, 1, 0],\n                            }}\n                            transition={{\n                              duration: 1,\n                              ease: \"easeOut\"\n                            }}\n                          >\n                            <div \n                              className=\"w-3 h-3\"\n                              style={{\n                                background: `radial-gradient(circle, ${barColor} 0%, transparent 70%)`,\n                              }}\n                            />\n                          </motion.div>\n                        )}\n\n                        {/* Value label */}\n                        <motion.div\n                          className=\"absolute -bottom-6 left-1/2 -translate-x-1/2 text-xs font-mono font-semibold whitespace-nowrap\"\n                          style={{\n                            color: barColor,\n                            textShadow: `0 0 5px ${glowColor}`,\n                          }}\n                          animate={{\n                            scale: isComparing || isSwapping ? [1, 1.2, 1] : 1,\n                          }}\n                          transition={{\n                            duration: 0.3,\n                            repeat: isComparing || isSwapping ? Infinity : 0,\n                          }}\n                        >\n                          {element.value}\n                        </motion.div>\n\n                        {/* Gradient overlay for depth */}\n                        <div\n                          className=\"absolute inset-0 rounded-t-lg pointer-events-none\"\n                          style={{\n                            background: `linear-gradient(to top, ${barColor}00 0%, ${barColor}40 100%)`,\n                          }}\n                        />\n                      </motion.div>\n                    );\n                  })\n                )}\n              </div>\n            </div>\n\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.4, duration: 0.6 }}\n              className=\"mt-6 bg-gray-800/50 backdrop-blur-lg rounded-2xl p-6 border border-purple-500/30 shadow-lg shadow-purple-500/20\"\n            >\n              <h3 className=\"text-purple-400 font-semibold mb-4 flex items-center gap-2\">\n                <BarChart3 className=\"w-5 h-5\" />\n                Legend\n              </h3>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                <motion.div\n                  initial={{ opacity: 0, scale: 0.8 }}\n                  animate={{ opacity: 1, scale: 1 }}\n                  transition={{ delay: 0.5 }}\n                  className=\"flex items-center gap-3 p-3 bg-gray-700/30 rounded-lg border border-gray-600/50\"\n                >\n                  <motion.div\n                    className=\"w-4 h-12 rounded bg-gradient-to-t from-cyan-400 to-cyan-300\"\n                    animate={{\n                      boxShadow: [\n                        '0 0 10px rgba(0, 255, 255, 0.5)',\n                        '0 0 20px rgba(0, 255, 255, 0.8)',\n                        '0 0 10px rgba(0, 255, 255, 0.5)'\n                      ]\n                    }}\n                    transition={{ duration: 1.5, repeat: Infinity }}\n                  />\n                  <div>\n                    <div className=\"text-sm font-medium text-white\">Default</div>\n                    <div className=\"text-xs text-gray-400\">Unsorted</div>\n                  </div>\n                </motion.div>\n\n                <motion.div\n                  initial={{ opacity: 0, scale: 0.8 }}\n                  animate={{ opacity: 1, scale: 1 }}\n                  transition={{ delay: 0.6 }}\n                  className=\"flex items-center gap-3 p-3 bg-gray-700/30 rounded-lg border border-yellow-500/30\"\n                >\n                  <motion.div\n                    className=\"w-4 h-12 rounded bg-gradient-to-t from-yellow-400 to-yellow-300\"\n                    animate={{\n                      boxShadow: [\n                        '0 0 15px rgba(255, 255, 0, 0.6)',\n                        '0 0 25px rgba(255, 255, 0, 0.9)',\n                        '0 0 15px rgba(255, 255, 0, 0.6)'\n                      ],\n                      scale: [1, 1.1, 1]\n                    }}\n                    transition={{ duration: 1, repeat: Infinity }}\n                  />\n                  <div>\n                    <div className=\"text-sm font-medium text-white\">Comparing</div>\n                    <div className=\"text-xs text-gray-400\">Active</div>\n                  </div>\n                </motion.div>\n\n                <motion.div\n                  initial={{ opacity: 0, scale: 0.8 }}\n                  animate={{ opacity: 1, scale: 1 }}\n                  transition={{ delay: 0.7 }}\n                  className=\"flex items-center gap-3 p-3 bg-gray-700/30 rounded-lg border border-pink-500/30\"\n                >\n                  <motion.div\n                    className=\"w-4 h-12 rounded bg-gradient-to-t from-pink-500 to-pink-400\"\n                    animate={{\n                      boxShadow: [\n                        '0 0 15px rgba(255, 0, 102, 0.6)',\n                        '0 0 25px rgba(255, 0, 102, 0.9)',\n                        '0 0 15px rgba(255, 0, 102, 0.6)'\n                      ],\n                      x: [-2, 2, -2]\n                    }}\n                    transition={{ duration: 0.8, repeat: Infinity }}\n                  />\n                  <div>\n                    <div className=\"text-sm font-medium text-white\">Swapping</div>\n                    <div className=\"text-xs text-gray-400\">Moving</div>\n                  </div>\n                </motion.div>\n\n                <motion.div\n                  initial={{ opacity: 0, scale: 0.8 }}\n                  animate={{ opacity: 1, scale: 1 }}\n                  transition={{ delay: 0.8 }}\n                  className=\"flex items-center gap-3 p-3 bg-gray-700/30 rounded-lg border border-green-500/30\"\n                >\n                  <motion.div\n                    className=\"w-4 h-12 rounded bg-gradient-to-t from-green-400 to-green-300\"\n                    animate={{\n                      boxShadow: [\n                        '0 0 10px rgba(0, 255, 0, 0.5)',\n                        '0 0 20px rgba(0, 255, 0, 0.8)',\n                        '0 0 10px rgba(0, 255, 0, 0.5)'\n                      ]\n                    }}\n                    transition={{ duration: 2, repeat: Infinity }}\n                  />\n                  <div>\n                    <div className=\"text-sm font-medium text-white\">Sorted</div>\n                    <div className=\"text-xs text-gray-400\">Complete</div>\n                  </div>\n                </motion.div>\n              </div>\n            </motion.div>\n          </div>\n        </div>\n\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.4, duration: 0.6 }}\n          className=\"bg-gray-800/50 backdrop-blur-lg rounded-2xl p-6 border border-purple-500/30 shadow-lg shadow-purple-500/20\"\n        >\n          <div className=\"space-y-4\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center gap-2\">\n                <motion.div\n                  animate={{\n                    rotate: [0, 360],\n                  }}\n                  transition={{ duration: 3, repeat: Infinity, ease: \"linear\" }}\n                >\n                  <BarChart3 className=\"w-5 h-5 text-purple-400\" />\n                </motion.div>\n                <h3 className=\"text-lg font-semibold text-purple-300\">Timeline Control</h3>\n              </div>\n              <div className=\"flex items-center gap-2 px-4 py-2 bg-purple-900/50 rounded-full border border-purple-500/50\">\n                <span className=\"text-sm text-gray-400\">Step</span>\n                <motion.span\n                  key={currentStep}\n                  initial={{ scale: 1.3, color: '#a855f7' }}\n                  animate={{ scale: 1, color: '#d8b4fe' }}\n                  className=\"text-sm font-mono font-bold\"\n                >\n                  {currentStep}\n                </motion.span>\n                <span className=\"text-sm text-gray-400\">/</span>\n                <span className=\"text-sm font-mono text-purple-300\">{steps.length}</span>\n              </div>\n            </div>\n\n            {/* Progress Bar */}\n            <div className=\"relative h-3 bg-gray-700/50 rounded-full overflow-hidden border border-gray-600/50\">\n              <motion.div\n                className=\"absolute inset-y-0 left-0 bg-gradient-to-r from-cyan-500 via-purple-500 to-pink-500 rounded-full\"\n                initial={{ width: 0 }}\n                animate={{\n                  width: steps.length > 0 ? `${(currentStep / steps.length) * 100}%` : '0%',\n                }}\n                transition={{ duration: 0.3, ease: \"easeOut\" }}\n                style={{\n                  boxShadow: '0 0 20px rgba(168, 85, 247, 0.6)',\n                }}\n              />\n              <motion.div\n                className=\"absolute inset-y-0 left-0 bg-gradient-to-r from-cyan-400/50 to-purple-400/50 rounded-full blur-sm\"\n                animate={{\n                  width: steps.length > 0 ? `${(currentStep / steps.length) * 100}%` : '0%',\n                }}\n                transition={{ duration: 0.3, ease: \"easeOut\" }}\n              />\n            </div>\n\n            {/* Timeline Scrubber */}\n            <div className=\"relative pt-2\">\n              <input\n                type=\"range\"\n                min={0}\n                max={steps.length}\n                value={currentStep}\n                onChange={(e) => {\n                  const newStep = parseInt(e.target.value);\n                  setCurrentStep(newStep);\n                  if (newStep < steps.length) {\n                    setArray(steps[newStep].array);\n                  }\n                }}\n                disabled={isPlaying || steps.length === 0}\n                className=\"w-full h-2 bg-transparent appearance-none cursor-pointer disabled:cursor-not-allowed disabled:opacity-50\n                  [&::-webkit-slider-track]:h-2 [&::-webkit-slider-track]:bg-gray-700/50 [&::-webkit-slider-track]:rounded-full [&::-webkit-slider-track]:border [&::-webkit-slider-track]:border-gray-600/50\n                  [&::-webkit-slider-thumb]:appearance-none [&::-webkit-slider-thumb]:w-6 [&::-webkit-slider-thumb]:h-6 [&::-webkit-slider-thumb]:rounded-full [&::-webkit-slider-thumb]:bg-gradient-to-br [&::-webkit-slider-thumb]:from-cyan-400 [&::-webkit-slider-thumb]:to-purple-500 [&::-webkit-slider-thumb]:border-2 [&::-webkit-slider-thumb]:border-white [&::-webkit-slider-thumb]:shadow-[0_0_20px_rgba(168,85,247,0.8)] [&::-webkit-slider-thumb]:transition-all [&::-webkit-slider-thumb]:hover:shadow-[0_0_30px_rgba(168,85,247,1)] [&::-webkit-slider-thumb]:hover:scale-110\n                  [&::-moz-range-track]:h-2 [&::-moz-range-track]:bg-gray-700/50 [&::-moz-range-track]:rounded-full [&::-moz-range-track]:border [&::-moz-range-track]:border-gray-600/50\n                  [&::-moz-range-thumb]:w-6 [&::-moz-range-thumb]:h-6 [&::-moz-range-thumb]:rounded-full [&::-moz-range-thumb]:bg-gradient-to-br [&::-moz-range-thumb]:from-cyan-400 [&::-moz-range-thumb]:to-purple-500 [&::-moz-range-thumb]:border-2 [&::-moz-range-thumb]:border-white [&::-moz-range-thumb]:shadow-[0_0_20px_rgba(168,85,247,0.8)] [&::-moz-range-thumb]:transition-all [&::-moz-range-thumb]:hover:shadow-[0_0_30px_rgba(168,85,247,1)] [&::-moz-range-thumb]:hover:scale-110\"\n              />\n              \n              {/* Step Markers */}\n              {steps.length > 0 && steps.length <= 50 && (\n                <div className=\"absolute top-0 left-0 right-0 flex justify-between pointer-events-none\">\n                  {steps.map((_, index) => (\n                    <motion.div\n                      key={index}\n                      initial={{ scale: 0 }}\n                      animate={{ scale: index <= currentStep ? 1 : 0.5 }}\n                      className={`w-1 h-1 rounded-full transition-all duration-200 ${\n                        index < currentStep\n                          ? 'bg-cyan-400 shadow-[0_0_8px_rgba(0,255,255,0.8)]'\n                          : index === currentStep\n                          ? 'bg-purple-400 shadow-[0_0_12px_rgba(168,85,247,1)]'\n                          : 'bg-gray-600'\n                      }`}\n                    />\n                  ))}\n                </div>\n              )}\n            </div>\n\n            {/* Quick Navigation Buttons */}\n            <div className=\"flex items-center justify-between gap-2 pt-2\">\n              <Button\n                onClick={() => {\n                  setCurrentStep(0);\n                  if (steps.length > 0) {\n                    setArray(steps[0].array);\n                  }\n                }}\n                disabled={isPlaying || currentStep === 0 || steps.length === 0}\n                size=\"sm\"\n                className=\"flex-1 bg-gray-700/50 hover:bg-gray-600/50 text-cyan-400 border border-cyan-500/30 hover:border-cyan-500/50 shadow-[0_0_15px_rgba(0,255,255,0.3)] hover:shadow-[0_0_20px_rgba(0,255,255,0.5)] transition-all disabled:opacity-30 disabled:cursor-not-allowed\"\n              >\n                <span className=\"text-xs font-semibold\">First</span>\n              </Button>\n              \n              <Button\n                onClick={() => {\n                  const newStep = Math.max(0, currentStep - 1);\n                  setCurrentStep(newStep);\n                  if (newStep < steps.length) {\n                    setArray(steps[newStep].array);\n                  }\n                }}\n                disabled={isPlaying || currentStep === 0 || steps.length === 0}\n                size=\"sm\"\n                className=\"flex-1 bg-gray-700/50 hover:bg-gray-600/50 text-purple-400 border border-purple-500/30 hover:border-purple-500/50 shadow-[0_0_15px_rgba(168,85,247,0.3)] hover:shadow-[0_0_20px_rgba(168,85,247,0.5)] transition-all disabled:opacity-30 disabled:cursor-not-allowed\"\n              >\n                <span className=\"text-xs font-semibold\">\u2190 Prev</span>\n              </Button>\n              \n              <Button\n                onClick={() => {\n                  const newStep = Math.min(steps.length, currentStep + 1);\n                  setCurrentStep(newStep);\n                  if (newStep < steps.length) {\n                    setArray(steps[newStep].array);\n                  }\n                }}\n                disabled={isPlaying || currentStep >= steps.length || steps.length === 0}\n                size=\"sm\"\n                className=\"flex-1 bg-gray-700/50 hover:bg-gray-600/50 text-purple-400 border border-purple-500/30 hover:border-purple-500/50 shadow-[0_0_15px_rgba(168,85,247,0.3)] hover:shadow-[0_0_20px_rgba(168,85,247,0.5)] transition-all disabled:opacity-30 disabled:cursor-not-allowed\"\n              >\n                <span className=\"text-xs font-semibold\">Next \u2192</span>\n              </Button>\n              \n              <Button\n                onClick={() => {\n                  setCurrentStep(steps.length);\n                  if (steps.length > 0) {\n                    setArray(steps[steps.length - 1].array);\n                  }\n                }}\n                disabled={isPlaying || currentStep >= steps.length || steps.length === 0}\n                size=\"sm\"\n                className=\"flex-1 bg-gray-700/50 hover:bg-gray-600/50 text-cyan-400 border border-cyan-500/30 hover:border-cyan-500/50 shadow-[0_0_15px_rgba(0,255,255,0.3)] hover:shadow-[0_0_20px_rgba(0,255,255,0.5)] transition-all disabled:opacity-30 disabled:cursor-not-allowed\"\n              >\n                <span className=\"text-xs font-semibold\">Last</span>\n              </Button>\n            </div>\n\n            {/* Status Indicator */}\n            {steps.length > 0 && (\n              <motion.div\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                className=\"flex items-center justify-center gap-2 pt-2\"\n              >\n                {currentStep >= steps.length ? (\n                  <div className=\"flex items-center gap-2 px-4 py-2 bg-green-900/30 rounded-full border border-green-500/50\">\n                    <motion.div\n                      animate={{\n                        scale: [1, 1.2, 1],\n                        opacity: [1, 0.7, 1],\n                      }}\n                      transition={{ duration: 1.5, repeat: Infinity }}\n                      className=\"w-2 h-2 bg-green-400 rounded-full shadow-[0_0_10px_rgba(74,222,128,0.8)]\"\n                    />\n                    <span className=\"text-sm font-semibold text-green-300\">Sorting Complete</span>\n                  </div>\n                ) : isPlaying ? (\n                  <div className=\"flex items-center gap-2 px-4 py-2 bg-cyan-900/30 rounded-full border border-cyan-500/50\">\n                    <motion.div\n                      animate={{\n                        scale: [1, 1.3, 1],\n                        opacity: [1, 0.5, 1],\n                      }}\n                      transition={{ duration: 0.8, repeat: Infinity }}\n                      className=\"w-2 h-2 bg-cyan-400 rounded-full shadow-[0_0_10px_rgba(0,255,255,0.8)]\"\n                    />\n                    <span className=\"text-sm font-semibold text-cyan-300\">Playing...</span>\n                  </div>\n                ) : (\n                  <div className=\"flex items-center gap-2 px-4 py-2 bg-purple-900/30 rounded-full border border-purple-500/50\">\n                    <div className=\"w-2 h-2 bg-purple-400 rounded-full shadow-[0_0_10px_rgba(168,85,247,0.8)]\" />\n                    <span className=\"text-sm font-semibold text-purple-300\">Paused</span>\n                  </div>\n                )}\n              </motion.div>\n            )}\n          </div>\n        </motion.div>\n      </div>\n    </div>\n  );\n}",
      "error": null,
      "overall_score": 50,
      "code_quality_score": 14,
      "architecture_score": 11,
      "performance_score": 16,
      "accessibility_score": 9,
      "metadata": {
        "document_id": "eval_room_e93349b88b94",
        "prompt_category": "creative",
        "prompt_complexity": 9.0
      }
    },
    {
      "prompt_id": "dashboard",
      "prompt_name": "Analytics Dashboard",
      "mode": "parallel",
      "run_number": 49,
      "timestamp": "2025-10-14T09:53:14.605229",
      "response_time": 334.6965956687927,
      "total_tokens": null,
      "response_content": ": ''}>\n                Breakdown by category\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"h-[300px] w-full\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <PieChart>\n                    <Pie\n                      data={mockPieData}\n                      cx=\"50%\"\n                      cy=\"50%\"\n                      labelLine={false}\n                      label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n                      outerRadius={80}\n                      fill=\"#8884d8\"\n                      dataKey=\"value\"\n                    >\n                      {mockPieData.map((entry, index) => (\n                        <Cell key={`cell-${index}`} fill={entry.color} />\n                      ))}\n                    </Pie>\n                    <Tooltip \n                      contentStyle={{\n                        backgroundColor: isDarkMode ? '#1f2937' : '#ffffff',\n                        border: isDarkMode ? '1px solid #374151' : '1px solid #e5e7eb',\n                        borderRadius: '6px',\n                        color: isDarkMode ? '#ffffff' : '#000000'\n                      }}\n                    />\n                    <Legend \n                      verticalAlign=\"bottom\" \n                      height={36}\n                      iconType=\"circle\"\n                      formatter={(value) => (\n                        <span className={isDarkMode ? 'text-gray-300' : 'text-gray-700'}>\n                          {value}\n                        </span>\n                      )}\n                    />\n                  </PieChart>\n                </ResponsiveContainer>\n              </div>nd and percentages */}\n            </CardContent>\n          </Card>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4 md:gap-6 mb-8\">\n          <Card className={isDarkMode ? 'bg-gray-800 border-gray-700' : ''}>\n            <CardHeader>\n              <CardTitle className={isDarkMode ? 'text-white' : ''}>Performance Metrics</CardTitle>\n              <CardDescription className={isDarkMode ? 'text-gray-400' : ''}>\n                Key performance indicators\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {[\n                  { label: 'Customer Satisfaction', value: 92, max: 100, color: 'bg-green-500' },\n                  { label: 'Response Time', value: 78, max: 100, color: 'bg-blue-500' },\n                  { label: 'Task Completion', value: 85, max: 100, color: 'bg-purple-500' },\n                  { label: 'System Uptime', value: 99, max: 100, color: 'bg-emerald-500' }\n                ].map((metric, index) => (\n                  <div key={index} className=\"space-y-2\">\n                    <div className=\"flex justify-between items-center\">\n                      <span className={`text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-700'}`}>\n                        {metric.label}\n                      </span>\n                      <span className={`text-sm font-bold ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>\n                        {metric.value}%\n                      </span>\n                    </div>\n                    <div className={`w-full h-3 rounded-full overflow-hidden ${isDarkMode ? 'bg-gray-700' : 'bg-gray-200'}`}>\n                      <div\n                        className={`h-full ${metric.color} transition-all duration-500 ease-out`}\n                        style={{ width: `${(metric.value / metric.max) * 100}%` }}\n                      />\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card className={isDarkMode ? 'bg-gray-800 border-gray-700' : ''}>\n            <CardHeader>\n              <CardTitle className={isDarkMode ? 'text-white' : ''}>Activity Timeline</CardTitle>\n              <CardDescription className={isDarkMode ? 'text-gray-400' : ''}>\n                Recent activity and events\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {mockActivityData.map((event, index) => {\n                  const getIcon = () => {\n                    switch (event.icon) {\n                      case 'check':\n                        return <CheckCircle className=\"h-5 w-5\" />;\n                      case 'clock':\n                        return <Clock className=\"h-5 w-5\" />;\n                      case 'alert':\n                        return <AlertCircle className=\"h-5 w-5\" />;\n                      case 'user':\n                        return <UserPlus className=\"h-5 w-5\" />;\n                      case 'file':\n                        return <FileText className=\"h-5 w-5\" />;\n                      case 'settings':\n                        return <Settings className=\"h-5 w-5\" />;\n                      default:\n                        return <Clock className=\"h-5 w-5\" />;\n                    }\n                  };\n\n                  const getIconColor = () => {\n                    switch (event.type) {\n                      case 'success':\n                        return 'text-green-500 bg-green-100 dark:bg-green-900/30';\n                      case 'pending':\n                        return 'text-blue-500 bg-blue-100 dark:bg-blue-900/30';\n                      case 'warning':\n                        return 'text-orange-500 bg-orange-100 dark:bg-orange-900/30';\n                      case 'info':\n                        return 'text-purple-500 bg-purple-100 dark:bg-purple-900/30';\n                      default:\n                        return 'text-gray-500 bg-gray-100 dark:bg-gray-800';\n                    }\n                  };\n\n                  const formatTimestamp = (timestamp: string) => {\n                    const date = new Date(timestamp);\n                    const now = new Date();\n                    const diffMs = now.getTime() - date.getTime();\n                    const diffMins = Math.floor(diffMs / 60000);\n                    const diffHours = Math.floor(diffMs / 3600000);\n                    const diffDays = Math.floor(diffMs / 86400000);\n\n                    if (diffMins < 60) {\n                      return `${diffMins}m ago`;\n                    } else if (diffHours < 24) {\n                      return `${diffHours}h ago`;\n                    } else {\n                      return `${diffDays}d ago`;\n                    }\n                  };\n\n                  return (\n                    <div key={event.id} className=\"flex gap-3 relative\">\n                      {index !== mockActivityData.length - 1 && (\n                        <div\n                          className={`absolute left-5 top-10 w-0.5 h-full ${\n                            isDarkMode ? 'bg-gray-700' : 'bg-gray-200'\n                          }`}\n                        />\n                      )}\n                      <div\n                        className={`flex-shrink-0 w-10 h-10 rounded-full flex items-center justify-center ${getIconColor()} relative z-10`}\n                      >\n                        {getIcon()}\n                      </div>\n                      <div className=\"flex-1 pt-1\">\n                        <div className=\"flex items-start justify-between gap-2\">\n                          <div>\n                            <h4\n                              className={`font-semibold text-sm ${\n                                isDarkMode ? 'text-white' : 'text-gray-900'\n                              }`}\n                            >\n                              {event.title}\n                            </h4>\n                            <p\n                              className={`text-sm mt-0.5 ${\n                                isDarkMode ? 'text-gray-400' : 'text-gray-600'\n                              }`}\n                            >\n                              {event.description}\n                            </p>\n                          </div>\n                          <span\n                            className={`text-xs whitespace-nowrap ${\n                              isDarkMode ? 'text-gray-500' : 'text-gray-500'\n                            }`}\n                          >\n                            {formatTimestamp(event.timestamp)}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        <Card className={isDarkMode ? 'bg-gray-800 border-gray-700' : ''}>\n          <CardHeader>\n            <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4\">\n              <div>\n                <CardTitle className={isDarkMode ? 'text-white' : ''}>Recent Projects</CardTitle>\n                <CardDescription className={isDarkMode ? 'text-gray-400' : ''}>\n                  Overview of project status and values\n                </CardDescription>\n              </div>\n              <div className=\"flex flex-col sm:flex-row gap-3\">\n                <div className=\"relative flex-1\">\n                  <Search className={`absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`} />\n                  <Input\n                    type=\"text\"\n                    placeholder=\"Search projects...\"\n                    value={searchQuery}\n                    onChange={(e) => setSearchQuery(e.target.value)}\n                    className={`pl-10 ${isDarkMode ? 'bg-gray-700 border-gray-600 text-white placeholder:text-gray-400' : ''}`}\n                  />\n                </div>\n                <Select value={statusFilter} onValueChange={(value: 'all' | 'active' | 'pending' | 'completed') => setStatusFilter(value)}>\n                  <SelectTrigger className={`w-full sm:w-[180px] ${isDarkMode ? 'bg-gray-700 border-gray-600 text-white' : ''}`}>\n                    <SelectValue placeholder=\"Filter by status\" />\n                  </SelectTrigger>\n                  <SelectContent className={isDarkMode ? 'bg-gray-700 border-gray-600' : ''}>\n                    <SelectItem value=\"all\" className={isDarkMode ? 'text-white focus:bg-gray-600' : ''}>All Status</SelectItem>\n                    <SelectItem value=\"active\" className={isDarkMode ? 'text-white focus:bg-gray-600' : ''}>Active</SelectItem>\n                    <SelectItem value=\"pending\" className={isDarkMode ? 'text-white focus:bg-gray-600' : ''}>Pending</SelectItem>\n                    <SelectItem value=\"completed\" className={isDarkMode ? 'text-white focus:bg-gray-600' : ''}>Completed</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n            </div>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              <div className=\"overflow-x-auto\">\n                <Table>\n                  <TableHeader>\n                    <TableRow className={isDarkMode ? 'border-gray-700' : ''}>\n                      <TableHead className={isDarkMode ? 'text-gray-300' : ''}>\n                        <button\n                          onClick={() => handleSort('name')}\n                          className=\"flex items-center gap-1 hover:text-primary transition-colors\"\n                        >\n                          Project Name\n                          {sortConfig?.key === 'name' ? (\n                            sortConfig.direction === 'asc' ? (\n                              <ChevronUp className=\"h-4 w-4\" />\n                            ) : (\n                              <ChevronDown className=\"h-4 w-4\" />\n                            )\n                          ) : (\n                            <ChevronsUpDown className=\"h-4 w-4 opacity-50\" />\n                          )}\n                        </button>\n                      </TableHead>\n                      <TableHead className={isDarkMode ? 'text-gray-300' : ''}>\n                        <button\n                          onClick={() => handleSort('status')}\n                          className=\"flex items-center gap-1 hover:text-primary transition-colors\"\n                        >\n                          Status\n                          {sortConfig?.key === 'status' ? (\n                            sortConfig.direction === 'asc' ? (\n                              <ChevronUp className=\"h-4 w-4\" />\n                            ) : (\n                              <ChevronDown className=\"h-4 w-4\" />\n                            )\n                          ) : (\n                            <ChevronsUpDown className=\"h-4 w-4 opacity-50\" />\n                          )}\n                        </button>\n                      </TableHead>\n                      <TableHead className={isDarkMode ? 'text-gray-300' : ''}>\n                        <button\n                          onClick={() => handleSort('value')}\n                          className=\"flex items-center gap-1 hover:text-primary transition-colors\"\n                        >\n                          Value\n                          {sortConfig?.key === 'value' ? (\n                            sortConfig.direction === 'asc' ? (\n                              <ChevronUp className=\"h-4 w-4\" />\n                            ) : (\n                              <ChevronDown className=\"h-4 w-4\" />\n                            )\n                          ) : (\n                            <ChevronsUpDown className=\"h-4 w-4 opacity-50\" />\n                          )}\n                        </button>\n                      </TableHead>\n                      <TableHead className={isDarkMode ? 'text-gray-300' : ''}>\n                        <button\n                          onClick={() => handleSort('date')}\n                          className=\"flex items-center gap-1 hover:text-primary transition-colors\"\n                        >\n                          Date\n                          {sortConfig?.key === 'date' ? (\n                            sortConfig.direction === 'asc' ? (\n                              <ChevronUp className=\"h-4 w-4\" />\n                            ) : (\n                              <ChevronDown className=\"h-4 w-4\" />\n                            )\n                          ) : (\n                            <ChevronsUpDown className=\"h-4 w-4 opacity-50\" />\n                          )}\n                        </button>\n                      </TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {paginatedData().length === 0 ? (\n                      <TableRow>\n                        <TableCell colSpan={4} className=\"text-center py-8\">\n                          <p className={isDarkMode ? 'text-gray-400' : 'text-gray-500'}>\n                            No projects found\n                          </p>\n                        </TableCell>\n                      </TableRow>\n                    ) : (\n                      paginatedData().map((row) => (\n                        <TableRow \n                          key={row.id}\n                          className={isDarkMode ? 'border-gray-700 hover:bg-gray-750' : 'hover:bg-gray-50'}\n                        >\n                          <TableCell className={isDarkMode ? 'text-gray-200' : ''}>\n                            {row.name}\n                          </TableCell>\n                          <TableCell>\n                            <Badge\n                              variant={\n                                row.status === 'active' \n                                  ? 'default' \n                                  : row.status === 'completed' \n                                  ? 'secondary' \n                                  : 'outline'\n                              }\n                              className={\n                                row.status === 'active'\n                                  ? 'bg-green-500 hover:bg-green-600'\n                                  : row.status === 'completed'\n                                  ? 'bg-blue-500 hover:bg-blue-600'\n                                  : isDarkMode\n                                  ? 'border-yellow-500 text-yellow-500'\n                                  : 'border-yellow-600 text-yellow-600'\n                              }\n                            >\n                              {row.status.charAt(0).toUpperCase() + row.status.slice(1)}\n                            </Badge>\n                          </TableCell>\n                          <TableCell className={isDarkMode ? 'text-gray-200' : ''}>\n                            ${row.value.toLocaleString()}\n                          </TableCell>\n                          <TableCell className={isDarkMode ? 'text-gray-400' : 'text-gray-600'}>\n                            {new Date(row.date).toLocaleDateString('en-US', {\n                              year: 'numeric',\n                              month: 'short',\n                              day: 'numeric'\n                            })}\n                          </TableCell>\n                        </TableRow>\n                      ))\n                    )}\n                  </TableBody>\n                </Table>\n              </div>\n\n              {totalPages > 1 && (\n                <div className=\"flex items-center justify-between\">\n                  <p className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>\n                    Showing {((currentPage - 1) * itemsPerPage) + 1} to {Math.min(currentPage * itemsPerPage, filteredAndSortedData().length)} of {filteredAndSortedData().length} results\n                  </p>\n                  <div className=\"flex items-center gap-2\">\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => setCurrentPage(prev => Math.max(1, prev - 1))}\n                      disabled={currentPage === 1}\n                      className={isDarkMode ? 'border-gray-600 text-gray-300 hover:bg-gray-700' : ''}\n                    >\n                      Previous\n                    </Button>\n                    <div className=\"flex items-center gap-1\">\n                      {Array.from({ length: totalPages }, (_, i) => i + 1).map(page => (\n                        <Button\n                          key={page}\n                          variant={currentPage === page ? 'default' : 'outline'}\n                          size=\"sm\"\n                          onClick={() => setCurrentPage(page)}\n                          className={\n                            currentPage === page \n                              ? '' \n                              : isDarkMode \n                              ? 'border-gray-600 text-gray-300 hover:bg-gray-700' \n                              : ''\n                          }\n                        >\n                          {page}\n                        </Button>\n                      ))}\n                    </div>\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => setCurrentPage(prev => Math.min(totalPages, prev + 1))}\n                      disabled={currentPage === totalPages}\n                      className={isDarkMode ? 'border-gray-600 text-gray-300 hover:bg-gray-700' : ''}\n                    >\n                      Next\n                    </Button>\n                  </div>\n                </div>\n              )}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\nimport { useState, useCallback } from 'react';\nimport { Badge } from '@/components/ui/badge';\nimport { Input } from '@/components/ui/input';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { ChevronUp, ChevronDown, ChevronsUpDown } from 'lucide-react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Moon, Sun } from 'lucide-react';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { CheckCircle, Clock, AlertCircle, UserPlus, FileText, Settings } from 'lucide-react';\n\n\n\nimport { PieChart, Pie, Cell, ResponsiveContainer, Legend, Tooltip } from 'recharts';\nimport { Input } from '@/components/ui/input';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Search } from 'lucide-react';\nimport { motion } from 'framer-motion';\nimport { TrendingUp, TrendingDown } from 'lucide-react';\nimport { motion } from 'framer-motion';\nimport { RefreshCw } from 'lucide-react';\n\ninterface MetricData {\n  id: string;\n  label: string;\n  value: number;\n  change: number;\n  trend: 'up' | 'down';\n}\n\ninterface ChartDataPoint {\n  timestamp: string;\n  value: number;\n  category: string;\n}\n\ninterface TableRow {\n  id: string;\n  name: string;\n  status: 'active' | 'pending' | 'completed';\n  value: number;\n  date: string;\n}\n\ninterface ActivityEvent {\n  id: string;\n  type: 'success' | 'pending' | 'warning' | 'info';\n  title: string;\n  description: string;\n  timestamp: string;\n  icon: 'check' | 'clock' | 'alert' | 'user' | 'file' | 'settings';\n}\n\nconst mockMetrics: MetricData[] = [\n  { id: '1', label: 'Total Revenue', value: 45231, change: 12.5, trend: 'up' },\n  { id: '2', label: 'Active Users', value: 2350, change: 8.2, trend: 'up' },\n  { id: '3', label: 'Conversion Rate', value: 3.24, change: -2.1, trend: 'down' },\n  { id: '4', label: 'Avg Session', value: 4.8, change: 5.3, trend: 'up' }\n];\n\nconst mockChartData: ChartDataPoint[] = [\n  { timestamp: '2024-01-01', value: 4200, category: 'Sales' },\n  { timestamp: '2024-01-02', value: 3800, category: 'Sales' },\n  { timestamp: '2024-01-03', value: 5100, category: 'Sales' },\n  { timestamp: '2024-01-04', value: 4600, category: 'Sales' },\n  { timestamp: '2024-01-05', value: 5400, category: 'Sales' },\n  { timestamp: '2024-01-06', value: 6200, category: 'Sales' },\n  { timestamp: '2024-01-07', value: 5800, category: 'Sales' }\n];\n\nconst mockTableData: TableRow[] = [\n  { id: '1', name: 'Project Alpha', status: 'active', value: 12500, date: '2024-01-15' },\n  { id: '2', name: 'Project Beta', status: 'completed', value: 8900, date: '2024-01-14' },\n  { id: '3', name: 'Project Gamma', status: 'pending', value: 15200, date: '2024-01-13' },\n  { id: '4', name: 'Project Delta', status: 'active', value: 9800, date: '2024-01-12' },\n  { id: '5', name: 'Project Epsilon', status: 'completed', value: 11300, date: '2024-01-11' }\n];\ninterface PieChartData {\n  name: string;\n  value: number;\n  color: string;\n}\n\nconst mockPieData: PieChartData[] = [\n  { name: 'Sales', value: 35, color: '#3b82f6' },\n  { name: 'Marketing', value: 25, color: '#8b5cf6' },\n  { name: 'Operations', value: 20, color: '#10b981' },\n  { name: 'Support', value: 15, color: '#f59e0b' },\n  { name: 'Other', value: 5, color: '#6b7280' }\n];\n\nconst mockActivityData: ActivityEvent[] = [\n  {\n    id: '1',\n    type: 'success',\n    title: 'Project Completed',\n    description: 'Project Beta has been successfully completed',\n    timestamp: '2024-01-15T10:30:00',\n    icon: 'check'\n  },\n  {\n    id: '2',\n    type: 'info',\n    title: 'New User Registered',\n    description: 'John Doe joined the platform',\n    timestamp: '2024-01-15T09:15:00',\n    icon: 'user'\n  },\n  {\n    id: '3',\n    type: 'pending',\n    title: 'Report Generation',\n    description: 'Monthly analytics report is being generated',\n    timestamp: '2024-01-15T08:45:00',\n    icon: 'file'\n  },\n  {\n    id: '4',\n    type: 'warning',\n    title: 'System Alert',\n    description: 'Server load exceeded 80% threshold',\n    timestamp: '2024-01-15T07:20:00',\n    icon: 'alert'\n  },\n  {\n    id: '5',\n    type: 'info',\n    title: 'Settings Updated',\n    description: 'Dashboard preferences have been modified',\n    timestamp: '2024-01-14T16:30:00',\n    icon: 'settings'\n  }\n];\n\nconst LineChart = ({ data, isDarkMode }: { data: ChartDataPoint[], isDarkMode: boolean }) => {\n  const [hoveredPoint, setHoveredPoint] = useState<number | null>(null);\n  const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 });\n\n  const width = 100; // percentage\n  const height = 300;\n  const padding = { top: 20, right: 20, bottom: 40, left: 50 };\n\n  const maxValue = Math.max(...data.map(d => d.value));\n  const minValue = Math.min(...data.map(d => d.value));\n  const valueRange = maxValue - minValue;\n\n  const chartWidth = width - padding.left - padding.right;\n  const chartHeight = height - padding.top - padding.bottom;\n\n  const getX = (index: number) => {\n    return (index / (data.length - 1)) * chartWidth;\n  };\n\n  const getY = (value: number) => {\n    return chartHeight - ((value - minValue) / valueRange) * chartHeight;\n  };\n\n  const pathData = data.map((point, index) => {\n    const x = getX(index);\n    const y = getY(point.value);\n    return `${index === 0 ? 'M' : 'L'} ${x} ${y}`;\n  }).join(' ');\n\n  const gradientPathData = `${pathData} L ${getX(data.length - 1)} ${chartHeight} L 0 ${chartHeight} Z`;\n\n  const handlePointHover = (index: number, event: React.MouseEvent) => {\n    setHoveredPoint(index);\n    const rect = event.currentTarget.getBoundingClientRect();\n    setTooltipPosition({ x: event.clientX - rect.left, y: event.clientY - rect.top });\n  };\n\n  return (\n    <div className=\"relative w-full\" style={{ height: `${height}px` }}>\n      <svg\n        viewBox={`0 0 ${width} ${height}`}\n        preserveAspectRatio=\"none\"\n        className=\"w-full h-full\"\n      >\n        <defs>\n          <linearGradient id=\"chartGradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n            <stop offset=\"0%\" stopColor={isDarkMode ? '#3b82f6' : '#60a5fa'} stopOpacity=\"0.4\" />\n            <stop offset=\"100%\" stopColor={isDarkMode ? '#3b82f6' : '#60a5fa'} stopOpacity=\"0.05\" />\n          </linearGradient>\n        </defs>\n\n        <g transform={`translate(${padding.left}, ${padding.top})`}>\n          {/* Grid lines */}\n          {[0, 1, 2, 3, 4].map((i) => {\n            const y = (chartHeight / 4) * i;\n            return (\n              <line\n                key={i}\n                x1=\"0\"\n                y1={y}\n                x2={chartWidth}\n                y2={y}\n                stroke={isDarkMode ? '#374151' : '#e5e7eb'}\n                strokeWidth=\"1\"\n              />\n            );\n          })}\n\n          {/* Gradient area */}\n          <motion.path\n            d={gradientPathData}\n            fill=\"url(#chartGradient)\"\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ duration: 0.5 }}\n          />\n\n          {/* Line */}\n          <motion.path\n            d={pathData}\n            fill=\"none\"\n            stroke={isDarkMode ? '#3b82f6' : '#2563eb'}\n            strokeWidth=\"2.5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            initial={{ pathLength: 0 }}\n            animate={{ pathLength: 1 }}\n            transition={{ duration: 1, ease: \"easeInOut\" }}\n          />\n\n          {/* Data points */}\n          {data.map((point, index) => {\n            const x = getX(index);\n            const y = getY(point.value);\n            return (\n              <motion.circle\n                key={index}\n                cx={x}\n                cy={y}\n                r={hoveredPoint === index ? 6 : 4}\n                fill={isDarkMode ? '#3b82f6' : '#2563eb'}\n                stroke={isDarkMode ? '#1f2937' : '#ffffff'}\n                strokeWidth=\"2\"\n                initial={{ scale: 0 }}\n                animate={{ scale: 1 }}\n                transition={{ duration: 0.3, delay: index * 0.05 }}\n                onMouseEnter={(e) => handlePointHover(index, e)}\n                onMouseLeave={() => setHoveredPoint(null)}\n                className=\"cursor-pointer\"\n                style={{ pointerEvents: 'all' }}\n              />\n            );\n          })}\n\n          {/* Y-axis labels */}\n          {[0, 1, 2, 3, 4].map((i) => {\n            const y = (chartHeight / 4) * i;\n            const value = maxValue - (valueRange / 4) * i;\n            return (\n              <text\n                key={i}\n                x=\"-10\"\n                y={y}\n                textAnchor=\"end\"\n                dominantBaseline=\"middle\"\n                className={`text-xs ${isDarkMode ? 'fill-gray-400' : 'fill-gray-600'}`}\n              >\n                {value.toFixed(0)}\n              </text>\n            );\n          })}\n\n          {/* X-axis labels */}\n          {data.map((point, index) => {\n            if (index % Math.ceil(data.length / 6) === 0 || index === data.length - 1) {\n              const x = getX(index);\n              const date = new Date(point.timestamp);\n              const label = `${date.getMonth() + 1}/${date.getDate()}`;\n              return (\n                <text\n                  key={index}\n                  x={x}\n                  y={chartHeight + 20}\n                  textAnchor=\"middle\"\n                  className={`text-xs ${isDarkMode ? 'fill-gray-400' : 'fill-gray-600'}`}\n                >\n                  {label}\n                </text>\n              );\n            }\n            return null;\n          })}\n        </g>\n      </svg>\n\n      {/* Tooltip */}\n      {hoveredPoint !== null && (\n        <motion.div\n          initial={{ opacity: 0, scale: 0.8 }}\n          animate={{ opacity: 1, scale: 1 }}\n          className={`absolute pointer-events-none z-10 px-3 py-2 rounded-lg shadow-lg ${\n            isDarkMode ? 'bg-gray-700 border border-gray-600' : 'bg-white border border-gray-200'\n          }`}\n          style={{\n            left: `${tooltipPosition.x}px`,\n            top: `${tooltipPosition.y - 60}px`,\n            transform: 'translateX(-50%)'\n          }}\n        >\n          <div className={`text-xs font-semibold ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>\n            ${data[hoveredPoint].value.toLocaleString()}\n          </div>\n          <div className={`text-xs ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>\n            {new Date(data[hoveredPoint].timestamp).toLocaleDateString()}\n          </div>\n        </motion.div>\n      )}\n    </div>\n  );\n};\n\nexport default function AnalyticsDashboard() {\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const [metrics, setMetrics] = useState<MetricData[]>(mockMetrics);\n  const [chartData, setChartData] = useState<ChartDataPoint[]>(mockChartData);\n  const [tableData, setTableData] = useState<TableRow[]>(mockTableData);\n  const [selectedTimeRange, setSelectedTimeRange] = useState<'7d' | '30d' | '90d'>('7d');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [statusFilter, setStatusFilter] = useState<'all' | 'active' | 'pending' | 'completed'>('all');\n\n  const toggleDarkMode = useCallback(() => {\n    setIsDarkMode(prev => !prev);\n  }, []);\n\n  const handleTimeRangeChange = useCallback((range: '7d' | '30d' | '90d') => {\n    setSelectedTimeRange(range);\n        // Simulate filtering chart data based on time range\n    const daysMap = { '7d': 7, '30d': 30, '90d': 90 };\n    const days = daysMap[range];\n    \n    // Generate mock data for the selected time range\n    const today = new Date('2024-01-07');\n    const filteredData: ChartDataPoint[] = [];\n    \n    for (let i = days - 1; i >= 0; i--) {\n      const date = new Date(today);\n      date.setDate(date.getDate() - i);\n      const timestamp = date.toISOString().split('T')[0];\n      const baseValue = 4000 + Math.random() * 2000;\n      filteredData.push({\n        timestamp,\n        value: Math.round(baseValue),\n        category: 'Sales'\n      });\n    }\n    \n    setChartData(filteredData);</parameter>\n  }, []);\n\n  const [searchQuery, setSearchQuery] = useState('');\n  const [statusFilter, setStatusFilter] = useState<'all' | 'active' | 'pending' | 'completed'>('all');\n  const [sortConfig, setSortConfig] = useState<{ key: keyof TableRow; direction: 'asc' | 'desc' } | null>(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const itemsPerPage = 5;\n\n  const handleSort = useCallback((key: keyof TableRow) => {\n    setSortConfig(prevConfig => {\n      if (prevConfig?.key === key) {\n        if (prevConfig.direction === 'asc') {\n          return { key, direction: 'desc' };\n        } else {\n          return null;\n        }\n      }\n      return { key, direction: 'asc' };\n    });\n  }, []);\n\n  const filteredAndSortedData = useCallback(() => {\n    let filtered = tableData.filter(row => {\n      const matchesSearch = row.name.toLowerCase().includes(searchQuery.toLowerCase());\n      const matchesStatus = statusFilter === 'all' || row.status === statusFilter;\n      return matchesSearch && matchesStatus;\n    });\n\n    if (sortConfig) {\n      filtered.sort((a, b) => {\n        const aValue = a[sortConfig.key];\n        const bValue = b[sortConfig.key];\n        \n        if (typeof aValue === 'string' && typeof bValue === 'string') {\n          return sortConfig.direction === 'asc' \n            ? aValue.localeCompare(bValue)\n            : bValue.localeCompare(aValue);\n        }\n        \n        if (typeof aValue === 'number' && typeof bValue === 'number') {\n          return sortConfig.direction === 'asc' \n            ? aValue - bValue\n            : bValue - aValue;\n        }\n        \n        return 0;\n      });\n    }\n\n    return filtered;\n  }, [tableData, searchQuery, statusFilter, sortConfig]);\n\n  const paginatedData = useCallback(() => {\n    const data = filteredAndSortedData();\n    const startIndex = (currentPage - 1) * itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n    return data.slice(startIndex, endIndex);\n  }, [filteredAndSortedData, currentPage]);\n\n  const totalPages = Math.ceil(filteredAndSortedData().length / itemsPerPage);\n\n  const handleRefreshData = useCallback(() => {\n    setTimeout(() => {\n      // Update metrics with random changes\n      setMetrics(prevMetrics =>\n        prevMetrics.map(metric => ({\n          ...metric,\n          value: metric.value + (Math.random() - 0.5) * metric.value * 0.1,\n          change: (Math.random() - 0.5) * 20,\n          trend: Math.random() > 0.5 ? 'up' : 'down'\n        }))\n      );\n\n      // Update chart data with new data point\n      setChartData(prevData => {\n        const lastPoint = prevData[prevData.length - 1];\n        const newTimestamp = new Date(lastPoint.timestamp);\n        newTimestamp.setDate(newTimestamp.getDate() + 1);\n        \n        const newPoint: ChartDataPoint = {\n          timestamp: newTimestamp.toISOString().split('T')[0],\n          value: Math.floor(Math.random() * 3000) + 3500,\n          category: 'Sales'\n        };\n        \n        return [...prevData.slice(1), newPoint];\n      });\n\n      // Update table data with random value changes\n      setTableData(prevData =>\n        prevData.map(row => ({\n          ...row,\n          value: row.value + (Math.random() - 0.5) * row.value * 0.15\n        }))\n      );\n    }, 500);\n  }, []);\n\n  return (\n    <div className={`min-h-screen transition-colors duration-300 ${isDarkMode ? 'dark bg-gray-900' : 'bg-gray-50'}`}>\n      <div className=\"container mx-auto p-4 md:p-6 lg:p-8\">\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4 mb-8\">\n          <div>\n            <h1 className={`text-3xl md:text-4xl font-bold ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>\n              Analytics Dashboard\n            </h1>\n            <p className={`mt-2 ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>\n              Real-time insights and performance metrics\n            </p>\n          </div>\n          \n          <div className=\"flex items-center gap-4\">\n            <div className=\"flex items-center gap-2\">\n              <Button\n                variant={selectedTimeRange === '7d' ? 'default' : 'outline'}\n                size=\"sm\"\n                onClick={() => handleTimeRangeChange('7d')}\n                className={selectedTimeRange === '7d' ? '' : isDarkMode ? 'text-gray-300 border-gray-600 hover:bg-gray-800' : ''}\n              >\n                7 Days\n              </Button>\n              <Button\n                variant={selectedTimeRange === '30d' ? 'default' : 'outline'}\n                size=\"sm\"\n                onClick={() => handleTimeRangeChange('30d')}\n                className={selectedTimeRange === '30d' ? '' : isDarkMode ? 'text-gray-300 border-gray-600 hover:bg-gray-800' : ''}\n              >\n                30 Days\n              </Button>\n              <Button\n                variant={selectedTimeRange === '90d' ? 'default' : 'outline'}\n                size=\"sm\"\n                onClick={() => handleTimeRangeChange('90d')}\n                className={selectedTimeRange === '90d' ? '' : isDarkMode ? 'text-gray-300 border-gray-600 hover:bg-gray-800' : ''}\n              >\n                90 Days\n              </Button>\n            </div>\n            \n            <Button\n              variant=\"outline\"\n              size=\"icon\"\n              onClick={toggleDarkMode}\n              className={isDarkMode ? 'border-gray-700' : ''}\n            >\n              {isDarkMode ? <Sun className=\"h-5 w-5\" /> : <Moon className=\"h-5 w-5\" />}\n            </Button>\n            \n            \n            <Button\n              variant=\"outline\"\n              onClick={handleRefreshData}\n              disabled={isRefreshing}\n              className={isDarkMode ? 'border-gray-700' : ''}\n            >\n              <RefreshCw className={`h-4 w-4 mr-2 ${isRefreshing ? 'animate-spin' : ''}`} />\n              {isRefreshing ? 'Refreshing...' : 'Refresh'}\n            </Button>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 md:gap-6 mb-8\">\n          {metrics.map((metric, index) => (\n            <motion.div\n              key={metric.id}\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ duration: 0.4, delay: index * 0.1 }}\n            >\n              <Card className={isDarkMode ? 'bg-gray-800 border-gray-700' : 'bg-white'}>\n                <CardHeader className=\"pb-2\">\n                  <CardDescription className={isDarkMode ? 'text-gray-400' : 'text-gray-600'}>\n                    {metric.label}\n                  </CardDescription>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"flex items-end justify-between\">\n                    <div>\n                      <motion.div\n                        initial={{ scale: 0.5 }}\n                        animate={{ scale: 1 }}\n                        transition={{ duration: 0.5, delay: index * 0.1 + 0.2 }}\n                        className={`text-2xl md:text-3xl font-bold ${isDarkMode ? 'text-white' : 'text-gray-900'}`}\n                      >\n                        {metric.label.includes('Rate') || metric.label.includes('Session') \n                          ? `${metric.value}%` \n                          : metric.value.toLocaleString()}\n                      </motion.div>\n                      <div className=\"flex items-center gap-1 mt-2\">\n                        {metric.trend === 'up' ? (\n                          <TrendingUp className=\"h-4 w-4 text-green-500\" />\n                        ) : (\n                          <TrendingDown className=\"h-4 w-4 text-red-500\" />\n                        )}\n                        <span className={`text-sm font-medium ${\n                          metric.trend === 'up' ? 'text-green-500' : 'text-red-500'\n                        }`}>\n                          {metric.change > 0 ? '+' : ''}{metric.change}%\n                        </span>\n                        <span className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\n                          vs last period\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n          ))}\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4 md:gap-6 mb-8\">\n          <Card className={`lg:col-span-2 ${isDarkMode ? 'bg-gray-800 border-gray-700' : ''}`}>\n            <CardHeader>\n              <CardTitle className={isDarkMode ? 'text-white' : ''}>Revenue Trend</CardTitle>\n              <CardDescription className={isDarkMode ? 'text-gray-400' : ''}>\n                Daily revenue over selected period\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <LineChart data={chartData} isDarkMode={isDarkMode} />\n            </CardContent>\n          </Card>\n\n          <Card className={isDarkMode ? 'bg-gray-800 border-gray-700' : ''}>\n            <CardHeader>\n              <CardTitle className={isDarkMode ? 'text-white' : ''}>Category Distribution</CardTitle>\n              <CardDescription className={isDarkMode ? 'text-gray-400' ",
      "error": null,
      "overall_score": 44,
      "code_quality_score": 12,
      "architecture_score": 10,
      "performance_score": 8,
      "accessibility_score": 14,
      "metadata": {
        "document_id": "eval_room_1d66cad4b2c3",
        "prompt_category": "intermediate",
        "prompt_complexity": 6.0
      }
    },
    {
      "prompt_id": "algorithm_visualizer",
      "prompt_name": "Algorithm Visualizer",
      "mode": "parallel",
      "run_number": 28,
      "timestamp": "2025-10-14T09:59:36.233532",
      "response_time": 209.55418968200684,
      "total_tokens": null,
      "response_content": "import { useState, useCallback } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Slider } from '@/components/ui/slider';\nimport { Play, Pause, RotateCcw, Zap, BarChart3 } from 'lucide-react';\nimport { motion } from 'framer-motion';\n\ninterface ArrayElement {\n  value: number;\n  id: string;\n  isComparing?: boolean;\n  isSwapping?: boolean;\n  isSorted?: boolean;\n}\n\ninterface AlgorithmStep {\n  array: ArrayElement[];\n  comparingIndices: number[];\n  swappingIndices: number[];\n  sortedIndices: number[];\n}\n\ntype AlgorithmType = 'bubble' | 'quick' | 'merge' | 'insertion';\n\nconst NEON_COLORS = [\n  '#00ffff',\n  '#ff00ff', \n  '#00ff00',\n  '#ffff00',\n  '#ff0066',\n  '#00ffaa'\n];\n\nconst mockAlgorithms = [\n  { id: 'bubble', name: 'Bubble Sort', complexity: 'O(n\u00b2)' },\n  { id: 'quick', name: 'Quick Sort', complexity: 'O(n log n)' },\n  { id: 'merge', name: 'Merge Sort', complexity: 'O(n log n)' },\n  { id: 'insertion', name: 'Insertion Sort', complexity: 'O(n\u00b2)' }\n];\n\nconst useAnimationLoop = (\n  steps: AlgorithmStep[],\n  currentStep: number,\n  speed: number[],\n  isPlaying: boolean,\n  onStepChange: (step: number) => void,\n  onComplete: () => void\n) => {\n  const [animationId, setAnimationId] = useState<NodeJS.Timeout | null>(null);\n\n  const cleanup = useCallback(() => {\n    if (animationId) {\n      clearTimeout(animationId);\n      setAnimationId(null);\n    }\n  }, [animationId]);\n\n  const animate = useCallback(() => {\n    if (currentStep < steps.length - 1) {\n      const delay = 1000 - speed[0] * 9.5; // Convert speed slider to delay (50 = 525ms, 100 = 50ms)\n      const id = setTimeout(() => {\n        onStepChange(currentStep + 1);\n      }, delay);\n      setAnimationId(id);\n    } else {\n      onComplete();\n    }\n  }, [currentStep, steps.length, speed, onStepChange, onComplete]);\n\n  // Run animation when playing\n  if (isPlaying && steps.length > 0) {\n    animate();\n  }\n\n  // Cleanup on unmount or when stopping\n  return cleanup;\n};\nexport default function AlgorithmVisualizer() {\n  const [array, setArray] = useState<ArrayElement[]>([]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [speed, setSpeed] = useState([50]);\n  const [arraySize, setArraySize] = useState([20]);\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState<AlgorithmType>('bubble');\n  const [currentStep, setCurrentStep] = useState(0);\n  const [steps, setSteps] = useState<AlgorithmStep[]>([]);\n\n  const generateRandomArray = useCallback(() => {\n    const newArray: ArrayElement[] = Array.from({ length: arraySize[0] }, (_, index) => ({\n      value: Math.floor(Math.random() * 100) + 1,\n      id: `element-${Date.now()}-${index}`,\n      isComparing: false,\n      isSwapping: false,\n      isSorted: false\n    }));\n    setArray(newArray);\n    setSteps([]);\n    setCurrentStep(0);\n    setIsPlaying(false);\n  }, [arraySize]);\n\n  const resetVisualization = useCallback(() => {\n\n    setIsPlaying(false);\n    setCurrentStep(0);\n    setSteps([]);\n    generateRandomArray();\n  }, [generateRandomArray]);\n\n  const startVisualization = useCallback(() => {\n    if (steps.length === 0) return;\n    if (currentStep >= steps.length - 1) {\n      setCurrentStep(0);\n    }\n    setIsPlaying(true);\n  \n  }, [steps, speed, currentStep]);\n\n  const pauseVisualization = useCallback(() => {\n\n    setIsPlaying(false);\n  }, []);\n\n  const generateSortingSteps = useCallback((algorithm: AlgorithmType) => {\n    const sortedArray = [...array];\n    const algorithmSteps: AlgorithmStep[] = [];\n    \n    // Helper to create a step snapshot\n    const createStep = (\n      arr: ArrayElement[],\n      comparing: number[] = [],\n      swapping: number[] = [],\n      sorted: number[] = []\n    ) => {\n      algorithmSteps.push({\n        array: arr.map((el, idx) => ({\n          ...el,\n          isComparing: comparing.includes(idx),\n          isSwapping: swapping.includes(idx),\n          isSorted: sorted.includes(idx)\n        })),\n        comparingIndices: comparing,\n        swappingIndices: swapping,\n        sortedIndices: sorted\n      });\n    };\n\n    // Initial state\n    createStep([...sortedArray]);\n\n    switch (algorithm) {\n      case 'bubble': {\n        const n = sortedArray.length;\n        const sortedIndices: number[] = [];\n        \n        for (let i = 0; i < n - 1; i++) {\n          for (let j = 0; j < n - i - 1; j++) {\n            // Comparing\n            createStep([...sortedArray], [j, j + 1], [], sortedIndices);\n            \n            if (sortedArray[j].value > sortedArray[j + 1].value) {\n              // Swapping\n              createStep([...sortedArray], [], [j, j + 1], sortedIndices);\n              [sortedArray[j], sortedArray[j + 1]] = [sortedArray[j + 1], sortedArray[j]];\n              createStep([...sortedArray], [], [j, j + 1], sortedIndices);\n            }\n          }\n          sortedIndices.push(n - i - 1);\n          createStep([...sortedArray], [], [], sortedIndices);\n        }\n        sortedIndices.push(0);\n        createStep([...sortedArray], [], [], sortedIndices);\n        break;\n      }\n\n      case 'insertion': {\n        const sortedIndices: number[] = [0];\n        \n        for (let i = 1; i < sortedArray.length; i++) {\n          const key = sortedArray[i];\n          let j = i - 1;\n          \n          createStep([...sortedArray], [i], [], sortedIndices);\n          \n          while (j >= 0 && sortedArray[j].value > key.value) {\n            createStep([...sortedArray], [j, j + 1], [], sortedIndices);\n            createStep([...sortedArray], [], [j, j + 1], sortedIndices);\n            sortedArray[j + 1] = sortedArray[j];\n            createStep([...sortedArray], [], [j, j + 1], sortedIndices);\n            j--;\n          }\n          \n          sortedArray[j + 1] = key;\n          sortedIndices.push(i);\n          createStep([...sortedArray], [], [], sortedIndices);\n        }\n        break;\n      }\n\n      case 'quick': {\n        const sortedIndices: number[] = [];\n        \n        const partition = (low: number, high: number): number => {\n          const pivot = sortedArray[high];\n          let i = low - 1;\n          \n          createStep([...sortedArray], [high], [], sortedIndices);\n          \n          for (let j = low; j < high; j++) {\n            createStep([...sortedArray], [j, high], [], sortedIndices);\n            \n            if (sortedArray[j].value < pivot.value) {\n              i++;\n              if (i !== j) {\n                createStep([...sortedArray], [], [i, j], sortedIndices);\n                [sortedArray[i], sortedArray[j]] = [sortedArray[j], sortedArray[i]];\n                createStep([...sortedArray], [], [i, j], sortedIndices);\n              }\n            }\n          }\n          \n          createStep([...sortedArray], [], [i + 1, high], sortedIndices);\n          [sortedArray[i + 1], sortedArray[high]] = [sortedArray[high], sortedArray[i + 1]];\n          createStep([...sortedArray], [], [i + 1, high], sortedIndices);\n          sortedIndices.push(i + 1);\n          \n          return i + 1;\n        };\n        \n        const quickSort = (low: number, high: number) => {\n          if (low < high) {\n            const pi = partition(low, high);\n            quickSort(low, pi - 1);\n            quickSort(pi + 1, high);\n          } else if (low === high) {\n            sortedIndices.push(low);\n            createStep([...sortedArray], [], [], sortedIndices);\n          }\n        };\n        \n        quickSort(0, sortedArray.length - 1);\n        break;\n      }\n\n      case 'merge': {\n        const sortedIndices: number[] = [];\n        \n        const merge = (left: number, mid: number, right: number) => {\n          const leftArr = sortedArray.slice(left, mid + 1);\n          const rightArr = sortedArray.slice(mid + 1, right + 1);\n          \n          let i = 0, j = 0, k = left;\n          \n          while (i < leftArr.length && j < rightArr.length) {\n            createStep([...sortedArray], [left + i, mid + 1 + j], [], sortedIndices);\n            \n            if (leftArr[i].value <= rightArr[j].value) {\n              createStep([...sortedArray], [], [k], sortedIndices);\n              sortedArray[k] = leftArr[i];\n              createStep([...sortedArray], [], [k], sortedIndices);\n              i++;\n            } else {\n              createStep([...sortedArray], [], [k], sortedIndices);\n              sortedArray[k] = rightArr[j];\n              createStep([...sortedArray], [], [k], sortedIndices);\n              j++;\n            }\n            k++;\n          }\n          \n          while (i < leftArr.length) {\n            sortedArray[k] = leftArr[i];\n            createStep([...sortedArray], [], [k], sortedIndices);\n            i++;\n            k++;\n          }\n          \n          while (j < rightArr.length) {\n            sortedArray[k] = rightArr[j];\n            createStep([...sortedArray], [], [k], sortedIndices);\n            j++;\n            k++;\n          }\n          \n          if (left === 0 && right === sortedArray.length - 1) {\n            for (let idx = 0; idx < sortedArray.length; idx++) {\n              sortedIndices.push(idx);\n            }\n          }\n          createStep([...sortedArray], [], [], sortedIndices);\n        };\n        \n        const mergeSort = (left: number, right: number) => {\n          if (left < right) {\n            const mid = Math.floor((left + right) / 2);\n            mergeSort(left, mid);\n            mergeSort(mid + 1, right);\n            merge(left, mid, right);\n          }\n        };\n        \n        mergeSort(0, sortedArray.length - 1);\n        break;\n      }\n    }\n\n    setSteps(algorithmSteps);\n    setCurrentStep(0);\n  }, [array]);\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-purple-900 to-gray-900 p-8\">\n      <div className=\"max-w-7xl mx-auto space-y-8\">\n        <motion.div\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n          className=\"text-center space-y-4\"\n        >\n          <motion.h1\n            className=\"text-6xl font-bold bg-gradient-to-r from-cyan-400 via-purple-400 to-pink-400 bg-clip-text text-transparent\"\n            animate={{\n              textShadow: [\n                '0 0 20px rgba(0, 255, 255, 0.5)',\n                '0 0 40px rgba(255, 0, 255, 0.5)',\n                '0 0 20px rgba(0, 255, 255, 0.5)'\n              ]\n            }}\n            transition={{ duration: 2, repeat: Infinity }}\n          >\n            Algorithm Visualizer\n          </motion.h1>\n          \n          <div className=\"flex items-center justify-center gap-4\">\n            <motion.div\n              initial={{ scale: 0 }}\n              animate={{ scale: 1 }}\n              transition={{ delay: 0.3, type: 'spring', stiffness: 200 }}\n              className=\"px-6 py-3 bg-gradient-to-r from-purple-600/30 to-pink-600/30 rounded-lg border border-purple-500/50 backdrop-blur-sm\"\n            >\n              <div className=\"flex items-center gap-3\">\n                <Zap className=\"w-5 h-5 text-yellow-400\" />\n                <span className=\"text-xl font-semibold text-white\">\n                  {mockAlgorithms.find(a => a.id === selectedAlgorithm)?.name || 'Bubble Sort'}\n                </span>\n              </div>\n            </motion.div>\n            \n            <motion.div\n              initial={{ scale: 0 }}\n              animate={{ scale: 1 }}\n              transition={{ delay: 0.5, type: 'spring', stiffness: 200 }}\n              className=\"px-4 py-2 bg-cyan-500/20 rounded-full border border-cyan-400/50 backdrop-blur-sm\"\n            >\n              <div className=\"flex items-center gap-2\">\n                <BarChart3 className=\"w-4 h-4 text-cyan-400\" />\n                <span className=\"text-sm font-mono text-cyan-300\">\n                  {mockAlgorithms.find(a => a.id === selectedAlgorithm)?.complexity || 'O(n\u00b2)'}\n                </span>\n              </div>\n            </motion.div>\n          </div>\n        </motion.div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\n          <div className=\"lg:col-span-1 space-y-6\">\n            <motion.div\n              initial={{ opacity: 0, x: -50 }}\n              animate={{ opacity: 1, x: 0 }}\n              className=\"bg-gray-900/50 backdrop-blur-lg border border-cyan-500/30 rounded-xl p-6 shadow-2xl shadow-cyan-500/20\"\n            >\n              <div className=\"space-y-6\">\n                {/* Algorithm Selection */}\n                <div className=\"space-y-3\">\n                  <div className=\"flex items-center gap-2 mb-4\">\n                    <Zap className=\"w-5 h-5 text-cyan-400\" />\n                    <h3 className=\"text-cyan-400 font-bold text-lg tracking-wider\">ALGORITHM</h3>\n                  </div>\n                  <div className=\"grid grid-cols-1 gap-2\">\n                    {mockAlgorithms.map((algo) => (\n                      <motion.button\n                        key={algo.id}\n                        whileHover={{ scale: 1.02 }}\n                        whileTap={{ scale: 0.98 }}\n                        onClick={() => setSelectedAlgorithm(algo.id as AlgorithmType)}\n                        className={`p-3 rounded-lg border transition-all duration-300 text-left ${\n                          selectedAlgorithm === algo.id\n                            ? 'bg-cyan-500/20 border-cyan-400 shadow-lg shadow-cyan-500/50'\n                            : 'bg-gray-800/50 border-gray-700 hover:border-cyan-500/50'\n                        }`}\n                      >\n                        <div className=\"font-semibold text-white\">{algo.name}</div>\n                        <div className=\"text-xs text-gray-400 mt-1\">{algo.complexity}</div>\n                      </motion.button>\n                    ))}\n                  </div>\n                </div>\n\n                {/* Array Size Control */}\n                <div className=\"space-y-3\">\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center gap-2\">\n                      <BarChart3 className=\"w-4 h-4 text-purple-400\" />\n                      <label className=\"text-purple-400 font-semibold text-sm tracking-wide\">\n                        ARRAY SIZE\n                      </label>\n                    </div>\n                    <span className=\"text-white font-bold text-lg\">{arraySize[0]}</span>\n                  </div>\n                  <Slider\n                    value={arraySize}\n                    onValueChange={setArraySize}\n                    min={5}\n                    max={50}\n                    step={1}\n                    className=\"cursor-pointer\"\n                    disabled={isPlaying}\n                  />\n                </div>\n\n                {/* Speed Control */}\n                <div className=\"space-y-3\">\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center gap-2\">\n                      <Zap className=\"w-4 h-4 text-yellow-400\" />\n                      <label className=\"text-yellow-400 font-semibold text-sm tracking-wide\">\n                        SPEED\n                      </label>\n                    </div>\n                    <span className=\"text-white font-bold text-lg\">{speed[0]}%</span>\n                  </div>\n                  <Slider\n                    value={speed}\n                    onValueChange={setSpeed}\n                    min={10}\n                    max={100}\n                    step={10}\n                    className=\"cursor-pointer\"\n                  />\n                </div>\n\n                {/* Control Buttons */}\n                <div className=\"space-y-3 pt-4 border-t border-gray-700/50\">\n                  <Button\n                    onClick={isPlaying ? pauseVisualization : startVisualization}\n                    disabled={steps.length === 0 || (currentStep >= steps.length && !isPlaying)}\n                    className=\"w-full bg-gradient-to-r from-cyan-500 to-blue-500 hover:from-cyan-600 hover:to-blue-600 text-white font-bold py-6 rounded-lg shadow-lg shadow-cyan-500/50 transition-all duration-300\"\n                  >\n                    {isPlaying ? (\n                      <>\n                        <Pause className=\"w-5 h-5 mr-2\" />\n                        PAUSE\n                      </>\n                    ) : (\n                      <>\n                        <Play className=\"w-5 h-5 mr-2\" />\n                        START\n                      </>\n                    )}\n                  </Button>\n\n                  <Button\n                    onClick={resetVisualization}\n                    variant=\"outline\"\n                    className=\"w-full border-2 border-purple-500/50 bg-purple-500/10 hover:bg-purple-500/20 text-purple-300 font-bold py-6 rounded-lg shadow-lg shadow-purple-500/30 transition-all duration-300\"\n                  >\n                    <RotateCcw className=\"w-5 h-5 mr-2\" />\n                    RESET\n                  </Button>\n\n                  <Button\n                    onClick={() => generateSortingSteps(selectedAlgorithm)}\n                    disabled={isPlaying || array.length === 0}\n                    className=\"w-full bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 text-white font-bold py-6 rounded-lg shadow-lg shadow-purple-500/50 transition-all duration-300\"\n                  >\n                    <Zap className=\"w-5 h-5 mr-2\" />\n                    GENERATE\n                  </Button>\n                </div>\n\n                {/* Stats Display */}\n                <div className=\"pt-4 border-t border-gray-700/50 space-y-2\">\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-gray-400 text-sm\">Current Step:</span>\n                    <span className=\"text-cyan-400 font-bold\">{currentStep}</span>\n                  </div>\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-gray-400 text-sm\">Total Steps:</span>\n                    <span className=\"text-cyan-400 font-bold\">{steps.length}</span>\n                  </div>\n                  <div className=\"w-full bg-gray-800 rounded-full h-2 overflow-hidden\">\n                    <motion.div\n                      className=\"h-full bg-gradient-to-r from-cyan-500 to-purple-500\"\n                      initial={{ width: 0 }}\n                      animate={{ width: steps.length > 0 ? `${(currentStep / steps.length) * 100}%` : '0%' }}\n                      transition={{ duration: 0.3 }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </motion.div>\n            \n            <div className=\"bg-gray-900/50 backdrop-blur-lg border border-cyan-500/30 rounded-xl p-6 shadow-2xl shadow-cyan-500/20\">\n              <div className=\"space-y-6\">\n                <div className=\"space-y-3\">\n                  <div className=\"flex items-center gap-2 text-cyan-400\">\n                    <Zap className=\"w-4 h-4\" />\n                    <span className=\"text-sm font-semibold tracking-wider\">ALGORITHM</span>\n                  </div>\n                  <div className=\"grid grid-cols-1 gap-3\">\n                    {mockAlgorithms.map((algo) => (\n                      <motion.button\n                        key={algo.id}\n                        onClick={() => setSelectedAlgorithm(algo.id as AlgorithmType)}\n                        className={`relative p-4 rounded-lg border-2 transition-all duration-300 text-left overflow-hidden group ${\n                          selectedAlgorithm === algo.id\n                            ? 'border-cyan-400 bg-cyan-500/20 shadow-lg shadow-cyan-500/50'\n                            : 'border-gray-700 bg-gray-800/50 hover:border-cyan-500/50 hover:bg-cyan-500/10'\n                        }`}\n                        whileHover={{ scale: 1.02 }}\n                        whileTap={{ scale: 0.98 }}\n                      >\n                        <div className={`absolute inset-0 bg-gradient-to-r from-cyan-500/0 via-cyan-500/20 to-cyan-500/0 opacity-0 group-hover:opacity-100 transition-opacity duration-500 ${\n                          selectedAlgorithm === algo.id ? 'opacity-100' : ''\n                        }`} />\n                        <div className=\"relative z-10\">\n                          <div className=\"font-semibold text-white mb-1\">{algo.name}</div>\n                          <div className={`text-xs font-mono ${\n                            selectedAlgorithm === algo.id ? 'text-cyan-300' : 'text-gray-400'\n                          }`}>\n                            {algo.complexity}\n                          </div>\n                        </div>\n                        {selectedAlgorithm === algo.id && (\n                          <motion.div\n                            className=\"absolute top-2 right-2\"\n                            initial={{ scale: 0, rotate: -180 }}\n                            animate={{ scale: 1, rotate: 0 }}\n                            transition={{ type: 'spring', stiffness: 200, damping: 15 }}\n                          >\n                            <div className=\"w-2 h-2 rounded-full bg-cyan-400 shadow-lg shadow-cyan-400/80\" />\n                          </motion.div>\n                        )}\n                      </motion.button>\n                    ))}\n                  </div>\n                </div>\n\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <label className=\"text-cyan-400 text-sm font-medium flex items-center gap-2\">\n                      <Zap className=\"w-4 h-4\" />\n                      Speed\n                    </label>\n                    <span className=\"text-cyan-300 text-xs\">{speed[0]}ms</span>\n                  </div>\n                  <Slider\n                    value={speed}\n                    onValueChange={setSpeed}\n                    min={10}\n                    max={200}\n                    step={10}\n                    className=\"[&_[role=slider]]:bg-cyan-400 [&_[role=slider]]:border-cyan-300 [&_[role=slider]]:shadow-[0_0_15px_rgba(34,211,238,0.8)] [&_[role=slider]]:hover:shadow-[0_0_25px_rgba(34,211,238,1)] [&_[role=slider]]:transition-shadow [&_.relative]:bg-gray-700/50 [&_.relative]:border [&_.relative]:border-cyan-500/30 [&_.bg-primary]:bg-gradient-to-r [&_.bg-primary]:from-cyan-500 [&_.bg-primary]:to-purple-500 [&_.bg-primary]:shadow-[0_0_10px_rgba(34,211,238,0.5)]\"\n                  />\n                </div>\n\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <label className=\"text-cyan-400 text-sm font-medium flex items-center gap-2\">\n                      <BarChart3 className=\"w-4 h-4\" />\n                      Array Size\n                    </label>\n                    <span className=\"text-cyan-300 text-xs\">{arraySize[0]}</span>\n                  </div>\n                  <Slider\n                    value={arraySize}\n                    onValueChange={setArraySize}\n                    min={5}\n                    max={100}\n                    step={1}\n                    className=\"[&_[role=slider]]:bg-gradient-to-r [&_[role=slider]]:from-cyan-400 [&_[role=slider]]:to-purple-500 [&_[role=slider]]:border-2 [&_[role=slider]]:border-cyan-300 [&_[role=slider]]:shadow-lg [&_[role=slider]]:shadow-cyan-500/50 [&_[role=slider]]:transition-all [&_[role=slider]]:hover:shadow-xl [&_[role=slider]]:hover:shadow-cyan-400/60 [&>span]:bg-gradient-to-r [&>span]:from-cyan-500/30 [&>span]:to-purple-500/30 [&>span]:h-2\"\n                  />\n                </div>\n\n                <div className=\"flex gap-3 pt-4\">\n                  \n                  <motion.button\n                    onClick={resetVisualization}\n                    className=\"flex-1 px-6 py-3 bg-gradient-to-r from-pink-600/30 to-red-600/30 border-2 border-pink-500/50 rounded-lg text-white font-semibold hover:from-pink-600/50 hover:to-red-600/50 hover:border-pink-400 transition-all duration-300 shadow-lg shadow-pink-500/30 hover:shadow-pink-500/60 hover:shadow-xl flex items-center justify-center gap-2 group\"\n                    whileHover={{ scale: 1.05 }}\n                    whileTap={{ scale: 0.95, rotate: 360 }}\n                    transition={{ type: \"spring\", stiffness: 400, damping: 17 }}\n                  >\n                    <motion.div\n                      animate={{ rotate: 0 }}\n                      whileHover={{ rotate: 180 }}\n                      transition={{ duration: 0.5 }}\n                    >\n                      <RotateCcw className=\"w-5 h-5\" />\n                    </motion.div>\n                    <span>Reset</span>\n                  </motion.button>\n                </div>\n              </div>\n            </div>\n\n            <motion.div\n            initial={{ opacity: 0, x: -50 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ delay: 0.2 }}\n            className=\"bg-gray-900/50 backdrop-blur-lg border border-purple-500/30 rounded-xl p-6 shadow-2xl shadow-purple-500/20\"\n          >\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center gap-2 mb-4\">\n                <BarChart3 className=\"w-5 h-5 text-purple-400\" />\n                <h3 className=\"text-purple-400 font-bold text-lg tracking-wider\">STATISTICS</h3>\n              </div>\n\n              <div className=\"grid grid-cols-1 gap-4\">\n                {/* Comparisons Counter */}\n                <motion.div\n                  className=\"relative overflow-hidden rounded-lg bg-gradient-to-br from-cyan-500/10 to-cyan-600/5 border border-cyan-500/30 p-4\"\n                  whileHover={{ scale: 1.02 }}\n                  transition={{ type: 'spring', stiffness: 300 }}\n                >\n                  <div className=\"absolute inset-0 bg-gradient-to-r from-cyan-500/0 via-cyan-500/10 to-cyan-500/0 animate-pulse\" />\n                  <div className=\"relative z-10\">\n                    <div className=\"text-xs text-cyan-400 font-semibold tracking-wider mb-2\">COMPARISONS</div>\n                    <motion.div\n                      className=\"text-3xl font-bold text-white font-mono\"\n                      key={currentStep}\n                      initial={{ scale: 1.2, color: '#00ffff' }}\n                      animate={{ scale: 1, color: '#ffffff' }}\n                      transition={{ duration: 0.3 }}\n                    >\n                      {steps[currentStep]?.comparingIndices.length > 0 ? \n                        steps.slice(0, currentStep + 1).filter(s => s.comparingIndices.length > 0).length : \n                        0}\n                    </motion.div>\n                    <div className=\"mt-2 h-1 bg-gray-800 rounded-full overflow-hidden\">\n                      <motion.div\n                        className=\"h-full bg-gradient-to-r from-cyan-400 to-cyan-600 shadow-[0_0_10px_rgba(34,211,238,0.8)]\"\n                        initial={{ width: 0 }}\n                        animate={{ \n                          width: steps.length > 0 ? `${(steps.slice(0, currentStep + 1).filter(s => s.comparingIndices.length > 0).length / Math.max(steps.filter(s => s.comparingIndices.length > 0).length, 1)) * 100}%` : '0%'\n                        }}\n                        transition={{ duration: 0.5 }}\n                      />\n                    </div>\n                  </div>\n                </motion.div>\n\n                {/* Swaps Counter */}\n                <motion.div\n                  className=\"relative overflow-hidden rounded-lg bg-gradient-to-br from-pink-500/10 to-pink-600/5 border border-pink-500/30 p-4\"\n                  whileHover={{ scale: 1.02 }}\n                  transition={{ type: 'spring', stiffness: 300 }}\n                >\n                  <div className=\"absolute inset-0 bg-gradient-to-r from-pink-500/0 via-pink-500/10 to-pink-500/0 animate-pulse\" style={{ animationDelay: '0.5s' }} />\n                  <div className=\"relative z-10\">\n                    <div className=\"text-xs text-pink-400 font-semibold tracking-wider mb-2\">SWAPS</div>\n                    <motion.div\n                      className=\"text-3xl font-bold text-white font-mono\"\n                      key={`swap-${currentStep}`}\n                      initial={{ scale: 1.2, color: '#ff00ff' }}\n                      animate={{ scale: 1, color: '#ffffff' }}\n                      transition={{ duration: 0.3 }}\n                    >\n                      {steps[currentStep]?.swappingIndices.length > 0 ? \n                        steps.slice(0, currentStep + 1).filter(s => s.swappingIndices.length > 0).length : \n                        0}\n                    </motion.div>\n                    <div className=\"mt-2 h-1 bg-gray-800 rounded-full overflow-hidden\">\n                      <motion.div\n                        className=\"h-full bg-gradient-to-r from-pink-400 to-pink-600 shadow-[0_0_10px_rgba(255,0,255,0.8)]\"\n                        initial={{ width: 0 }}\n                        animate={{ \n                          width: steps.length > 0 ? `${(steps.slice(0, currentStep + 1).filter(s => s.swappingIndices.length > 0).length / Math.max(steps.filter(s => s.swappingIndices.length > 0).length, 1)) * 100}%` : '0%'\n                        }}\n                        transition={{ duration: 0.5 }}\n                      />\n                    </div>\n                  </div>\n                </motion.div>\n\n                {/* Progress */}\n                <motion.div\n                  className=\"relative overflow-hidden rounded-lg bg-gradient-to-br from-purple-500/10 to-purple-600/5 border border-purple-500/30 p-4\"\n                  whileHover={{ scale: 1.02 }}\n                  transition={{ type: 'spring', stiffness: 300 }}\n                >\n                  <div className=\"absolute inset-0 bg-gradient-to-r from-purple-500/0 via-purple-500/10 to-purple-500/0 animate-pulse\" style={{ animationDelay: '1s' }} />\n                  <div className=\"relative z-10\">\n                    <div className=\"text-xs text-purple-400 font-semibold tracking-wider mb-2\">PROGRESS</div>\n                    <motion.div\n                      className=\"text-3xl font-bold text-white font-mono\"\n                      key={`progress-${currentStep}`}\n                      initial={{ scale: 1.2, color: '#a855f7' }}\n                      animate={{ scale: 1, color: '#ffffff' }}\n                      transition={{ duration: 0.3 }}\n                    >\n                      {steps.length > 0 ? Math.round((currentStep / Math.max(steps.length - 1, 1)) * 100) : 0}%\n                    </motion.div>\n                    <div className=\"mt-2 h-1 bg-gray-800 rounded-full overflow-hidden\">\n                      <motion.div\n                        className=\"h-full bg-gradient-to-r from-purple-400 via-pink-500 to-cyan-400 shadow-[0_0_10px_rgba(168,85,247,0.8)]\"\n                        initial={{ width: 0 }}\n                        animate={{ \n                          width: steps.length > 0 ? `${(currentStep / Math.max(steps.length - 1, 1)) * 100}%` : '0%'\n                        }}\n                        transition={{ duration: 0.5 }}\n                      />\n                    </div>\n                  </div>\n                </motion.div>\n\n                {/* Array Size Info */}\n                <motion.div\n                  className=\"relative overflow-hidden rounded-lg bg-gradient-to-br from-yellow-500/10 to-yellow-600/5 border border-yellow-500/30 p-4\"\n                  whileHover={{ scale: 1.02 }}\n                  transition={{ type: 'spring', stiffness: 300 }}\n                >\n                  <div className=\"relative z-10\">\n                    <div className=\"text-xs text-yellow-400 font-semibold tracking-wider mb-2\">ARRAY SIZE</div>\n                    <div className=\"text-3xl font-bold text-white font-mono\">\n                      {array.length}\n                    </div>\n                    <div className=\"mt-2 text-xs text-yellow-300/70\">\n                      {steps[currentStep]?.sortedIndices.length || 0} / {array.length} sorted\n                    </div>\n                  </div>\n                </motion.div>\n\n                {/* Current Step */}\n                <motion.div\n                  className=\"relative overflow-hidden rounded-lg bg-gradient-to-br from-green-500/10 to-green-600/5 border border-green-500/30 p-4\"\n                  whileHover={{ scale: 1.02 }}\n                  transition={{ type: 'spring', stiffness: 300 }}\n                >\n                  <div className=\"relative z-10\">\n                    <div className=\"text-xs text-green-400 font-semibold tracking-wider mb-2\">CURRENT STEP</div>\n                    <div className=\"text-3xl font-bold text-white font-mono\">\n                      {currentStep}\n                    </div>\n                    <div className=\"mt-2 text-xs text-green-300/70\">\n                      of {Math.max(steps.length - 1, 0)} total steps\n                    </div>\n                  </div>\n                </motion.div>\n              </div>\n            </div>\n          </motion.div>\n          </div>\n\n          <div className=\"lg:col-span-3\">\n\n            <div className=\"bg-gray-900/50 backdrop-blur-lg border border-purple-500/30 rounded-xl p-8 shadow-2xl shadow-purple-500/20 min-h-[600px]\">\n\n\n\n              {array.length === 0 ? (\n                <motion.div\n                  initial={{ opacity: 0, scale: 0.8 }}\n                  animate={{ opacity: 1, scale: 1 }}\n                  className=\"absolute inset-0 flex flex-col items-center justify-center gap-6\"\n                >\n                  <motion.div\n                    animate={{\n                      rotate: [0, 360],\n                      scale: [1, 1.2, 1]\n                    }}\n                    transition={{\n                      duration: 3,\n                      repeat: Infinity,\n                      ease: \"easeInOut\"\n                    }}\n                  >\n                    <BarChart3 className=\"w-24 h-24 text-purple-400/50\" />\n                  </motion.div>\n                  <div className=\"text-center space-y-2\">\n                    <p className=\"text-2xl font-bold text-purple-300\">Generate an Array to Start</p>\n                    <p className=\"text-gray-400\">Click the reset button to create a random array</p>\n                  </div>\n                </motion.div>\n              ) : (\n                <div className=\"relative w-full h-full flex items-end justify-center gap-1 px-4\">\n                  {/* Animated Bars */}\n                  {(steps.length > 0 && currentStep < steps.length ? steps[currentStep].array : array).map((element, index) => {\n                    const maxValue = Math.max(...array.map(el => el.value));\n                    const heightPercentage = (element.value / maxValue) * 100;\n                    \n                    let barColor = NEON_COLORS[index % NEON_COLORS.length];\n                    let glowIntensity = 0.3;\n                    \n                    if (element.isSorted) {\n                      barColor = '#00ff00';\n                      glowIntensity = 0.8;\n                    } else if (element.isSwapping) {\n                      barColor = '#ff0066';\n                      glowIntensity = 1;\n                    } else if (element.isComparing) {\n                      barColor = '#ffff00';\n                      glowIntensity = 0.9;\n                    }\n                    \n                    return (\n                      <motion.div\n                        key={element.id}\n                        layout\n                        initial={{ height: 0, opacity: 0 }}\n                        animate={{\n                          height: `${heightPercentage}%`,\n                          opacity: 1,\n                          boxShadow: [\n                            `0 0 ${10 * glowIntensity}px ${barColor}`,\n                            `0 0 ${20 * glowIntensity}px ${barColor}`,\n                            `0 0 ${10 * glowIntensity}px ${barColor}`\n                          ]\n                        }}\n                        transition={{\n                          height: { duration: 0.3, ease: \"easeOut\" },\n                          opacity: { duration: 0.5 },\n                          boxShadow: { duration: 0.5, repeat: Infinity }\n                        }}\n                        className=\"relative flex-1 min-w-[4px] max-w-[60px] rounded-t-lg\"\n                        style={{\n                          backgroundColor: barColor,\n                          border: `1px solid ${barColor}`,\n                        }}\n                      >\n                        {/* Value label */}\n                        {array.length <= 30 && (\n                          <motion.div\n                            initial={{ opacity: 0 }}\n                            animate={{ opacity: 1 }}\n                            className=\"absolute -top-6 left-1/2 -translate-x-1/2 text-xs font-mono font-bold whitespace-nowrap\"\n                            style={{ color: barColor }}\n                          >\n                            {element.value}\n                          </motion.div>\n                        )}\n                        \n                        {/* Swap trail effect */}\n                        {element.isSwapping && (\n                          <motion.div\n                            className=\"absolute inset-0 rounded-t-lg\"\n                            style={{\n                              background: `linear-gradient(to top, ${barColor}, transparent)`,\n                            }}\n                            animate={{\n                              opacity: [0.8, 0, 0.8],\n                              scale: [1, 1.2, 1]\n                            }}\n                            transition={{\n                              duration: 0.6,\n                              repeat: Infinity\n                            }}\n                          />\n                        )}\n                        \n                        {/* Glow effect for comparing */}\n                        {element.isComparing && (\n                          <motion.div\n                            className=\"absolute -inset-1 rounded-t-lg blur-sm\"\n                            style={{ backgroundColor: barColor }}\n                            animate={{\n                              opacity: [0.5, 1, 0.5]\n                            }}\n                            transition={{\n                              duration: 0.4,\n                              repeat: Infinity\n                            }}\n                          />\n                        )}\n                        \n                        {/* Sorted checkmark */}\n                        {element.isSorted && array.length <= 50 && (\n                          <motion.div\n                            initial={{ scale: 0, rotate: -180 }}\n                            animate={{ scale: 1, rotate: 0 }}\n                            className=\"absolute -top-8 left-1/2 -translate-x-1/2\"\n                          >\n                            <div className=\"w-4 h-4 rounded-full bg-green-400 flex items-center justify-center shadow-lg shadow-green-400/50\">\n                              <div className=\"w-2 h-2 border-b-2 border-r-2 border-white transform rotate-45 -translate-y-[1px]\" />\n                            </div>\n                          </motion.div>\n                        )}\n                      </motion.div>\n                    );\n                  })}\n                  \n                  {/* Comparison Indicators */}\n                  {steps.length > 0 && currentStep < steps.length && steps[currentStep].comparingIndices.length > 0 && (\n                    <div className=\"absolute top-0 left-0 right-0 h-full pointer-events-none\">\n                      {steps[currentStep].comparingIndices.map((idx, i) => {\n                        const totalBars = steps[currentStep].array.length;\n                        const barWidth = 100 / totalBars;\n                        const leftPosition = (idx * barWidth) + (barWidth / 2);\n                        \n                        return (\n                          <motion.div\n                            key={`compare-${idx}-${i}`}\n                            initial={{ opacity: 0, y: -20 }}\n                            animate={{ opacity: 1, y: 0 }}\n                            exit={{ opacity: 0 }}\n                            className=\"absolute top-4\"\n                            style={{ left: `${leftPosition}%` }}\n                          >\n                            <motion.div\n                              animate={{\n                                y: [0, -10, 0],\n                                rotate: [0, 10, -10, 0]\n                              }}\n                              transition={{\n                                duration: 1,\n                                repeat: Infinity\n                              }}\n                              className=\"w-8 h-8 -translate-x-1/2\"\n                            >\n                              <div className=\"w-full h-full rounded-full bg-yellow-400 flex items-center justify-center shadow-lg shadow-yellow-400/80\">\n                                <Zap className=\"w-4 h-4 text-gray-900\" />\n                              </div>\n                            </motion.div>\n                          </motion.div>\n                        );\n                      })}\n                    </div>\n                  )}\n                  \n                  {/* Swap Trail Effects */}\n                  {steps.length > 0 && currentStep < steps.length && steps[currentStep].swappingIndices.length >= 2 && (\n                    <div className=\"absolute top-0 left-0 right-0 h-full pointer-events-none overflow-hidden\">\n                      <motion.div\n                        initial={{ pathLength: 0, opacity: 0 }}\n                        animate={{ pathLength: 1, opacity: [0, 1, 0] }}\n                        transition={{ duration: 0.8 }}\n                        className=\"absolute inset-0\"\n                      >\n                        <svg className=\"w-full h-full\">\n                          <motion.path\n                            d={`M ${(steps[currentStep].swappingIndices[0] / steps[currentStep].array.length) * 100}% 50% Q 50% 20%, ${(steps[currentStep].swappingIndices[1] / steps[currentStep].array.length) * 100}% 50%`}\n                            stroke=\"#ff0066\"\n                            strokeWidth=\"3\"\n                            fill=\"none\"\n                            initial={{ pathLength: 0 }}\n                            animate={{ pathLength: 1 }}\n                            transition={{ duration: 0.5 }}\n                            style={{\n                              filter: 'drop-shadow(0 0 8px #ff0066)'\n                            }}\n                          />\n                        </svg>\n                      </motion.div>\n                    </div>\n                  )}\n                </div>\n              )}\n              \n              <div className=\"relative h-full flex items-end justify-center gap-1\">\n\n                {array.length > 0 ? (\n                  array.map((element, index) => {\n                    const currentStepData = steps[currentStep];\n                    const isComparing = currentStepData?.comparingIndices.includes(index);\n                    const isSwapping = currentStepData?.swappingIndices.includes(index);\n                    const isSorted = currentStepData?.sortedIndices.includes(index);\n                    \n                    const maxValue = Math.max(...array.map(el => el.value));\n                    const heightPercentage = (element.value / maxValue) * 100;\n                    \n                    const colorIndex = index % NEON_COLORS.length;\n                    const neonColor = NEON_COLORS[colorIndex];\n                    \n                    let barColor = neonColor;\n                    let glowIntensity = 0.3;\n                    \n                    if (isSorted) {\n                      barColor = '#00ff00';\n                      glowIntensity = 0.8;\n                    } else if (isSwapping) {\n                      barColor = '#ff0066';\n                      glowIntensity = 1;\n                    } else if (isComparing) {\n                      barColor = '#ffff00';\n                      glowIntensity = 0.7;\n                    }\n                    \n                    return (\n                      <motion.div\n                        key={element.id}\n                        className=\"relative flex-1 min-w-[4px] max-w-[60px] group\"\n                        initial={{ opacity: 0, scale: 0 }}\n                        animate={{ \n                          opacity: 1, \n                          scale: 1,\n                          y: isSwapping ? [-10, 0] : 0\n                        }}\n                        transition={{ \n                          duration: 0.3,\n                          y: { duration: 0.2, repeat: isSwapping ? 1 : 0 }\n                        }}\n                      >\n                        <motion.div\n                          className=\"w-full rounded-t-lg relative overflow-hidden\"\n                          style={{\n                            backgroundColor: barColor,\n                            boxShadow: `\n                              0 0 ${glowIntensity * 20}px ${barColor},\n                              0 0 ${glowIntensity * 40}px ${barColor},\n                              inset 0 0 ${glowIntensity * 10}px rgba(255, 255, 255, 0.5)\n                            `,\n                            border: `1px solid ${barColor}`,\n                          }}\n                          animate={{\n                            height: `${heightPercentage}%`,\n                            boxShadow: [\n                              `0 0 ${glowIntensity * 20}px ${barColor}, 0 0 ${glowIntensity * 40}px ${barColor}, inset 0 0 ${glowIntensity * 10}px rgba(255, 255, 255, 0.5)`,\n                              `0 0 ${glowIntensity * 30}px ${barColor}, 0 0 ${glowIntensity * 60}px ${barColor}, inset 0 0 ${glowIntensity * 15}px rgba(255, 255, 255, 0.7)`,\n                              `0 0 ${glowIntensity * 20}px ${barColor}, 0 0 ${glowIntensity * 40}px ${barColor}, inset 0 0 ${glowIntensity * 10}px rgba(255, 255, 255, 0.5)`\n                            ]\n                          }}\n                          transition={{\n                            height: { duration: 0.5, ease: 'easeInOut' },\n                            boxShadow: { duration: 1, repeat: Infinity, ease: 'easeInOut' }\n                          }}\n                        >\n                          {/* Shimmer effect */}\n                          <motion.div\n                            className=\"absolute inset-0 bg-gradient-to-t from-transparent via-white/30 to-transparent\"\n                            animate={{\n                              y: ['-100%', '200%']\n                            }}\n                            transition={{\n                              duration: 2,\n                              repeat: Infinity,\n                              ease: 'linear',\n                              repeatDelay: 1\n                            }}\n                          />\n                          \n                          {/* Pulse effect for comparing/swapping */}\n                          {(isComparing || isSwapping) && (\n                            <motion.div\n                              className=\"absolute inset-0\"\n                              style={{\n                                backgroundColor: barColor,\n                                opacity: 0.5\n                              }}\n                              animate={{\n                                opacity: [0.5, 0, 0.5]\n                              }}\n                              transition={{\n                                duration: 0.6,\n                                repeat: Infinity,\n                                ease: 'easeInOut'\n                              }}\n                            />\n                          )}\n                        </motion.div>\n                        \n                        {/* Value label */}\n                        <motion.div\n                          className=\"absolute -bottom-6 left-1/2 transform -translate-x-1/2 text-xs font-mono font-bold opacity-0 group-hover:opacity-100 transition-opacity whitespace-nowrap\"\n                          style={{\n                            color: barColor,\n                            textShadow: `0 0 10px ${barColor}`\n                          }}\n                        >\n                          {element.value}\n                        </motion.div>\n                        \n                        {/* Sorted checkmark */}\n                        {isSorted && (\n                          <motion.div\n                            className=\"absolute -top-8 left-1/2 transform -translate-x-1/2\"\n                            initial={{ scale: 0, rotate: -180 }}\n                            animate={{ scale: 1, rotate: 0 }}\n                            transition={{ type: 'spring', stiffness: 300, damping: 20 }}\n                          >\n                            <div \n                              className=\"w-6 h-6 rounded-full flex items-center justify-center\"\n                              style={{\n                                backgroundColor: '#00ff00',\n                                boxShadow: '0 0 20px #00ff00'\n                              }}\n                            >\n                              <span className=\"text-gray-900 text-xs font-bold\">\u2713</span>\n                            </div>\n                          </motion.div>\n                        )}\n                      </motion.div>\n                    );\n                  })\n                ) : (\n                  <motion.div\n                    className=\"absolute inset-0 flex items-center justify-center\"\n                    initial={{ opacity: 0 }}\n                    animate={{ opacity: 1 }}\n                  >\n                    <div className=\"text-center space-y-4\">\n                      <motion.div\n                        animate={{\n                          scale: [1, 1.2, 1],\n                          rotate: [0, 360]\n                        }}\n                        transition={{\n                          duration: 2,\n                          repeat: Infinity,\n                          ease: 'easeInOut'\n                        }}\n                      >\n                        <BarChart3 className=\"w-16 h-16 text-cyan-400 mx-auto\" style={{\n                          filter: 'drop-shadow(0 0 20px rgba(34, 211, 238, 0.8))'\n                        }} />\n                      </motion.div>\n                      <p className=\"text-cyan-400 text-lg font-semibold\">\n                        Generate an array to start visualizing\n                      </p>\n                      <p className=\"text-gray-400 text-sm\">\n                        Click the reset button to create a random array\n                      </p>\n                    </div>\n                  </motion.div>\n                )}\n              </div>\n\n              \n              \n                            {steps.length > 0 && currentStep < steps.length && (\n                <>\n                  {steps[currentStep].swappingIndices.map((index, i) => {\n                    const element = steps[currentStep].array[index];\n                    const maxValue = Math.max(...steps[currentStep].array.map(el => el.value));\n                    const heightPercent = (element.value / maxValue) * 100;\n                    const barWidth = 100 / steps[currentStep].array.length;\n                    const xPosition = index * barWidth;\n\n                    return (\n                      <motion.div\n                        key={`trail-${element.id}-${currentStep}-${i}`}\n                        className=\"absolute bottom-0 rounded-t-lg pointer-events-none\"\n                        style={{\n                          left: `${xPosition}%`,\n                          width: `${barWidth}%`,\n                          height: `${heightPercent}%`,\n                          background: `linear-gradient(to top, ${NEON_COLORS[index % NEON_COLORS.length]}, transparent)`,\n                          filter: 'blur(8px)',\n                          opacity: 0.6,\n                        }}\n                        initial={{ opacity: 0.8, scale: 1 }}\n                        animate={{ \n                          opacity: 0,\n                          scale: 1.2,\n                          filter: 'blur(20px)'\n                        }}\n                        transition={{ \n                          duration: 0.6,\n                          ease: 'easeOut'\n                        }}\n                      />\n                    );\n                  })}\n                  \n                  {steps[currentStep].swappingIndices.map((index, i) => (\n                    <motion.div\n                      key={`particle-trail-${index}-${currentStep}-${i}`}\n                      className=\"absolute pointer-events-none\"\n                      style={{\n                        left: `${(index * 100 / steps[currentStep].array.length) + (50 / steps[currentStep].array.length)}%`,\n                        bottom: `${(steps[currentStep].array[index].value / Math.max(...steps[currentStep].array.map(el => el.value))) * 50}%`,\n                      }}\n                    >\n                      {[...Array(8)].map((_, particleIndex) => (\n                        <motion.div\n                          key={`particle-${particleIndex}`}\n                          className=\"absolute w-2 h-2 rounded-full\"\n                          style={{\n                            background: NEON_COLORS[index % NEON_COLORS.length],\n                            boxShadow: `0 0 10px ${NEON_COLORS[index % NEON_COLORS.length]}`,\n                          }}\n                          initial={{ \n                            opacity: 1,\n                            scale: 1,\n                            x: 0,\n                            y: 0\n                          }}\n                          animate={{ \n                            opacity: 0,\n                            scale: 0,\n                            x: Math.cos((particleIndex / 8) * Math.PI * 2) * 40,\n                            y: Math.sin((particleIndex / 8) * Math.PI * 2) * 40,\n                          }}\n                          transition={{ \n                            duration: 0.8,\n                            ease: 'easeOut',\n                            delay: particleIndex * 0.02\n                          }}\n                        />\n                      ))}\n                    </motion.div>\n                  ))}\n\n                  {steps[currentStep].swappingIndices.length === 2 && (\n                    <motion.div\n                      key={`swap-line-${currentStep}`}\n                      className=\"absolute pointer-events-none\"\n                      style={{\n                        left: `${(steps[currentStep].swappingIndices[0] * 100 / steps[currentStep].array.length) + (50 / steps[currentStep].array.length)}%`,\n                        right: `${100 - ((steps[currentStep].swappingIndices[1] * 100 / steps[currentStep].array.length) + (50 / steps[currentStep].array.length))}%`,\n                        top: '50%',\n                        height: '2px',\n                        background: `linear-gradient(to right, ${NEON_COLORS[steps[currentStep].swappingIndices[0] % NEON_COLORS.length]}, ${NEON_COLORS[steps[currentStep].swappingIndices[1] % NEON_COLORS.length]})`,\n                        boxShadow: `0 0 20px ${NEON_COLORS[steps[currentStep].swappingIndices[0] % NEON_COLORS.length]}`,\n                      }}\n                      initial={{ opacity: 0, scaleX: 0 }}\n                      animate={{ \n                        opacity: [0, 1, 1, 0],\n                        scaleX: [0, 1, 1, 1],\n                      }}\n                      transition={{ \n                        duration: 0.6,\n                        times: [0, 0.2, 0.8, 1]\n                      }}\n                    />\n                  )}\n                  {steps.length > 0 && currentStep < steps.length && (\n                    <>\n                      {/* Comparison Indicators */}\n                      {steps[currentStep].comparingIndices.map((index, i) => {\n                        const barWidth = 100 / (steps[currentStep].array.length || 1);\n                        const leftPosition = index * barWidth + barWidth / 2;\n                        \n                        return (\n                          <motion.div\n                            key={`compare-${index}-${i}`}\n                            className=\"absolute pointer-events-none\"\n                            style={{\n                              left: `${leftPosition}%`,\n                              top: '10%',\n                              transform: 'translateX(-50%)'\n                            }}\n                            initial={{ opacity: 0, y: -20, scale: 0 }}\n                            animate={{ \n                              opacity: [0, 1, 1, 0],\n                              y: [-20, 0, 0, 10],\n                              scale: [0, 1.2, 1, 0.8],\n                            }}\n                            transition={{\n                              duration: 0.8,\n                              repeat: Infinity,\n                              ease: \"easeInOut\"\n                            }}\n                          >\n                            <div className=\"relative\">\n                              {/* Glowing ring */}\n                              <motion.div\n                                className=\"absolute inset-0 rounded-full\"\n                                style={{\n                                  width: '40px',\n                                  height: '40px',\n                                  background: `radial-gradient(circle, ${NEON_COLORS[0]}40, transparent)`,\n                                  boxShadow: `0 0 20px ${NEON_COLORS[0]}, 0 0 40px ${NEON_COLORS[0]}80`,\n                                }}\n                                animate={{\n                                  scale: [1, 1.5, 1],\n                                  opacity: [0.6, 0.2, 0.6]\n                                }}\n                                transition={{\n                                  duration: 1,\n                                  repeat: Infinity,\n                                  ease: \"easeInOut\"\n                                }}\n                              />\n                              \n                              {/* Center indicator */}\n                              <div \n                                className=\"relative w-10 h-10 rounded-full flex items-center justify-center border-2\"\n                                style={{\n                                  borderColor: NEON_COLORS[0],\n                                  backgroundColor: `${NEON_COLORS[0]}20`,\n                                  boxShadow: `0 0 15px ${NEON_COLORS[0]}, inset 0 0 15px ${NEON_COLORS[0]}40`\n                                }}\n                              >\n                                <motion.div\n                                  className=\"w-3 h-3 rounded-full\"\n                                  style={{\n                                    backgroundColor: NEON_COLORS[0],\n                                    boxShadow: `0 0 10px ${NEON_COLORS[0]}`\n                                  }}\n                                  animate={{\n                                    scale: [1, 1.3, 1],\n                                  }}\n                                  transition={{\n                                    duration: 0.5,\n                                    repeat: Infinity,\n                                    ease: \"easeInOut\"\n                                  }}\n                                />\n                              </div>\n                              \n                              {/* Floating label */}\n                              <motion.div\n                                className=\"absolute -top-8 left-1/2 transform -translate-x-1/2 whitespace-nowrap\"\n                                animate={{\n                                  y: [-2, 2, -2],\n                                }}\n                                transition={{\n                                  duration: 1.5,\n                                  repeat: Infinity,\n                                  ease: \"easeInOut\"\n                                }}\n                              >\n                                <span \n                                  className=\"text-xs font-bold px-2 py-1 rounded\"\n                                  style={{\n                                    color: NEON_COLORS[0],\n                                    backgroundColor: `${NEON_COLORS[0]}20`,\n                                    textShadow: `0 0 10px ${NEON_COLORS[0]}`,\n                                    border: `1px solid ${NEON_COLORS[0]}60`\n                                  }}\n                                >\n                                  COMPARE\n                                </span>\n                              </motion.div>\n                              \n                              {/* Vertical beam */}\n                              <motion.div\n                                className=\"absolute left-1/2 transform -translate-x-1/2\"\n                                style={{\n                                  top: '40px',\n                                  width: '2px',\n                                  height: '100px',\n                                  background: `linear-gradient(to bottom, ${NEON_COLORS[0]}, transparent)`,\n                                  boxShadow: `0 0 10px ${NEON_COLORS[0]}`\n                                }}\n                                animate={{\n                                  opacity: [0.8, 0.3, 0.8],\n                                  scaleY: [1, 1.1, 1]\n                                }}\n                                transition={{\n                                  duration: 1,\n                                  repeat: Infinity,\n                                  ease: \"easeInOut\"\n                                }}\n                              />\n                            </div>\n                          </motion.div>\n                        );\n                      })}\n                    </>\n                  )}\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n\n\n        \n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.4, duration: 0.6 }}\n          className=\"bg-gray-900/50 backdrop-blur-lg border border-cyan-500/30 rounded-xl p-6 shadow-2xl shadow-cyan-500/20\"\n        >\n          <div className=\"flex items-center gap-2 mb-6\">\n            <BarChart3 className=\"w-5 h-5 text-cyan-400\" />\n            <h3 className=\"text-cyan-400 font-bold text-lg tracking-wider\">LEGEND</h3>\n          </div>\n\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            {/* Default State */}\n            <motion.div\n              className=\"relative overflow-hidden rounded-lg bg-gray-800/50 border border-gray-700 p-4 group hover:border-cyan-500/50 transition-all duration-300\"\n              whileHover={{ scale: 1.05, y: -2 }}\n              transition={{ type: 'spring', stiffness: 300 }}\n            >\n              <div className=\"absolute inset-0 bg-gradient-to-br from-cyan-500/0 via-cyan-500/5 to-cyan-500/0 opacity-0 group-hover:opacity-100 transition-opacity duration-500\" />\n              <div className=\"relative z-10 space-y-3\">\n                <motion.div\n                  className=\"w-full h-12 bg-gradient-to-t from-gray-600 to-gray-400 rounded-md shadow-lg\"\n                  animate={{\n                    boxShadow: [\n                      '0 4px 15px rgba(156, 163, 175, 0.3)',\n                      '0 4px 20px rgba(156, 163, 175, 0.5)',\n                      '0 4px 15px rgba(156, 163, 175, 0.3)'\n                    ]\n                  }}\n                  transition={{ duration: 2, repeat: Infinity }}\n                />\n                <div className=\"text-center\">\n                  <div className=\"text-xs font-semibold text-gray-300 tracking-wide\">DEFAULT</div>\n                  <div className=\"text-[10px] text-gray-500 mt-1\">Unsorted</div>\n                </div>\n              </div>\n            </motion.div>\n\n            {/* Comparing State */}\n            <motion.div\n              className=\"relative overflow-hidden rounded-lg bg-gray-800/50 border border-yellow-700/50 p-4 group hover:border-yellow-500/70 transition-all duration-300\"\n              whileHover={{ scale: 1.05, y: -2 }}\n              transition={{ type: 'spring', stiffness: 300 }}\n            >\n              <div className=\"absolute inset-0 bg-gradient-to-br from-yellow-500/0 via-yellow-500/10 to-yellow-500/0 opacity-0 group-hover:opacity-100 transition-opacity duration-500\" />\n              <div className=\"relative z-10 space-y-3\">\n                <motion.div\n                  className=\"w-full h-12 bg-gradient-to-t from-yellow-600 to-yellow-400 rounded-md shadow-lg\"\n                  animate={{\n                    boxShadow: [\n                      '0 4px 20px rgba(250, 204, 21, 0.5)',\n                      '0 4px 30px rgba(250, 204, 21, 0.8)',\n                      '0 4px 20px rgba(250, 204, 21, 0.5)'\n                    ],\n                    scale: [1, 1.05, 1]\n                  }}\n                  transition={{ duration: 1.5, repeat: Infinity }}\n                />\n                <div className=\"text-center\">\n                  <div className=\"text-xs font-semibold text-yellow-300 tracking-wide flex items-center justify-center gap-1\">\n                    <motion.div\n                      animate={{ rotate: 360 }}\n                      transition={{ duration: 2, repeat: Infinity, ease: 'linear' }}\n                    >\n                      <Zap className=\"w-3 h-3\" />\n                    </motion.div>\n                    COMPARING\n                  </div>\n                  <div className=\"text-[10px] text-yellow-500/70 mt-1\">Active Check</div>\n                </div>\n              </div>\n            </motion.div>\n\n            {/* Swapping State */}\n            <motion.div\n              className=\"relative overflow-hidden rounded-lg bg-gray-800/50 border border-pink-700/50 p-4 group hover:border-pink-500/70 transition-all duration-300\"\n              whileHover={{ scale: 1.05, y: -2 }}\n              transition={{ type: 'spring', stiffness: 300 }}\n            >\n              <div className=\"absolute inset-0 bg-gradient-to-br from-pink-500/0 via-pink-500/10 to-pink-500/0 opacity-0 group-hover:opacity-100 transition-opacity duration-500\" />\n              <div className=\"relative z-10 space-y-3\">\n                <motion.div\n                  className=\"w-full h-12 bg-gradient-to-t from-pink-600 to-pink-400 rounded-md shadow-lg\"\n                  animate={{\n                    boxShadow: [\n                      '0 4px 20px rgba(236, 72, 153, 0.5)',\n                      '0 4px 35px rgba(236, 72, 153, 0.9)',\n                      '0 4px 20px rgba(236, 72, 153, 0.5)'\n                    ],\n                    x: [-2, 2, -2]\n                  }}\n                  transition={{ duration: 0.8, repeat: Infinity }}\n                />\n                <div className=\"text-center\">\n                  <div className=\"text-xs font-semibold text-pink-300 tracking-wide flex items-center justify-center gap-1\">\n                    <motion.div\n                      animate={{ x: [-3, 3, -3] }}\n                      transition={{ duration: 0.6, repeat: Infinity }}\n                    >\n                      <RotateCcw className=\"w-3 h-3\" />\n                    </motion.div>\n                    SWAPPING\n                  </div>\n                  <div className=\"text-[10px] text-pink-500/70 mt-1\">Exchanging</div>\n                </div>\n              </div>\n            </motion.div>\n\n            {/* Sorted State */}\n            <motion.div\n              className=\"relative overflow-hidden rounded-lg bg-gray-800/50 border border-green-700/50 p-4 group hover:border-green-500/70 transition-all duration-300\"\n              whileHover={{ scale: 1.05, y: -2 }}\n              transition={{ type: 'spring', stiffness: 300 }}\n            >\n              <div className=\"absolute inset-0 bg-gradient-to-br from-green-500/0 via-green-500/10 to-green-500/0 opacity-0 group-hover:opacity-100 transition-opacity duration-500\" />\n              <div className=\"relative z-10 space-y-3\">\n                <motion.div\n                  className=\"w-full h-12 bg-gradient-to-t from-green-600 to-green-400 rounded-md shadow-lg\"\n                  animate={{\n                    boxShadow: [\n                      '0 4px 20px rgba(34, 197, 94, 0.5)',\n                      '0 4px 30px rgba(34, 197, 94, 0.7)',\n                      '0 4px 20px rgba(34, 197, 94, 0.5)'\n                    ]\n                  }}\n                  transition={{ duration: 2, repeat: Infinity }}\n                />\n                <div className=\"text-center\">\n                  <div className=\"text-xs font-semibold text-green-300 tracking-wide flex items-center justify-center gap-1\">\n                    <motion.div\n                      animate={{ scale: [1, 1.2, 1] }}\n                      transition={{ duration: 1, repeat: Infinity }}\n                    >\n                      \u2713\n                    </motion.div>\n                    SORTED\n                  </div>\n                  <div className=\"text-[10px] text-green-500/70 mt-1\">Complete</div>\n                </div>\n              </div>\n            </motion.div>\n          </div>\n\n          {/* Additional Info */}\n          <motion.div\n            initial={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n            transition={{ delay: 0.8 }}\n            className=\"mt-6 pt-4 border-t border-gray-700/50\"\n          >\n            <div className=\"flex items-center justify-center gap-6 text-xs text-gray-400\">\n              <div className=\"flex items-center gap-2\">\n                <motion.div\n                  className=\"w-2 h-2 rounded-full bg-cyan-400\"\n                  animate={{\n                    boxShadow: [\n                      '0 0 5px rgba(34, 211, 238, 0.5)',\n                      '0 0 15px rgba(34, 211, 238, 0.8)',\n                      '0 0 5px rgba(34, 211, 238, 0.5)'\n                    ]\n                  }}\n                  transition={{ duration: 2, repeat: Infinity }}\n                />\n                <span>Real-time Animation</span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <motion.div\n                  className=\"w-2 h-2 rounded-full bg-purple-400\"\n                  animate={{\n                    boxShadow: [\n                      '0 0 5px rgba(168, 85, 247, 0.5)',\n                      '0 0 15px rgba(168, 85, 247, 0.8)',\n                      '0 0 5px rgba(168, 85, 247, 0.5)'\n                    ]\n                  }}\n                  transition={{ duration: 2, repeat: Infinity, delay: 0.5 }}\n                />\n                <span>Step-by-Step</span>\n              </div>\n            </div>\n          </motion.div>\n        </motion.div>\n      </div>\n    </div>\n  );\n}",
      "error": null,
      "overall_score": 36,
      "code_quality_score": 12,
      "architecture_score": 10,
      "performance_score": 8,
      "accessibility_score": 6,
      "metadata": {
        "document_id": "eval_room_8e4af09464ae",
        "prompt_category": "creative",
        "prompt_complexity": 9.0
      }
    },
    {
      "prompt_id": "dashboard",
      "prompt_name": "Analytics Dashboard",
      "mode": "parallel",
      "run_number": 26,
      "timestamp": "2025-10-14T10:12:37.421054",
      "response_time": 610.0400266647339,
      "total_tokens": null,
      "response_content": "import { useState, useCallback } from 'react';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Moon, Sun, RefreshCw } from 'lucide-react';\nimport { ArrowUpDown, ChevronLeft, ChevronRight } from 'lucide-react';\nimport { Badge } from '@/components/ui/badge';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';\nimport { TrendingUp, TrendingDown, ShoppingCart, UserPlus, CreditCard, Package } from 'lucide-react';\n\n\nimport { PieChart, Pie, Cell, ResponsiveContainer, Legend, Tooltip } from 'recharts';\nimport { motion } from 'framer-motion';\nimport { motion } from 'framer-motion';\nimport { TrendingUp, TrendingDown, DollarSign, Users, ShoppingCart, Target } from 'lucide-react';\nimport { BarChart3 } from 'lucide-react';\nimport { TrendingUp, TrendingDown, DollarSign, Users, ShoppingCart, Target } from 'lucide-react'\nimport { AlertCircle, AlertTriangle, Info, X } from 'lucide-react';\nimport { Badge } from '@/components/ui/badge';;\nimport { motion } from 'framer-motion';\n\nconst UserAreaChart = ({ data, isDarkMode }: { data: ChartDataPoint[], isDarkMode: boolean }) => {\n  const maxUsers = Math.max(...data.map(d => d.users));\n  const minUsers = Math.min(...data.map(d => d.users));\n  const range = maxUsers - minUsers;\n  const padding = range * 0.2;\n  const chartHeight = 200;\n  const chartWidth = 100;\n\n  const points = data.map((point, index) => {\n    const x = (index / (data.length - 1)) * chartWidth;\n    const y = chartHeight - ((point.users - minUsers + padding) / (range + padding * 2)) * chartHeight;\n    return { x, y, ...point };\n  });\n\n  const pathD = points.reduce((path, point, index) => {\n    if (index === 0) return `M ${point.x} ${point.y}`;\n    return `${path} L ${point.x} ${point.y}`;\n  }, '');\n\n  const areaD = `${pathD} L ${chartWidth} ${chartHeight} L 0 ${chartHeight} Z`;\n\n  return (\n    <div className=\"relative w-full h-[200px]\">\n      <svg viewBox={`0 0 ${chartWidth} ${chartHeight}`} className=\"w-full h-full\" preserveAspectRatio=\"none\">\n        <defs>\n          <linearGradient id=\"userGradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n            <stop offset=\"0%\" stopColor=\"#3b82f6\" stopOpacity=\"0.6\" />\n            <stop offset=\"100%\" stopColor=\"#3b82f6\" stopOpacity=\"0.05\" />\n          </linearGradient>\n        </defs>\n        \n        <motion.path\n          d={areaD}\n          fill=\"url(#userGradient)\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ duration: 0.8, ease: \"easeOut\" }}\n        />\n        \n        <motion.path\n          d={pathD}\n          fill=\"none\"\n          stroke=\"#3b82f6\"\n          strokeWidth=\"0.5\"\n          initial={{ pathLength: 0 }}\n          animate={{ pathLength: 1 }}\n          transition={{ duration: 1.5, ease: \"easeInOut\" }}\n        />\n        \n        {points.map((point, index) => (\n          <motion.g key={index}>\n            <motion.circle\n              cx={point.x}\n              cy={point.y}\n              r=\"1\"\n              fill=\"#3b82f6\"\n              initial={{ scale: 0, opacity: 0 }}\n              animate={{ scale: 1, opacity: 1 }}\n              transition={{ delay: index * 0.1, duration: 0.3 }}\n            />\n          </motion.g>\n        ))}\n      </svg>\n      \n      <div className=\"flex justify-between mt-4 text-xs\">\n        {data.map((point, index) => (\n          index % Math.ceil(data.length / 4) === 0 && (\n            <span key={index} className={isDarkMode ? 'text-gray-400' : 'text-gray-600'}>\n              {new Date(point.date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}\n            </span>\n          )\n        ))}\n      </div>\n      \n      <div className=\"mt-4 grid grid-cols-3 gap-4\">\n        <div>\n          <p className={`text-xs ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>Current</p>\n          <p className={`text-lg font-semibold ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>\n            {data[data.length - 1].users.toLocaleString()}\n          </p>\n        </div>\n        <div>\n          <p className={`text-xs ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>Peak</p>\n          <p className={`text-lg font-semibold ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>\n            {maxUsers.toLocaleString()}\n          </p>\n        </div>\n        <div>\n          <p className={`text-xs ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>Growth</p>\n          <p className=\"text-lg font-semibold text-blue-500\">\n            +{(((data[data.length - 1].users - data[0].users) / data[0].users) * 100).toFixed(1)}%\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\ninterface MetricData {\n  id: string;\n  label: string;\n  value: number;\n  change: number;\n  trend: 'up' | 'down';\n}\n\ninterface ChartDataPoint {\n  date: string;\n  revenue: number;\n  users: number;\n  orders: number;\n}\n\ninterface TableRow {\n  id: string;\n  product: string;\n  sales: number;\n  revenue: number;\n  status: 'active' | 'pending' | 'inactive';\n}\n\nconst mockMetrics: MetricData[] = [\n  { id: '1', label: 'Total Revenue', value: 45231, change: 12.5, trend: 'up' },\n  { id: '2', label: 'Active Users', value: 2350, change: 8.2, trend: 'up' },\n  { id: '3', label: 'Total Orders', value: 1543, change: -3.1, trend: 'down' },\n  { id: '4', label: 'Conversion Rate', value: 3.24, change: 5.7, trend: 'up' }\n];\n\nconst mockChartData: ChartDataPoint[] = [\n  { date: '2024-01-01', revenue: 12000, users: 450, orders: 230 },\n  { date: '2024-01-02', revenue: 15000, users: 520, orders: 280 },\n  { date: '2024-01-03', revenue: 13500, users: 490, orders: 250 },\n  { date: '2024-01-04', revenue: 18000, users: 610, orders: 320 },\n  { date: '2024-01-05', revenue: 16500, users: 580, orders: 295 },\n  { date: '2024-01-06', revenue: 20000, users: 680, orders: 350 },\n  { date: '2024-01-07', revenue: 22000, users: 720, orders: 380 }\n];\n\nconst mockTableData: TableRow[] = [\n  { id: '1', product: 'Premium Plan', sales: 234, revenue: 23400, status: 'active' },\n  { id: '2', product: 'Basic Plan', sales: 567, revenue: 11340, status: 'active' },\n  { id: '3', product: 'Enterprise Plan', sales: 89, revenue: 44500, status: 'active' },\n  { id: '4', product: 'Starter Plan', sales: 432, revenue: 4320, status: 'pending' },\n  { id: '5', product: 'Pro Plan', sales: 156, revenue: 15600, status: 'inactive' }\n];\ninterface Alert {\n  id: string;\n  severity: 'error' | 'warning' | 'info';\n  title: string;\n  message: string;\n  timestamp: string;\n}\n\nconst mockAlerts: Alert[] = [\n  {\n    id: '1',\n    severity: 'error',\n    title: 'Server Error',\n    message: 'Failed to sync data with backup server',\n    timestamp: '2 min ago'\n  },\n  {\n    id: '2',\n    severity: 'warning',\n    title: 'High Traffic',\n    message: 'Server load at 85% capacity',\n    timestamp: '15 min ago'\n  },\n  {\n    id: '3',\n    severity: 'info',\n    title: 'Update Available',\n    message: 'New dashboard features are ready',\n    timestamp: '1 hour ago'\n  },\n  {\n    id: '4',\n    severity: 'warning',\n    title: 'Low Inventory',\n    message: 'Premium Plan stock below threshold',\n    timestamp: '2 hours ago'\n  }\n];\n\nconst mockQuickStats = [\n  { \n    id: '1', \n    label: 'Avg Order Value', \n    value: '$142', \n    change: 15.3, \n    trend: 'up' as const,\n    icon: DollarSign,\n    sparklineData: [120, 135, 128, 145, 138, 152, 142]\n  },\n  { \n    id: '2', \n    label: 'Customer Retention', \n    value: '87%', \n    change: 3.2, \n    trend: 'up' as const,\n    icon: Users,\n    sparklineData: [82, 83, 85, 84, 86, 85, 87]\n  },\n  { \n    id: '3', \n    label: 'Cart Abandonment', \n    value: '23%', \n    change: -5.1, \n    trend: 'down' as const,\n    icon: ShoppingCart,\n    sparklineData: [28, 27, 26, 25, 24, 24, 23]\n  },\n  { \n    id: '4', \n    label: 'Goal Completion', \n    value: '94%', \n    change: 8.7, \n    trend: 'up' as const,\n    icon: Target,\n    sparklineData: [85, 87, 89, 90, 91, 93, 94]\n  }\n];\n\nconst Sparkline = ({ data, trend, isDarkMode }: { data: number[], trend: 'up' | 'down', isDarkMode: boolean }) => {\n  const max = Math.max(...data);\n  const min = Math.min(...data);\n  const range = max - min || 1;\n  \n  const points = data.map((value, index) => {\n    const x = (index / (data.length - 1)) * 100;\n    const y = 100 - ((value - min) / range) * 100;\n    return `${x},${y}`;\n  }).join(' ');\n\n  const pathD = `M ${points.split(' ').map((point, i) => {\n    const [x, y] = point.split(',');\n    return i === 0 ? `${x} ${y}` : `L ${x} ${y}`;\n  }).join(' ')}`;\n\n  return (\n    <svg className=\"w-full h-12\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"none\">\n      <motion.path\n        d={pathD}\n        fill=\"none\"\n        stroke={trend === 'up' ? (isDarkMode ? '#10b981' : '#059669') : (isDarkMode ? '#ef4444' : '#dc2626')}\n        strokeWidth=\"2\"\n        initial={{ pathLength: 0, opacity: 0 }}\n        animate={{ pathLength: 1, opacity: 1 }}\n        transition={{ duration: 1, ease: \"easeInOut\" }}\n      />\n    </svg>\n  );\n};\ninterface ActivityItem {\n  id: string;\n  type: 'sale' | 'user' | 'order' | 'payment';\n  message: string;\n  timestamp: string;\n  icon: any;\n  color: string;\n}\n\nconst mockActivityData: ActivityItem[] = [\n  {\n    id: '1',\n    type: 'sale',\n    message: 'New sale: Premium Plan',\n    timestamp: '2 minutes ago',\n    icon: TrendingUp,\n    color: 'text-green-500'\n  },\n  {\n    id: '2',\n    type: 'user',\n    message: 'New user registered',\n    timestamp: '5 minutes ago',\n    icon: UserPlus,\n    color: 'text-blue-500'\n  },\n  {\n    id: '3',\n    type: 'order',\n    message: 'Order #1234 completed',\n    timestamp: '12 minutes ago',\n    icon: ShoppingCart,\n    color: 'text-purple-500'\n  },\n  {\n    id: '4',\n    type: 'payment',\n    message: 'Payment received: $450',\n    timestamp: '18 minutes ago',\n    icon: CreditCard,\n    color: 'text-emerald-500'\n  },\n  {\n    id: '5',\n    type: 'order',\n    message: 'New order placed',\n    timestamp: '25 minutes ago',\n    icon: Package,\n    color: 'text-orange-500'\n  },\n  {\n    id: '6',\n    type: 'sale',\n    message: 'Enterprise Plan upgraded',\n    timestamp: '32 minutes ago',\n    icon: TrendingUp,\n    color: 'text-green-500'\n  }\n];\n\nconst RevenueChart = ({ data, isDarkMode }: { data: ChartDataPoint[], isDarkMode: boolean }) => {\n  const [hoveredPoint, setHoveredPoint] = useState<number | null>(null);\n  \n  const maxRevenue = Math.max(...data.map(d => d.revenue));\n  const minRevenue = Math.min(...data.map(d => d.revenue));\n  const revenueRange = maxRevenue - minRevenue;\n  \n  const chartWidth = 100;\n  const chartHeight = 100;\n  const padding = 10;\n  \n  const points = data.map((point, index) => {\n    const x = padding + (index / (data.length - 1)) * (chartWidth - 2 * padding);\n    const y = chartHeight - padding - ((point.revenue - minRevenue) / revenueRange) * (chartHeight - 2 * padding);\n    return { x, y, ...point };\n  });\n  \n  const pathData = points.map((p, i) => `${i === 0 ? 'M' : 'L'} ${p.x} ${p.y}`).join(' ');\n  \n  const areaPath = `${pathData} L ${points[points.length - 1].x} ${chartHeight - padding} L ${points[0].x} ${chartHeight - padding} Z`;\n  \n  return (\n    <div className=\"relative w-full h-64 md:h-80\">\n      <svg\n        viewBox={`0 0 ${chartWidth} ${chartHeight}`}\n        className=\"w-full h-full\"\n        preserveAspectRatio=\"none\"\n      >\n        <defs>\n          <linearGradient id=\"revenueGradient\" x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\">\n            <stop offset=\"0%\" stopColor={isDarkMode ? \"#3b82f6\" : \"#2563eb\"} stopOpacity=\"0.3\" />\n            <stop offset=\"100%\" stopColor={isDarkMode ? \"#3b82f6\" : \"#2563eb\"} stopOpacity=\"0.05\" />\n          </linearGradient>\n        </defs>\n        \n        <motion.path\n          d={areaPath}\n          fill=\"url(#revenueGradient)\"\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ duration: 0.5 }}\n        />\n        \n        <motion.path\n          d={pathData}\n          fill=\"none\"\n          stroke={isDarkMode ? \"#3b82f6\" : \"#2563eb\"}\n          strokeWidth=\"0.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          initial={{ pathLength: 0 }}\n          animate={{ pathLength: 1 }}\n          transition={{ duration: 1, ease: \"easeInOut\" }}\n        />\n        \n        {points.map((point, index) => (\n          <g key={index}>\n            <motion.circle\n              cx={point.x}\n              cy={point.y}\n              r={hoveredPoint === index ? \"1.5\" : \"0.8\"}\n              fill={isDarkMode ? \"#3b82f6\" : \"#2563eb\"}\n              initial={{ scale: 0 }}\n              animate={{ scale: 1 }}\n              transition={{ delay: index * 0.1, duration: 0.3 }}\n              onMouseEnter={() => setHoveredPoint(index)}\n              onMouseLeave={() => setHoveredPoint(null)}\n              className=\"cursor-pointer transition-all\"\n              style={{ transformOrigin: `${point.x}px ${point.y}px` }}\n            />\n          </g>\n        ))}\n      </svg>\n      \n      {hoveredPoint !== null && (\n        <motion.div\n          initial={{ opacity: 0, y: 10 }}\n          animate={{ opacity: 1, y: 0 }}\n          className={`absolute top-4 left-1/2 transform -translate-x-1/2 ${\n            isDarkMode ? 'bg-gray-700 text-white' : 'bg-white text-gray-900'\n          } px-4 py-2 rounded-lg shadow-lg border ${\n            isDarkMode ? 'border-gray-600' : 'border-gray-200'\n          } z-10`}\n        >\n          <div className=\"text-xs font-medium mb-1\">\n            {new Date(points[hoveredPoint].date).toLocaleDateString('en-US', { \n              month: 'short', \n              day: 'numeric' \n            })}\n          </div>\n          <div className=\"text-lg font-bold\">\n            ${points[hoveredPoint].revenue.toLocaleString()}\n          </div>\n          <div className={`text-xs ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\n            {points[hoveredPoint].users} users \u2022 {points[hoveredPoint].orders} orders\n          </div>\n        </motion.div>\n      )}\n      \n      <div className={`flex justify-between mt-2 px-2 text-xs ${\n        isDarkMode ? 'text-gray-400' : 'text-gray-600'\n      }`}>\n        <span>{new Date(data[0].date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}</span>\n        <span>{new Date(data[data.length - 1].date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}</span>\n      </div>\n    </div>\n  );\n};\n\n\ntype SortField = 'product' | 'sales' | 'revenue' | 'status';\ntype SortDirection = 'asc' | 'desc';\n\nconst ITEMS_PER_PAGE = 3;\n\nconst QuickStats = ({ isDarkMode }: { isDarkMode: boolean }) => {\n  return (\n    <div className=\"space-y-4\">\n      {mockQuickStats.map((stat, index) => {\n        const Icon = stat.icon;\n        return (\n          <motion.div\n            key={stat.id}\n            initial={{ opacity: 0, x: -20 }}\n            animate={{ opacity: 1, x: 0 }}\n            transition={{ delay: index * 0.1 }}\n            className={`p-4 rounded-lg border ${\n              isDarkMode ? 'bg-gray-700/50 border-gray-600' : 'bg-white border-gray-200'\n            }`}\n          >\n            <div className=\"flex items-start justify-between mb-2\">\n              <div className=\"flex items-center gap-2\">\n                <div className={`p-2 rounded-lg ${\n                  isDarkMode ? 'bg-gray-600' : 'bg-gray-100'\n                }`}>\n                  <Icon className={`h-4 w-4 ${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`} />\n                </div>\n                <div>\n                  <p className={`text-xs ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\n                    {stat.label}\n                  </p>\n                  <p className={`text-lg font-bold ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>\n                    {stat.value}\n                  </p>\n                </div>\n              </div>\n              <div className={`flex items-center gap-1 text-xs font-medium ${\n                stat.trend === 'up' \n                  ? 'text-green-600 dark:text-green-400' \n                  : 'text-red-600 dark:text-red-400'\n              }`}>\n                {stat.trend === 'up' ? (\n                  <TrendingUp className=\"h-3 w-3\" />\n                ) : (\n                  <TrendingDown className=\"h-3 w-3\" />\n                )}\n                {Math.abs(stat.change)}%\n              </div>\n            </div>\n            <Sparkline data={stat.sparklineData} trend={stat.trend} isDarkMode={isDarkMode} />\n          </motion.div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default function AnalyticsDashboard() {\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const [metrics, setMetrics] = useState<MetricData[]>(mockMetrics);\n  const [chartData, setChartData] = useState<ChartDataPoint[]>(mockChartData);\n  const [tableData, setTableData] = useState<TableRow[]>(mockTableData);\n  const [isRefreshing, setIsRefreshing] = useState(false);\n  const [sortField, setSortField] = useState<SortField>('revenue');\n  const [sortDirection, setSortDirection] = useState<SortDirection>('desc');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [alerts, setAlerts] = useState<Alert[]>(mockAlerts);\n\n  const dismissAlert = useCallback((alertId: string) => {\n    setAlerts(prev => prev.filter(alert => alert.id !== alertId));\n  }, []);\n  // Prepare pie chart data from table data\n  const pieChartData = tableData.map(item => ({\n    name: item.product,\n    value: item.sales,\n    revenue: item.revenue\n  }));\n\n  const COLORS = ['#3b82f6', '#8b5cf6', '#ec4899', '#f59e0b', '#10b981'];\n\n  const toggleDarkMode = useCallback(() => {\n    setIsDarkMode(prev => !prev);\n  }, []);\n\n  const handleSort = useCallback((field: SortField) => {\n    if (sortField === field) {\n      setSortDirection(prev => prev === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortField(field);\n      setSortDirection('desc');\n    }\n    setCurrentPage(1);\n  }, [sortField]);\n\n  const sortedTableData = useCallback(() => {\n    const sorted = [...tableData].sort((a, b) => {\n      let aValue = a[sortField];\n      let bValue = b[sortField];\n\n      if (typeof aValue === 'string') {\n        aValue = aValue.toLowerCase();\n        bValue = (bValue as string).toLowerCase();\n      }\n\n      if (aValue < bValue) return sortDirection === 'asc' ? -1 : 1;\n      if (aValue > bValue) return sortDirection === 'asc' ? 1 : -1;\n      return 0;\n    });\n    return sorted;\n  }, [tableData, sortField, sortDirection]);\n\n  const paginatedData = useCallback(() => {\n    const sorted = sortedTableData();\n    const startIndex = (currentPage - 1) * ITEMS_PER_PAGE;\n    const endIndex = startIndex + ITEMS_PER_PAGE;\n    return sorted.slice(startIndex, endIndex);\n  }, [sortedTableData, currentPage]);\n\n  const totalPages = Math.ceil(tableData.length / ITEMS_PER_PAGE);\n\n  const getStatusBadgeVariant = (status: TableRow['status']) => {\n    switch (status) {\n      case 'active':\n        return 'default';\n      case 'pending':\n        return 'secondary';\n      case 'inactive':\n        return 'outline';\n      default:\n        return 'default';\n    }\n  };\n\n  const [hoveredBar, setHoveredBar] = useState<{ metric: string; value: number; date: string } | null>(null);\n  const [tooltipPosition, setTooltipPosition] = useState({ x: 0, y: 0 });\n\n  const handleBarHover = useCallback((metric: string, value: number, date: string, event: React.MouseEvent) => {\n    setHoveredBar({ metric, value, date });\n    setTooltipPosition({ x: event.clientX, y: event.clientY });\n  }, []);\n\n  const handleBarLeave = useCallback(() => {\n    setHoveredBar(null);\n  }, []);\n\n  const getMaxValue = useCallback(() => {\n    const allValues = chartData.flatMap(d => [d.revenue, d.users * 10, d.orders * 10]);\n    return Math.max(...allValues);\n  }, [chartData]);\n\n  const handleRefresh = useCallback(() => {\n    setIsRefreshing(true);\n    \n    setTimeout(() => {\n      // Generate updated mock metrics with random variations\n      const updatedMetrics = mockMetrics.map(metric => ({\n        ...metric,\n        value: metric.value + Math.floor(Math.random() * 200 - 100),\n        change: parseFloat((Math.random() * 20 - 5).toFixed(1)),\n        trend: Math.random() > 0.5 ? 'up' : 'down' as 'up' | 'down'\n      }));\n\n      // Generate updated chart data with random variations\n      const updatedChartData = mockChartData.map(point => ({\n        ...point,\n        revenue: point.revenue + Math.floor(Math.random() * 4000 - 2000),\n        users: point.users + Math.floor(Math.random() * 100 - 50),\n        orders: point.orders + Math.floor(Math.random() * 50 - 25)\n      }));\n\n      // Generate updated table data with random variations\n      const updatedTableData = mockTableData.map(row => ({\n        ...row,\n        sales: row.sales + Math.floor(Math.random() * 40 - 20),\n        revenue: row.revenue + Math.floor(Math.random() * 2000 - 1000)\n      }));\n\n      setMetrics(updatedMetrics);\n      setChartData(updatedChartData);\n      setTableData(updatedTableData);\n      setIsRefreshing(false);\n    }, 1500);\n  }, []);\n\n  return (\n    <div className={`min-h-screen ${isDarkMode ? 'dark bg-gray-900' : 'bg-gray-50'}`}>\n      <div className=\"container mx-auto p-4 md:p-6 lg:p-8\">\n        <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center gap-4 mb-8\">\n          <div>\n            <h1 className={`text-3xl md:text-4xl font-bold ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>\n              Analytics Dashboard\n            </h1>\n            <p className={`mt-2 ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>\n              Real-time insights and performance metrics\n            </p>\n          </div>\n          \n          <div className=\"flex gap-2\">\n            <Button\n              variant=\"outline\"\n              size=\"icon\"\n              onClick={toggleDarkMode}\n              className={isDarkMode ? 'border-gray-700' : ''}\n            >\n              {isDarkMode ? <Sun className=\"h-5 w-5\" /> : <Moon className=\"h-5 w-5\" />}\n            </Button>\n            \n            <Button\n              variant=\"outline\"\n              onClick={handleRefresh}\n              disabled={isRefreshing}\n              className={isDarkMode ? 'border-gray-700' : ''}\n            >\n              <RefreshCw className={`h-4 w-4 mr-2 ${isRefreshing ? 'animate-spin' : ''}`} />\n              Refresh\n            </Button>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 md:gap-6 mb-8\">\n          {metrics.map((metric, index) => {\n            const Icon = metric.id === '1' ? DollarSign : \n                        metric.id === '2' ? Users : \n                        metric.id === '3' ? ShoppingCart : Target;\n            \n            const TrendIcon = metric.trend === 'up' ? TrendingUp : TrendingDown;\n            const trendColor = metric.trend === 'up' ? 'text-green-500' : 'text-red-500';\n            const trendBgColor = metric.trend === 'up' ? 'bg-green-50 dark:bg-green-900/20' : 'bg-red-50 dark:bg-red-900/20';\n\n            return (\n              <motion.div\n                key={metric.id}\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.4, delay: index * 0.1 }}\n              >\n                <Card className={isDarkMode ? 'bg-gray-800 border-gray-700' : ''}>\n                  <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                    <CardTitle className={`text-sm font-medium ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>\n                      {metric.label}\n                    </CardTitle>\n                    <div className={`p-2 rounded-lg ${isDarkMode ? 'bg-gray-700' : 'bg-gray-100'}`}>\n                      <Icon className={`h-4 w-4 ${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`} />\n                    </div>\n                  </CardHeader>\n                  <CardContent>\n                    <div className={`text-2xl font-bold ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>\n                      {metric.id === '1' || metric.id === '3' ? \n                        metric.value.toLocaleString() : \n                        metric.id === '4' ? \n                        `${metric.value}%` : \n                        metric.value.toLocaleString()\n                      }\n                    </div>\n                    <div className=\"flex items-center mt-2\">\n                      <div className={`flex items-center gap-1 px-2 py-1 rounded-full ${trendBgColor}`}>\n                        <TrendIcon className={`h-3 w-3 ${trendColor}`} />\n                        <span className={`text-xs font-medium ${trendColor}`}>\n                          {Math.abs(metric.change)}%\n                        </span>\n                      </div>\n                      <span className={`text-xs ml-2 ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\n                        vs last period\n                      </span>\n                    </div>\n                  </CardContent>\n                </Card>\n              </motion.div>\n            );\n          })}\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4 md:gap-6 mb-8\">\n          <Card className={isDarkMode ? 'bg-gray-800 border-gray-700' : ''}>\n            <CardHeader>\n              <CardTitle className={isDarkMode ? 'text-white' : ''}>Revenue Overview</CardTitle>\n              <CardDescription className={isDarkMode ? 'text-gray-400' : ''}>\n                Daily revenue trends\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <RevenueChart data={chartData} isDarkMode={isDarkMode} />\n            </CardContent>\n          </Card>\n\n          <Card className={isDarkMode ? 'bg-gray-800 border-gray-700' : ''}>\n            <CardHeader>\n              <CardTitle className={isDarkMode ? 'text-white' : ''}>User Growth</CardTitle>\n              <CardDescription className={isDarkMode ? 'text-gray-400' : ''}>\n                Active users over time\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <UserAreaChart data={chartData} isDarkMode={isDarkMode} />\n            </CardContent>\n          </Card>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-4 md:gap-6 mb-8\">\n          <Card className={isDarkMode ? 'bg-gray-800 border-gray-700' : ''}>\n            <CardHeader>\n              <CardTitle className={isDarkMode ? 'text-white' : ''}>Orders Distribution</CardTitle>\n              <CardDescription className={isDarkMode ? 'text-gray-400' : ''}>\n                By product category\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"h-[300px] w-full\">\n                <ResponsiveContainer width=\"100%\" height=\"100%\">\n                  <PieChart>\n                    <Pie\n                      data={pieChartData}\n                      cx=\"50%\"\n                      cy=\"50%\"\n                      labelLine={false}\n                      label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}\n                      outerRadius={80}\n                      fill=\"#8884d8\"\n                      dataKey=\"value\"\n                    >\n                      {pieChartData.map((entry, index) => (\n                        <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                      ))}\n                    </Pie>\n                    <Tooltip\n                      contentStyle={{\n                        backgroundColor: isDarkMode ? '#1f2937' : '#ffffff',\n                        border: isDarkMode ? '1px solid #374151' : '1px solid #e5e7eb',\n                        borderRadius: '6px',\n                        color: isDarkMode ? '#ffffff' : '#000000'\n                      }}\n                      formatter={(value: number, name: string, props: any) => [\n                        `${value} orders`,\n                        props.payload.name\n                      ]}\n                    />\n                    <Legend\n                      verticalAlign=\"bottom\"\n                      height={36}\n                      iconType=\"circle\"\n                      wrapperStyle={{\n                        color: isDarkMode ? '#9ca3af' : '#6b7280'\n                      }}\n                    />\n                  </PieChart>\n                </ResponsiveContainer>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card className={`lg:col-span-2 ${isDarkMode ? 'bg-gray-800 border-gray-700' : ''}`}>\n            <CardHeader>\n              <CardTitle className={isDarkMode ? 'text-white' : ''}>Performance Metrics</CardTitle>\n              <CardDescription className={isDarkMode ? 'text-gray-400' : ''}>\n                Combined view of key indicators\n              </CardDescription>\n            </CardHeader>\n            <CardContent>\n              <div className=\"relative h-80\">\n                {/* Chart Container */}\n                <div className=\"flex items-end justify-between h-full gap-2 px-4\">\n                  {chartData.map((dataPoint, index) => {\n                    const maxValue = getMaxValue();\n                    const revenueHeight = (dataPoint.revenue / maxValue) * 100;\n                    const usersHeight = ((dataPoint.users * 10) / maxValue) * 100;\n                    const ordersHeight = ((dataPoint.orders * 10) / maxValue) * 100;\n\n                    return (\n                      <div key={dataPoint.date} className=\"flex-1 flex items-end justify-center gap-1 h-full\">\n                        <div className=\"flex items-end gap-0.5 h-full\">\n                          {/* Revenue Bar */}\n                          <motion.div\n                            initial={{ height: 0 }}\n                            animate={{ height: `${revenueHeight}%` }}\n                            transition={{ duration: 0.5, delay: index * 0.1 }}\n                            className=\"w-6 bg-blue-500 rounded-t cursor-pointer hover:bg-blue-600 transition-colors relative\"\n                            onMouseEnter={(e) => handleBarHover('Revenue', dataPoint.revenue, dataPoint.date, e)}\n                            onMouseMove={(e) => setTooltipPosition({ x: e.clientX, y: e.clientY })}\n                            onMouseLeave={handleBarLeave}\n                          />\n                          \n                          {/* Users Bar */}\n                          <motion.div\n                            initial={{ height: 0 }}\n                            animate={{ height: `${usersHeight}%` }}\n                            transition={{ duration: 0.5, delay: index * 0.1 + 0.05 }}\n                            className=\"w-6 bg-green-500 rounded-t cursor-pointer hover:bg-green-600 transition-colors relative\"\n                            onMouseEnter={(e) => handleBarHover('Users', dataPoint.users, dataPoint.date, e)}\n                            onMouseMove={(e) => setTooltipPosition({ x: e.clientX, y: e.clientY })}\n                            onMouseLeave={handleBarLeave}\n                          />\n                          \n                          {/* Orders Bar */}\n                          <motion.div\n                            initial={{ height: 0 }}\n                            animate={{ height: `${ordersHeight}%` }}\n                            transition={{ duration: 0.5, delay: index * 0.1 + 0.1 }}\n                            className=\"w-6 bg-purple-500 rounded-t cursor-pointer hover:bg-purple-600 transition-colors relative\"\n                            onMouseEnter={(e) => handleBarHover('Orders', dataPoint.orders, dataPoint.date, e)}\n                            onMouseMove={(e) => setTooltipPosition({ x: e.clientX, y: e.clientY })}\n                            onMouseLeave={handleBarLeave}\n                          />\n                        </div>\n                        \n                        {/* Date Label */}\n                        <div className=\"absolute bottom-0 left-0 right-0 flex justify-between px-4 -mb-6\">\n                          <span className={`text-xs ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>\n                            {new Date(dataPoint.date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' })}\n                          </span>\n                        </div>\n                      </div>\n                    );\n                  })}\n                </div>\n\n                {/* Y-axis Labels */}\n                <div className=\"absolute left-0 top-0 bottom-0 flex flex-col justify-between text-xs pr-2 -ml-12\">\n                  {[100, 75, 50, 25, 0].map((percent) => (\n                    <span key={percent} className={isDarkMode ? 'text-gray-400' : 'text-gray-600'}>\n                      {Math.round((getMaxValue() * percent) / 100).toLocaleString()}\n                    </span>\n                  ))}\n                </div>\n\n                {/* Tooltip */}\n                {hoveredBar && (\n                  <motion.div\n                    initial={{ opacity: 0, scale: 0.9 }}\n                    animate={{ opacity: 1, scale: 1 }}\n                    className={`fixed z-50 px-3 py-2 rounded-lg shadow-lg pointer-events-none ${\n                      isDarkMode ? 'bg-gray-700 text-white' : 'bg-white text-gray-900'\n                    }`}\n                    style={{\n                      left: tooltipPosition.x + 10,\n                      top: tooltipPosition.y - 40,\n                    }}\n                  >\n                    <div className=\"text-sm font-semibold\">{hoveredBar.metric}</div>\n                    <div className=\"text-xs\">\n                      {new Date(hoveredBar.date).toLocaleDateString('en-US', { \n                        month: 'short', \n                        day: 'numeric',\n                        year: 'numeric'\n                      })}\n                    </div>\n                    <div className=\"text-sm font-bold mt-1\">\n                      {hoveredBar.metric === 'Revenue' \n                        ? `$${hoveredBar.value.toLocaleString()}`\n                        : hoveredBar.value.toLocaleString()}\n                    </div>\n                  </motion.div>\n                )}\n\n                {/* Legend */}\n                <div className=\"flex justify-center gap-6 mt-8\">\n                  <div className=\"flex items-center gap-2\">\n                    <div className=\"w-4 h-4 bg-blue-500 rounded\"></div>\n                    <span className={`text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-700'}`}>\n                      Revenue\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <div className=\"w-4 h-4 bg-green-500 rounded\"></div>\n                    <span className={`text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-700'}`}>\n                      Users\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <div className=\"w-4 h-4 bg-purple-500 rounded\"></div>\n                    <span className={`text-sm ${isDarkMode ? 'text-gray-300' : 'text-gray-700'}`}>\n                      Orders\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        <Card className={isDarkMode ? 'bg-gray-800 border-gray-700' : ''}>\n          <CardHeader>\n            <CardTitle className={isDarkMode ? 'text-white' : ''}>Top Products</CardTitle>\n            <CardDescription className={isDarkMode ? 'text-gray-400' : ''}>\n              Best performing products by revenue\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              {/* Desktop Table */}\n              <div className=\"hidden md:block overflow-x-auto\">\n                <Table>\n                  <TableHeader>\n                    <TableRow className={isDarkMode ? 'border-gray-700' : ''}>\n                      <TableHead className={isDarkMode ? 'text-gray-300' : ''}>\n                        <Button\n                          variant=\"ghost\"\n                          onClick={() => handleSort('product')}\n                          className=\"flex items-center gap-1 hover:bg-transparent p-0\"\n                        >\n                          Product\n                          <ArrowUpDown className=\"h-4 w-4\" />\n                        </Button>\n                      </TableHead>\n                      <TableHead className={isDarkMode ? 'text-gray-300' : ''}>\n                        <Button\n                          variant=\"ghost\"\n                          onClick={() => handleSort('sales')}\n                          className=\"flex items-center gap-1 hover:bg-transparent p-0\"\n                        >\n                          Sales\n                          <ArrowUpDown className=\"h-4 w-4\" />\n                        </Button>\n                      </TableHead>\n                      <TableHead className={isDarkMode ? 'text-gray-300' : ''}>\n                        <Button\n                          variant=\"ghost\"\n                          onClick={() => handleSort('revenue')}\n                          className=\"flex items-center gap-1 hover:bg-transparent p-0\"\n                        >\n                          Revenue\n                          <ArrowUpDown className=\"h-4 w-4\" />\n                        </Button>\n                      </TableHead>\n                      <TableHead className={isDarkMode ? 'text-gray-300' : ''}>\n                        <Button\n                          variant=\"ghost\"\n                          onClick={() => handleSort('status')}\n                          className=\"flex items-center gap-1 hover:bg-transparent p-0\"\n                        >\n                          Status\n                          <ArrowUpDown className=\"h-4 w-4\" />\n                        </Button>\n                      </TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {paginatedData().map((row) => (\n                      <TableRow\n                        key={row.id}\n                        className={isDarkMode ? 'border-gray-700 hover:bg-gray-700/50' : 'hover:bg-gray-50'}\n                      >\n                        <TableCell className={`font-medium ${isDarkMode ? 'text-white' : ''}`}>\n                          {row.product}\n                        </TableCell>\n                        <TableCell className={isDarkMode ? 'text-gray-300' : ''}>\n                          {row.sales.toLocaleString()}\n                        </TableCell>\n                        <TableCell className={isDarkMode ? 'text-gray-300' : ''}>\n                          ${row.revenue.toLocaleString()}\n                        </TableCell>\n                        <TableCell>\n                          <Badge\n                            variant={getStatusBadgeVariant(row.status)}\n                            className=\"capitalize\"\n                          >\n                            {row.status}\n                          </Badge>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </div>\n\n              {/* Mobile Cards */}\n              <div className=\"md:hidden space-y-4\">\n                {paginatedData().map((row) => (\n                  <div\n                    key={row.id}\n                    className={`p-4 rounded-lg border ${\n                      isDarkMode ? 'bg-gray-700 border-gray-600' : 'bg-white border-gray-200'\n                    }`}\n                  >\n                    <div className=\"flex justify-between items-start mb-3\">\n                      <h3 className={`font-semibold ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>\n                        {row.product}\n                      </h3>\n                      <Badge\n                        variant={getStatusBadgeVariant(row.status)}\n                        className=\"capitalize\"\n                      >\n                        {row.status}\n                      </Badge>\n                    </div>\n                    <div className=\"grid grid-cols-2 gap-2\">\n                      <div>\n                        <p className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\n                          Sales\n                        </p>\n                        <p className={`font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-900'}`}>\n                          {row.sales.toLocaleString()}\n                        </p>\n                      </div>\n                      <div>\n                        <p className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\n                          Revenue\n                        </p>\n                        <p className={`font-medium ${isDarkMode ? 'text-gray-200' : 'text-gray-900'}`}>\n                          ${row.revenue.toLocaleString()}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n\n              {/* Pagination */}\n              <div className=\"flex items-center justify-between pt-4\">\n                <p className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>\n                  Showing {((currentPage - 1) * ITEMS_PER_PAGE) + 1} to{' '}\n                  {Math.min(currentPage * ITEMS_PER_PAGE, tableData.length)} of{' '}\n                  {tableData.length} products\n                </p>\n                <div className=\"flex gap-2\">\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => setCurrentPage(prev => Math.max(1, prev - 1))}\n                    disabled={currentPage === 1}\n                    className={isDarkMode ? 'border-gray-700' : ''}\n                  >\n                    <ChevronLeft className=\"h-4 w-4\" />\n                  </Button>\n                  <div className=\"flex items-center gap-1\">\n                    {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (\n                      <Button\n                        key={page}\n                        variant={currentPage === page ? 'default' : 'outline'}\n                        size=\"sm\"\n                        onClick={() => setCurrentPage(page)}\n                        className={`w-8 ${isDarkMode && currentPage !== page ? 'border-gray-700' : ''}`}\n                      >\n                        {page}\n                      </Button>\n                    ))}\n                  </div>\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => setCurrentPage(prev => Math.min(totalPages, prev + 1))}\n                    disabled={currentPage === totalPages}\n                    className={isDarkMode ? 'border-gray-700' : ''}\n                  >\n                    <ChevronRight className=\"h-4 w-4\" />\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 md:gap-6 mt-8\">\n          <Card className={isDarkMode ? 'bg-gray-800 border-gray-700' : ''}>\n            <CardHeader>\n              <CardTitle className={isDarkMode ? 'text-white' : ''}>Recent Activity</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {mockActivityData.map((activity, index) => {\n                  const Icon = activity.icon;\n                  return (\n                    <motion.div\n                      key={activity.id}\n                      initial={{ opacity: 0, x: -20 }}\n                      animate={{ opacity: 1, x: 0 }}\n                      transition={{ delay: index * 0.1, duration: 0.3 }}\n                      className=\"flex items-start gap-3\"\n                    >\n                      <div className={`p-2 rounded-full ${isDarkMode ? 'bg-gray-700' : 'bg-gray-100'} flex-shrink-0`}>\n                        <Icon className={`h-4 w-4 ${activity.color}`} />\n                      </div>\n                      <div className=\"flex-1 min-w-0\">\n                        <p className={`text-sm font-medium ${isDarkMode ? 'text-white' : 'text-gray-900'}`}>\n                          {activity.message}\n                        </p>\n                        <p className={`text-xs mt-1 ${isDarkMode ? 'text-gray-500' : 'text-gray-500'}`}>\n                          {activity.timestamp}\n                        </p>\n                      </div>\n                      <div className={`h-full w-px ${isDarkMode ? 'bg-gray-700' : 'bg-gray-200'} absolute left-[22px] top-12 -z-10`} \n                           style={{ height: index === mockActivityData.length - 1 ? '0' : '100%' }} />\n                    </motion.div>\n                  );\n                })}\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card className={isDarkMode ? 'bg-gray-800 border-gray-700' : ''}>\n            <CardHeader>\n              <CardTitle className={isDarkMode ? 'text-white' : ''}>Quick Stats</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <QuickStats isDarkMode={isDarkMode} />\n            </CardContent>\n          </Card>\n\n          <Card className={isDarkMode ? 'bg-gray-800 border-gray-700' : ''}>\n            <CardHeader>\n              <CardTitle className={isDarkMode ? 'text-white' : ''}>Alerts</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-3\">\n                {alerts.length === 0 ? (\n                  <div className={`text-center py-8 ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\n                    <Info className=\"h-8 w-8 mx-auto mb-2 opacity-50\" />\n                    <p className=\"text-sm\">No active alerts</p>\n                  </div>\n                ) : (\n                  alerts.map((alert, index) => (\n                    <motion.div\n                      key={alert.id}\n                      initial={{ opacity: 0, x: -20 }}\n                      animate={{ opacity: 1, x: 0 }}\n                      exit={{ opacity: 0, x: 20 }}\n                      transition={{ delay: index * 0.1 }}\n                      className={`relative p-4 rounded-lg border ${\n                        isDarkMode ? 'bg-gray-700/50 border-gray-600' : 'bg-white border-gray-200'\n                      } ${\n                        alert.severity === 'error'\n                          ? 'border-l-4 border-l-red-500'\n                          : alert.severity === 'warning'\n                          ? 'border-l-4 border-l-yellow-500'\n                          : 'border-l-4 border-l-blue-500'\n                      }`}\n                    >\n                      <div className=\"flex items-start gap-3\">\n                        <div className=\"flex-shrink-0 mt-0.5\">\n                          {alert.severity === 'error' && (\n                            <AlertCircle className=\"h-5 w-5 text-red-500\" />\n                          )}\n                          {alert.severity === 'warning' && (\n                            <AlertTriangle className=\"h-5 w-5 text-yellow-500\" />\n                          )}\n                          {alert.severity === 'info' && (\n                            <Info className=\"h-5 w-5 text-blue-500\" />\n                          )}\n                        </div>\n                        \n                        <div className=\"flex-1 min-w-0\">\n                          <div className=\"flex items-start justify-between gap-2\">\n                            <div className=\"flex-1\">\n                              <div className=\"flex items-center gap-2 mb-1\">\n                                <h4 className={`text-sm font-semibold ${\n                                  isDarkMode ? 'text-white' : 'text-gray-900'\n                                }`}>\n                                  {alert.title}\n                                </h4>\n                                <Badge\n                                  variant={\n                                    alert.severity === 'error'\n                                      ? 'destructive'\n                                      : alert.severity === 'warning'\n                                      ? 'default'\n                                      : 'secondary'\n                                  }\n                                  className=\"text-xs\"\n                                >\n                                  {alert.severity}\n                                </Badge>\n                              </div>\n                              <p className={`text-sm ${\n                                isDarkMode ? 'text-gray-300' : 'text-gray-600'\n                              }`}>\n                                {alert.message}\n                              </p>\n                              <p className={`text-xs mt-1 ${\n                                isDarkMode ? 'text-gray-500' : 'text-gray-400'\n                              }`}>\n                                {alert.timestamp}\n                              </p>\n                            </div>\n                            \n                            <Button\n                              variant=\"ghost\"\n                              size=\"icon\"\n                              className=\"h-6 w-6 flex-shrink-0\"\n                              onClick={() => dismissAlert(alert.id)}\n                            >\n                              <X className=\"h-4 w-4\" />\n                            </Button>\n                          </div>\n                        </div>\n                      </div>\n                    </motion.div>\n                  ))\n                )}\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    </div>\n  );\n}",
      "error": null,
      "overall_score": 57,
      "code_quality_score": 12,
      "architecture_score": 14,
      "performance_score": 15,
      "accessibility_score": 16,
      "metadata": {
        "document_id": "eval_room_bec48bdddaf6",
        "prompt_category": "intermediate",
        "prompt_complexity": 6.0
      }
    },
    {
      "prompt_id": "pomodoro_timer",
      "prompt_name": "Pomodoro Timer",
      "mode": "parallel",
      "run_number": 30,
      "timestamp": "2025-10-14T11:18:53.022940",
      "response_time": 219.55987524986267,
      "total_tokens": null,
      "response_content": "import { useState, useCallback, useEffect, useRef } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Play, Pause, RotateCcw, Settings } from 'lucide-react';\nimport { motion, AnimatePresence } from 'framer-motion';\n\ninterface TimerMode {\n  type: 'work' | 'shortBreak' | 'longBreak';\n  duration: number;\n  label: string;\n}\n\ninterface TimerSettings {\n  workDuration: number;\n  shortBreakDuration: number;\n  longBreakDuration: number;\n  longBreakInterval: number;\n}\n\ninterface Particle {\n  id: number;\n  x: number;\n  y: number;\n  size: number;\n  duration: number;\n  delay: number;\n}\n\nconst defaultSettings: TimerSettings = {\n  workDuration: 25,\n  shortBreakDuration: 5,\n  longBreakDuration: 15,\n  longBreakInterval: 4\n};\n\nconst timerModes: Record<string, { colors: string; gradient: string }> = {\n  work: {\n    colors: 'from-rose-500 via-pink-500 to-purple-500',\n    gradient: 'bg-gradient-to-br from-rose-500/20 via-pink-500/20 to-purple-500/20'\n  },\n  shortBreak: {\n    colors: 'from-cyan-500 via-blue-500 to-indigo-500',\n    gradient: 'bg-gradient-to-br from-cyan-500/20 via-blue-500/20 to-indigo-500/20'\n  },\n  longBreak: {\n    colors: 'from-emerald-500 via-teal-500 to-cyan-500',\n    gradient: 'bg-gradient-to-br from-emerald-500/20 via-teal-500/20 to-cyan-500/20'\n  }\n};\n\nexport default function PomodoroTimer() {\n  const [settings, setSettings] = useState<TimerSettings>(defaultSettings);\n  const [currentMode, setCurrentMode] = useState<'work' | 'shortBreak' | 'longBreak'>('work');\n  const [timeLeft, setTimeLeft] = useState(settings.workDuration * 60);\n  const [isRunning, setIsRunning] = useState(false);\n  const [completedPomodoros, setCompletedPomodoros] = useState(0);\n  const [showSettings, setShowSettings] = useState(false);\n  const [showCompletion, setShowCompletion] = useState(false);\n  const [particles, setParticles] = useState<Particle[]>([]);\n  \n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n  const audioRef = useRef<HTMLAudioElement | null>(null);\n\n  const totalTime = currentMode === 'work' \n    ? settings.workDuration * 60 \n    : currentMode === 'shortBreak'\n    ? settings.shortBreakDuration * 60\n    : settings.longBreakDuration * 60;\n\n  const progress = ((totalTime - timeLeft) / totalTime) * 100;\n\n  useEffect(() => {\n    const generatedParticles: Particle[] = Array.from({ length: 50 }, (_, i) => ({\n      id: i,\n      x: Math.random() * 100,\n      y: Math.random() * 100,\n      size: Math.random() * 4 + 2,\n      duration: Math.random() * 20 + 10,\n      delay: Math.random() * 5\n    }));\n    setParticles(generatedParticles);\n  }, []);\n  useEffect(() => {\n    if (isRunning && timeLeft > 0) {\n      intervalRef.current = setInterval(() => {\n        setTimeLeft((prev) => prev - 1);\n      }, 1000);\n    } else if (timeLeft === 0) {\n      setIsRunning(false);\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n        intervalRef.current = null;\n      }\n\n      // Trigger completion animation\n      triggerCompletion();\n\n      // Handle mode transitions\n      if (currentMode === 'work') {\n        const newCompletedCount = completedPomodoros + 1;\n        setCompletedPomodoros(newCompletedCount);\n        \n        // Switch to long break after completing the interval\n        if (newCompletedCount % settings.longBreakInterval === 0) {\n          setCurrentMode('longBreak');\n          setTimeLeft(settings.longBreakDuration * 60);\n        } else {\n          setCurrentMode('shortBreak');\n          setTimeLeft(settings.shortBreakDuration * 60);\n        }\n      } else {\n        // After break, switch back to work\n        setCurrentMode('work');\n        setTimeLeft(settings.workDuration * 60);\n      }\n    }\n\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [isRunning, timeLeft, currentMode, completedPomodoros, settings, triggerCompletion]);\n\n  useEffect(() => {\n    if (isRunning && timeLeft > 0) {\n      intervalRef.current = setInterval(() => {\n        setTimeLeft((prev) => {\n          if (prev <= 1) {\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } else if (timeLeft === 0) {\n      setIsRunning(false);\n      setShowCompletion(true);\n      \n      // Play completion sound\n      if (audioRef.current) {\n        audioRef.current.play().catch(() => {\n          // Silently handle if audio playback fails\n        });\n      }\n\n      // Auto-switch to next mode\n      setTimeout(() => {\n        setShowCompletion(false);\n        \n        if (currentMode === 'work') {\n          const newCompletedPomodoros = completedPomodoros + 1;\n          setCompletedPomodoros(newCompletedPomodoros);\n          \n          // Check if it's time for a long break\n          if (newCompletedPomodoros % settings.longBreakInterval === 0) {\n            setCurrentMode('longBreak');\n            setTimeLeft(settings.longBreakDuration * 60);\n          } else {\n            setCurrentMode('shortBreak');\n            setTimeLeft(settings.shortBreakDuration * 60);\n          }\n        } else {\n          // After any break, go back to work\n          setCurrentMode('work');\n          setTimeLeft(settings.workDuration * 60);\n        }\n      }, 2000);\n    }\n\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [isRunning, timeLeft, currentMode, completedPomodoros, settings]);\n\n  const handlePlayPause = useCallback(() => {\n    setIsRunning(!isRunning);\n  }, [isRunning]);\n\n  const handleReset = useCallback(() => {\n    setIsRunning(false);\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n    const duration = currentMode === 'work' \n      ? settings.workDuration * 60 \n      : currentMode === 'shortBreak'\n      ? settings.shortBreakDuration * 60\n      : settings.longBreakDuration * 60;\n    setTimeLeft(duration);\n  }, [currentMode, settings]);\n\n  const handleModeSwitch = useCallback((mode: 'work' | 'shortBreak' | 'longBreak') => {\n    setIsRunning(false);\n    setCurrentMode(mode);\n    const newDuration = mode === 'work' \n      ? settings.workDuration * 60 \n      : mode === 'shortBreak'\n      ? settings.shortBreakDuration * 60\n      : settings.longBreakDuration * 60;\n    setTimeLeft(newDuration);\n  }, [settings]);\n\n  const formatTime = useCallback((seconds: number): string => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  }, []);\n  const triggerCompletion = useCallback(() => {\n    setShowCompletion(true);\n    \n    // Play completion sound\n    if (audioRef.current) {\n      audioRef.current.play().catch(() => {\n        // Ignore audio play errors\n      });\n    }\n\n    // Hide completion animation after 4 seconds\n    setTimeout(() => {\n      setShowCompletion(false);\n    }, 4000);\n  }, []);\n\n  return (\n    <div className={`min-h-screen relative overflow-hidden transition-all duration-1000 ${timerModes[currentMode].gradient}`}>\n      <div className=\"absolute inset-0 overflow-hidden pointer-events-none\">\n        {particles.map((particle) => (\n          <motion.div\n            key={particle.id}\n            className=\"absolute rounded-full bg-white/30 backdrop-blur-sm\"\n            style={{\n              left: `${particle.x}%`,\n              top: `${particle.y}%`,\n              width: particle.size,\n              height: particle.size,\n            }}\n            animate={{\n              y: [0, -30, 0],\n              opacity: [0.2, 0.6, 0.2],\n              scale: [1, 1.2, 1],\n            }}\n            transition={{\n              duration: particle.duration,\n              delay: particle.delay,\n              repeat: Infinity,\n              ease: \"easeInOut\",\n            }}\n          />\n        ))}\n      </div>\n      \n      <div className=\"relative z-10 min-h-screen flex flex-col items-center justify-center p-8\">\n        <motion.div\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"w-full max-w-2xl\"\n        >\n          <div className=\"backdrop-blur-xl bg-white/10 rounded-3xl p-8 shadow-2xl border border-white/20\">\n            <div className=\"flex justify-between items-center mb-8\">\n              <h1 className=\"text-4xl font-bold text-white\">Pomodoro Timer</h1>\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                onClick={() => setShowSettings(!showSettings)}\n                className=\"text-white hover:bg-white/20\"\n              >\n                <Settings className=\"w-6 h-6\" />\n              </Button>\n            </div>\n\n            <div className=\"flex gap-2 mb-8\">\n              <Button\n                variant={currentMode === 'work' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('work')}\n                className={`flex-1 ${\n                  currentMode === 'work'\n                    ? 'bg-white text-rose-600 hover:bg-white/90'\n                    : 'text-white hover:bg-white/20'\n                }`}\n              >\n                Work\n              </Button>\n              <Button\n                variant={currentMode === 'shortBreak' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('shortBreak')}\n                className={`flex-1 ${\n                  currentMode === 'shortBreak'\n                    ? 'bg-white text-cyan-600 hover:bg-white/90'\n                    : 'text-white hover:bg-white/20'\n                }`}\n              >\n                Short Break\n              </Button>\n              <Button\n                variant={currentMode === 'longBreak' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('longBreak')}\n                className={`flex-1 ${\n                  currentMode === 'longBreak'\n                    ? 'bg-white text-emerald-600 hover:bg-white/90'\n                    : 'text-white hover:bg-white/20'\n                }`}\n              >\n                Long Break\n              </Button>\n            </div>\n\n            <div className=\"flex justify-center items-center my-12\">\n              <div className=\"relative w-80 h-80\">\n                <svg className=\"w-full h-full transform -rotate-90\" viewBox=\"0 0 320 320\">\n                  {/* Background circle */}\n                  <circle\n                    cx=\"160\"\n                    cy=\"160\"\n                    r=\"140\"\n                    stroke=\"rgba(255, 255, 255, 0.1)\"\n                    strokeWidth=\"12\"\n                    fill=\"none\"\n                  />\n                  {/* Progress circle */}\n                  <motion.circle\n                    cx=\"160\"\n                    cy=\"160\"\n                    r=\"140\"\n                    stroke=\"url(#gradient)\"\n                    strokeWidth=\"12\"\n                    fill=\"none\"\n                    strokeLinecap=\"round\"\n                    strokeDasharray={2 * Math.PI * 140}\n                    strokeDashoffset={2 * Math.PI * 140 * (1 - progress / 100)}\n                    initial={{ strokeDashoffset: 2 * Math.PI * 140 }}\n                    animate={{ strokeDashoffset: 2 * Math.PI * 140 * (1 - progress / 100) }}\n                    transition={{ duration: 0.5, ease: \"easeInOut\" }}\n                  />\n                  <defs>\n                    <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                      <stop offset=\"0%\" stopColor={currentMode === 'work' ? '#f43f5e' : currentMode === 'shortBreak' ? '#06b6d4' : '#10b981'} />\n                      <stop offset=\"50%\" stopColor={currentMode === 'work' ? '#ec4899' : currentMode === 'shortBreak' ? '#3b82f6' : '#14b8a6'} />\n                      <stop offset=\"100%\" stopColor={currentMode === 'work' ? '#a855f7' : currentMode === 'shortBreak' ? '#6366f1' : '#06b6d4'} />\n                    </linearGradient>\n                  </defs>\n                </svg>\n                {/* Timer display in center */}\n                <div className=\"absolute inset-0 flex flex-col items-center justify-center\">\n                  <motion.div\n                    key={timeLeft}\n                    initial={{ scale: 1 }}\n                    animate={{ scale: [1, 1.05, 1] }}\n                    transition={{ duration: 0.3 }}\n                    className=\"text-7xl font-bold text-white mb-2\"\n                  >\n                    {formatTime(timeLeft)}\n                  </motion.div>\n                  <div className=\"text-white/70 text-lg font-medium capitalize\">\n                    {currentMode === 'work' ? 'Focus Time' : currentMode === 'shortBreak' ? 'Short Break' : 'Long Break'}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"text-center mb-8\">\n              <motion.div\n                key={timeLeft}\n                initial={{ scale: 1 }}\n                animate={{ scale: [1, 1.05, 1] }}\n                transition={{ duration: 0.3 }}\n                className=\"text-7xl font-bold text-white mb-4\"\n              >\n                {formatTime(timeLeft)}\n              </motion.div>\n              <p className=\"text-white/80 text-xl capitalize\">\n                {currentMode === 'work' ? 'Focus Time' : currentMode === 'shortBreak' ? 'Short Break' : 'Long Break'}\n              </p>\n            </div>\n\n            <div className=\"flex justify-center gap-4 mb-6\">\n              <Button\n                onClick={handlePlayPause}\n                size=\"lg\"\n                className=\"bg-white/20 hover:bg-white/30 text-white backdrop-blur-sm border border-white/30 px-8\"\n              >\n                {isRunning ? (\n                  <>\n                    <Pause className=\"w-5 h-5 mr-2\" />\n                    Pause\n                  </>\n                ) : (\n                  <>\n                    <Play className=\"w-5 h-5 mr-2\" />\n                    Start\n                  </>\n                )}\n              </Button>\n              <Button\n                onClick={handleReset}\n                size=\"lg\"\n                variant=\"ghost\"\n                className=\"text-white hover:bg-white/20\"\n              >\n                <RotateCcw className=\"w-5 h-5 mr-2\" />\n                Reset\n              </Button>\n            </div>\n\n            <div className=\"text-center text-white/60\">\n              <p>Completed Pomodoros: {completedPomodoros}</p>\n            </div>\n          </div>\n\n          <AnimatePresence>\n            {showSettings && (\n              <motion.div\n                initial={{ opacity: 0, y: 20, scale: 0.95 }}\n                animate={{ opacity: 1, y: 0, scale: 1 }}\n                exit={{ opacity: 0, y: 20, scale: 0.95 }}\n                transition={{ duration: 0.3 }}\n                className=\"mt-6 backdrop-blur-xl bg-white/10 rounded-3xl p-8 shadow-2xl border border-white/20\"\n              >\n                <h2 className=\"text-2xl font-bold text-white mb-6\">Settings</h2>\n                \n                <div className=\"space-y-6\">\n                  <div>\n                    <label className=\"block text-white/80 mb-2 text-sm font-medium\">\n                      Work Duration (minutes)\n                    </label>\n                    <input\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"60\"\n                      value={settings.workDuration}\n                      onChange={(e) => setSettings({ ...settings, workDuration: parseInt(e.target.value) || 1 })}\n                      className=\"w-full px-4 py-3 rounded-xl bg-white/10 border border-white/20 text-white placeholder-white/40 focus:outline-none focus:ring-2 focus:ring-white/40 backdrop-blur-sm\"\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-white/80 mb-2 text-sm font-medium\">\n                      Short Break Duration (minutes)\n                    </label>\n                    <input\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"30\"\n                      value={settings.shortBreakDuration}\n                      onChange={(e) => setSettings({ ...settings, shortBreakDuration: parseInt(e.target.value) || 1 })}\n                      className=\"w-full px-4 py-3 rounded-xl bg-white/10 border border-white/20 text-white placeholder-white/40 focus:outline-none focus:ring-2 focus:ring-white/40 backdrop-blur-sm\"\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-white/80 mb-2 text-sm font-medium\">\n                      Long Break Duration (minutes)\n                    </label>\n                    <input\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"60\"\n                      value={settings.longBreakDuration}\n                      onChange={(e) => setSettings({ ...settings, longBreakDuration: parseInt(e.target.value) || 1 })}\n                      className=\"w-full px-4 py-3 rounded-xl bg-white/10 border border-white/20 text-white placeholder-white/40 focus:outline-none focus:ring-2 focus:ring-white/40 backdrop-blur-sm\"\n                    />\n                  </div>\n\n                  <div>\n                    <label className=\"block text-white/80 mb-2 text-sm font-medium\">\n                      Long Break Interval (pomodoros)\n                    </label>\n                    <input\n                      type=\"number\"\n                      min=\"2\"\n                      max=\"10\"\n                      value={settings.longBreakInterval}\n                      onChange={(e) => setSettings({ ...settings, longBreakInterval: parseInt(e.target.value) || 2 })}\n                      className=\"w-full px-4 py-3 rounded-xl bg-white/10 border border-white/20 text-white placeholder-white/40 focus:outline-none focus:ring-2 focus:ring-white/40 backdrop-blur-sm\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"flex gap-4 mt-8\">\n                  <Button\n                    onClick={() => {\n                      setShowSettings(false);\n                      handleReset();\n                    }}\n                    className=\"flex-1 bg-white/20 hover:bg-white/30 text-white backdrop-blur-sm border border-white/30\"\n                  >\n                    Save & Apply\n                  </Button>\n                  <Button\n                    onClick={() => {\n                      setSettings(defaultSettings);\n                      setShowSettings(false);\n                    }}\n                    variant=\"ghost\"\n                    className=\"flex-1 text-white hover:bg-white/20\"\n                  >\n                    Cancel\n                  </Button>\n                </div>\n              </motion.div>\n            )}\n          </AnimatePresence>\n\n          <AnimatePresence>\n            {showCompletion && (\n              <motion.div\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                exit={{ opacity: 0 }}\n                className=\"fixed inset-0 z-50 flex items-center justify-center pointer-events-none\"\n              >\n                {/* Confetti particles */}\n                {Array.from({ length: 100 }).map((_, i) => {\n                  const angle = (Math.PI * 2 * i) / 100;\n                  const velocity = Math.random() * 300 + 200;\n                  const x = Math.cos(angle) * velocity;\n                  const y = Math.sin(angle) * velocity - 100;\n                  const rotation = Math.random() * 720 - 360;\n                  const colors = ['#ef4444', '#f59e0b', '#10b981', '#3b82f6', '#8b5cf6', '#ec4899'];\n                  const color = colors[Math.floor(Math.random() * colors.length)];\n                  \n                  return (\n                    <motion.div\n                      key={i}\n                      className=\"absolute w-3 h-3 rounded-sm\"\n                      style={{\n                        backgroundColor: color,\n                        left: '50%',\n                        top: '50%',\n                      }}\n                      initial={{ x: 0, y: 0, opacity: 1, rotate: 0, scale: 1 }}\n                      animate={{\n                        x: x,\n                        y: y,\n                        opacity: 0,\n                        rotate: rotation,\n                        scale: [1, 1.5, 0.5],\n                      }}\n                      transition={{\n                        duration: 2 + Math.random(),\n                        ease: [0.25, 0.46, 0.45, 0.94],\n                      }}\n                    />\n                  );\n                })}\n\n                {/* Celebration message */}\n                <motion.div\n                  initial={{ scale: 0, rotate: -10 }}\n                  animate={{ \n                    scale: [0, 1.2, 1],\n                    rotate: [0, 10, -10, 0],\n                  }}\n                  transition={{\n                    duration: 0.6,\n                    times: [0, 0.6, 1],\n                    ease: \"easeOut\",\n                  }}\n                  className=\"backdrop-blur-xl bg-white/20 rounded-3xl p-8 shadow-2xl border-4 border-white/40 pointer-events-auto\"\n                >\n                  <motion.div\n                    animate={{\n                      scale: [1, 1.1, 1],\n                    }}\n                    transition={{\n                      duration: 0.5,\n                      repeat: 3,\n                      ease: \"easeInOut\",\n                    }}\n                    className=\"text-center\"\n                  >\n                    <div className=\"text-6xl mb-4\">\ud83c\udf89</div>\n                    <h2 className=\"text-4xl font-bold text-white mb-2\">\n                      {currentMode === 'work' ? 'Great Work!' : 'Break Complete!'}\n                    </h2>\n                    <p className=\"text-xl text-white/80\">\n                      {currentMode === 'work' \n                        ? 'Time for a well-deserved break!' \n                        : 'Ready to focus again?'}\n                    </p>\n                  </motion.div>\n                </motion.div>\n\n                {/* Radial pulse effect */}\n                <motion.div\n                  className=\"absolute inset-0 flex items-center justify-center\"\n                  initial={{ opacity: 0 }}\n                  animate={{ opacity: [0, 0.5, 0] }}\n                  transition={{ duration: 1.5 }}\n                >\n                  <motion.div\n                    className=\"w-32 h-32 rounded-full border-4 border-white\"\n                    initial={{ scale: 0, opacity: 1 }}\n                    animate={{ scale: 8, opacity: 0 }}\n                    transition={{ duration: 1.5, ease: \"easeOut\" }}\n                  />\n                </motion.div>\n              </motion.div>\n            )}\n          </AnimatePresence>\n\n          {/* Hidden audio element for completion sound */}\n          <audio\n            ref={audioRef}\n            src=\"data:audio/wav;base64,UklGRnoGAABXQVZFZm10IBAAAAABAAEAQB8AAEAfAAABAAgAZGF0YQoGAACBhYqFbF1fdJivrJBhNjVgodDbq2EcBj+a2/LDciUFLIHO8tiJNwgZaLvt559NEAxQp+PwtmMcBjiR1/LMeSwFJHfH8N2QQAoUXrTp66hVFApGn+DyvmwhBSuBzvLZiTYIGGS57OihUBELTKXh8LJnHgU2jdXvyoA0BydxwO7bljwKFGGz6OyrWBQLSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FN4/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0ig3/LBbiQFLoTP89yOPgkWZ7zt6qVSEwtJouDxtmkeBTiP1vLPgzQHJ3HA7tuWPAoUYbPo7KtYFQtIoN/ywW4kBS6Ez/Pcjj4JFme87eqlUhMLSaLg8bZpHgU4j9byz4M0BydxwO7bljwKFGGz6OyrWBULSKDf8sFuJAUuhM/z3I4+CRZnvO3qpVITC0mi4PG2aR4FOI/W8s+DNAcnccDu25Y8ChRhs+jsq1gVC0\n        </motion.div>\n      </div>\n    </div>\n  );\n}",
      "error": null,
      "overall_score": 41,
      "code_quality_score": 12,
      "architecture_score": 10,
      "performance_score": 8,
      "accessibility_score": 11,
      "metadata": {
        "document_id": "eval_room_37e2e476407b",
        "prompt_category": "productivity",
        "prompt_complexity": 7.0
      }
    },
    {
      "prompt_id": "algorithm_visualizer",
      "prompt_name": "Algorithm Visualizer",
      "mode": "parallel",
      "run_number": 22,
      "timestamp": "2025-10-14T11:28:51.213307",
      "response_time": 384.75540566444397,
      "total_tokens": null,
      "response_content": "import { useState, useCallback } from 'react';\nimport { useEffect } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Slider } from '@/components/ui/slider';\nimport { Play, Pause, RotateCcw, Zap, BarChart3 } from 'lucide-react';\nimport { motion } from 'framer-motion';\n\ninterface ArrayElement {\n  value: number;\n  id: string;\n  isComparing?: boolean;\n  isSwapping?: boolean;\n  isSorted?: boolean;\n}\n\ninterface AlgorithmStep {\n  array: ArrayElement[];\n  comparingIndices: number[];\n  swappingIndices: number[];\n  sortedIndices: number[];\n}\n\ntype AlgorithmType = 'bubble' | 'quick' | 'merge' | 'insertion';\n\nconst NEON_COLORS = [\n  '#00ffff',\n  '#ff00ff', \n  '#00ff00',\n  '#ffff00',\n  '#ff0066',\n  '#00ffaa'\n];\n\nconst mockAlgorithms = [\n  { id: 'bubble', name: 'Bubble Sort', complexity: 'O(n\u00b2)' },\n  { id: 'quick', name: 'Quick Sort', complexity: 'O(n log n)' },\n  { id: 'merge', name: 'Merge Sort', complexity: 'O(n log n)' },\n  { id: 'insertion', name: 'Insertion Sort', complexity: 'O(n\u00b2)' }\n];\n\nexport default function AlgorithmVisualizer() {\n  const [array, setArray] = useState<ArrayElement[]>([]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [speed, setSpeed] = useState([50]);\n  const [arraySize, setArraySize] = useState([20]);\n  const [selectedAlgorithm, setSelectedAlgorithm] = useState<AlgorithmType>('bubble');\n  const [currentStep, setCurrentStep] = useState(0);\n  const [steps, setSteps] = useState<AlgorithmStep[]>([]);\n  const [comparisons, setComparisons] = useState(0);\n  const [swaps, setSwaps] = useState(0);\n\n  const generateRandomArray = useCallback(() => {\n    const newArray: ArrayElement[] = Array.from({ length: arraySize[0] }, (_, index) => ({\n      value: Math.floor(Math.random() * 100) + 5,\n      id: `element-${index}-${Date.now()}`,\n      isComparing: false,\n      isSwapping: false,\n      isSorted: false\n    }));\n    \n    setArray(newArray);\n    setSteps([]);\n    setCurrentStep(0);\n    setComparisons(0);\n    setSwaps(0);\n    setIsPlaying(false);\n  }, [arraySize]);\n\n  const resetVisualization = useCallback(() => {\n    setIsPlaying(false);\n    setCurrentStep(0);\n    setSteps([]);\n    setComparisons(0);\n    setSwaps(0);\n    generateRandomArray();\n  }, [generateRandomArray]);\n\n  const handlePlayPause = useCallback(() => {\n\nif (!steps.length) return;\n    \n    if (!isPlaying) {\n      setIsPlaying(true);\n    } else {\n      setIsPlaying(false);\n    }\n  }, [isPlaying, steps.length]);\n  useEffect(() => {\n    if (!isPlaying || currentStep >= steps.length) {\n      if (currentStep >= steps.length && steps.length > 0) {\n        setIsPlaying(false);\n      }\n      return;\n    }\n\n    const delay = 1000 - (speed[0] * 9.5);\n    const timer = setTimeout(() => {\n      const step = steps[currentStep];\n      setArray(step.array);\n      setCurrentStep(prev => prev + 1);\n      \n      if (step.swappingIndices.length > 0) {\n        setSwaps(prev => prev + 1);\n      }\n      if (step.comparingIndices.length > 0) {\n        setComparisons(prev => prev + 1);\n      }\n    }, delay);\n\n    return () => clearTimeout(timer);\n  }, [isPlaying, currentStep, steps, speed]); currentStep, steps, speed]);\n\n  const generateSteps = useCallback((algorithm: AlgorithmType) => {\n    const allSteps: AlgorithmStep[] = [];\n    let comparisonCount = 0;\n    let swapCount = 0;\n    const arr = [...array];\n\n    const recordStep = (comparingIndices: number[] = [], swappingIndices: number[] = [], sortedIndices: number[] = []) => {\n      allSteps.push({\n        array: arr.map((el, idx) => ({\n          ...el,\n          isComparing: comparingIndices.includes(idx),\n          isSwapping: swappingIndices.includes(idx),\n          isSorted: sortedIndices.includes(idx)\n        })),\n        comparingIndices,\n        swappingIndices,\n        sortedIndices\n      });\n    };\n\n    const swap = (i: number, j: number, sortedIndices: number[] = []) => {\n      recordStep([i, j], [], sortedIndices);\n      comparisonCount++;\n      [arr[i], arr[j]] = [arr[j], arr[i]];\n      recordStep([], [i, j], sortedIndices);\n      swapCount++;\n    };\n\n    const compare = (i: number, j: number, sortedIndices: number[] = []) => {\n      recordStep([i, j], [], sortedIndices);\n      comparisonCount++;\n    };\n\n    if (algorithm === 'bubble') {\n      const sortedIndices: number[] = [];\n      for (let i = 0; i < arr.length; i++) {\n        for (let j = 0; j < arr.length - i - 1; j++) {\n          compare(j, j + 1, sortedIndices);\n          if (arr[j].value > arr[j + 1].value) {\n            swap(j, j + 1, sortedIndices);\n          }\n        }\n        sortedIndices.push(arr.length - i - 1);\n        recordStep([], [], sortedIndices);\n      }\n    } else if (algorithm === 'quick') {\n      const sortedIndices: number[] = [];\n      \n      const partition = (low: number, high: number): number => {\n        const pivot = arr[high].value;\n        let i = low - 1;\n        \n        for (let j = low; j < high; j++) {\n          compare(j, high, sortedIndices);\n          if (arr[j].value < pivot) {\n            i++;\n            if (i !== j) {\n              swap(i, j, sortedIndices);\n            }\n          }\n        }\n        if (i + 1 !== high) {\n          swap(i + 1, high, sortedIndices);\n        }\n        sortedIndices.push(i + 1);\n        return i + 1;\n      };\n\n      const quickSortHelper = (low: number, high: number) => {\n        if (low < high) {\n          const pi = partition(low, high);\n          quickSortHelper(low, pi - 1);\n          quickSortHelper(pi + 1, high);\n        } else if (low === high) {\n          sortedIndices.push(low);\n        }\n      };\n\n      quickSortHelper(0, arr.length - 1);\n      recordStep([], [], sortedIndices);\n    } else if (algorithm === 'merge') {\n      const sortedIndices: number[] = [];\n      \n      const merge = (left: number, mid: number, right: number) => {\n        const leftArr = arr.slice(left, mid + 1);\n        const rightArr = arr.slice(mid + 1, right + 1);\n        let i = 0, j = 0, k = left;\n\n        while (i < leftArr.length && j < rightArr.length) {\n          compare(left + i, mid + 1 + j, sortedIndices);\n          if (leftArr[i].value <= rightArr[j].value) {\n            arr[k] = leftArr[i];\n            i++;\n          } else {\n            arr[k] = rightArr[j];\n            j++;\n          }\n          recordStep([], [k], sortedIndices);\n          k++;\n        }\n\n        while (i < leftArr.length) {\n          arr[k] = leftArr[i];\n          recordStep([], [k], sortedIndices);\n          i++;\n          k++;\n        }\n\n        while (j < rightArr.length) {\n          arr[k] = rightArr[j];\n          recordStep([], [k], sortedIndices);\n          j++;\n          k++;\n        }\n      };\n\n      const mergeSortHelper = (left: number, right: number) => {\n        if (left < right) {\n          const mid = Math.floor((left + right) / 2);\n          mergeSortHelper(left, mid);\n          mergeSortHelper(mid + 1, right);\n          merge(left, mid, right);\n        }\n      };\n\n      mergeSortHelper(0, arr.length - 1);\n      for (let i = 0; i < arr.length; i++) {\n        sortedIndices.push(i);\n      }\n      recordStep([], [], sortedIndices);\n    } else if (algorithm === 'insertion') {\n      const sortedIndices: number[] = [0];\n      recordStep([], [], sortedIndices);\n      \n      for (let i = 1; i < arr.length; i++) {\n        const key = arr[i];\n        let j = i - 1;\n        \n        compare(i, j, sortedIndices);\n        \n        while (j >= 0 && arr[j].value > key.value) {\n          arr[j + 1] = arr[j];\n          recordStep([j], [j + 1], sortedIndices);\n          swapCount++;\n          j--;\n          if (j >= 0) {\n            compare(j, i, sortedIndices);\n          }\n        }\n        \n        arr[j + 1] = key;\n        recordStep([], [j + 1], sortedIndices);\n        sortedIndices.push(i);\n        recordStep([], [], sortedIndices);\n      }\n    }\n\n    setSteps(allSteps);\n    setComparisons(comparisonCount);\n    setSwaps(swapCount);\n    setCurrentStep(0);\n    setIsPlaying(false);\n  }, [array]);\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-purple-900 to-gray-900 p-8\">\n      <div className=\"max-w-7xl mx-auto space-y-8\">\n        <motion.div\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.8 }}\n          className=\"text-center space-y-6\"\n        >\n          <motion.h1\n            className=\"text-6xl font-bold bg-gradient-to-r from-cyan-400 via-purple-400 to-pink-400 bg-clip-text text-transparent\"\n            animate={{\n              textShadow: [\n                '0 0 20px rgba(0, 255, 255, 0.5)',\n                '0 0 40px rgba(255, 0, 255, 0.5)',\n                '0 0 20px rgba(0, 255, 255, 0.5)'\n              ]\n            }}\n            transition={{ duration: 2, repeat: Infinity }}\n          >\n            Algorithm Visualizer\n          </motion.h1>\n          \n          <div className=\"flex justify-center gap-4 flex-wrap\">\n            {mockAlgorithms.map((algo) => (\n              <motion.div\n                key={algo.id}\n                whileHover={{ scale: 1.05 }}\n                whileTap={{ scale: 0.95 }}\n              >\n                <Button\n                  onClick={() => setSelectedAlgorithm(algo.id as AlgorithmType)}\n                  variant={selectedAlgorithm === algo.id ? 'default' : 'outline'}\n                  className={`relative overflow-hidden transition-all duration-300 ${\n                    selectedAlgorithm === algo.id\n                      ? 'bg-gradient-to-r from-cyan-500 to-purple-500 text-white shadow-lg shadow-cyan-500/50'\n                      : 'bg-gray-800/50 text-gray-300 border-gray-700 hover:border-cyan-500'\n                  }`}\n                >\n                  <span className=\"relative z-10 flex flex-col items-center\">\n                    <span className=\"font-semibold\">{algo.name}</span>\n                    <span className=\"text-xs opacity-75\">{algo.complexity}</span>\n                  </span>\n                  {selectedAlgorithm === algo.id && (\n                    <motion.div\n                      className=\"absolute inset-0 bg-gradient-to-r from-cyan-400 to-purple-400 opacity-20\"\n                      animate={{\n                        scale: [1, 1.2, 1],\n                        opacity: [0.2, 0.3, 0.2]\n                      }}\n                      transition={{ duration: 2, repeat: Infinity }}\n                    />\n                  )}\n                </Button>\n              </motion.div>\n            ))}\n          </div>\n        </motion.div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"bg-gray-900/50 backdrop-blur-xl border border-cyan-500/30 rounded-lg p-6 relative overflow-hidden group\"\n          >\n            <div className=\"absolute inset-0 bg-gradient-to-br from-cyan-500/10 to-transparent opacity-0 group-hover:opacity-100 transition-opacity\" />\n            <div className=\"relative z-10\">\n              <div className=\"flex items-center gap-3 mb-2\">\n                <BarChart3 className=\"w-5 h-5 text-cyan-400\" />\n                <span className=\"text-gray-400 text-sm font-medium\">Comparisons</span>\n              </div>\n              <motion.div\n                key={comparisons}\n                initial={{ scale: 1.2, color: '#00ffff' }}\n                animate={{ scale: 1, color: '#ffffff' }}\n                className=\"text-3xl font-bold\"\n              >\n                {comparisons}\n              </motion.div>\n            </div>\n          </motion.div>\n\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.1 }}\n            className=\"bg-gray-900/50 backdrop-blur-xl border border-purple-500/30 rounded-lg p-6 relative overflow-hidden group\"\n          >\n            <div className=\"absolute inset-0 bg-gradient-to-br from-purple-500/10 to-transparent opacity-0 group-hover:opacity-100 transition-opacity\" />\n            <div className=\"relative z-10\">\n              <div className=\"flex items-center gap-3 mb-2\">\n                <Zap className=\"w-5 h-5 text-purple-400\" />\n                <span className=\"text-gray-400 text-sm font-medium\">Swaps</span>\n              </div>\n              <motion.div\n                key={swaps}\n                initial={{ scale: 1.2, color: '#ff00ff' }}\n                animate={{ scale: 1, color: '#ffffff' }}\n                className=\"text-3xl font-bold\"\n              >\n                {swaps}\n              </motion.div>\n            </div>\n          </motion.div>\n\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.2 }}\n            className=\"bg-gray-900/50 backdrop-blur-xl border border-green-500/30 rounded-lg p-6 relative overflow-hidden group\"\n          >\n            <div className=\"absolute inset-0 bg-gradient-to-br from-green-500/10 to-transparent opacity-0 group-hover:opacity-100 transition-opacity\" />\n            <div className=\"relative z-10\">\n              <div className=\"flex items-center gap-3 mb-2\">\n                <BarChart3 className=\"w-5 h-5 text-green-400\" />\n                <span className=\"text-gray-400 text-sm font-medium\">Time Complexity</span>\n              </div>\n              <div className=\"text-2xl font-bold text-green-400\">\n                {mockAlgorithms.find(a => a.id === selectedAlgorithm)?.complexity}\n              </div>\n            </div>\n          </motion.div>\n\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.3 }}\n            className=\"bg-gray-900/50 backdrop-blur-xl border border-yellow-500/30 rounded-lg p-6 relative overflow-hidden group\"\n          >\n            <div className=\"absolute inset-0 bg-gradient-to-br from-yellow-500/10 to-transparent opacity-0 group-hover:opacity-100 transition-opacity\" />\n            <div className=\"relative z-10\">\n              <div className=\"flex items-center gap-3 mb-2\">\n                <BarChart3 className=\"w-5 h-5 text-yellow-400\" />\n                <span className=\"text-gray-400 text-sm font-medium\">Array Size</span>\n              </div>\n              <div className=\"text-3xl font-bold\">\n                {array.length}\n              </div>\n            </div>\n          </motion.div>\n        </div>\n\n        <div className=\"relative\">\n          <div className=\"bg-black/40 backdrop-blur-xl rounded-2xl p-8 border border-purple-500/30 shadow-2xl\">\n            <div className=\"flex items-end justify-center gap-2 h-96\">\n              {array.length === 0 ? (\n                <div className=\"flex items-center justify-center w-full h-full\">\n                  <div className=\"text-center space-y-4\">\n                    <BarChart3 className=\"w-16 h-16 mx-auto text-purple-400/50\" />\n                    <p className=\"text-purple-300/70 text-lg\">Generate an array to start visualizing</p>\n                  </div>\n                </div>\n              ) : (\n                array.map((element, index) => {\n                  const isComparing = steps[currentStep]?.comparingIndices.includes(index);\n                  const isSwapping = steps[currentStep]?.swappingIndices.includes(index);\n                  const isSorted = steps[currentStep]?.sortedIndices.includes(index);\n                  \n                  return (\n                    <motion.div\n                      key={element.id}\n                      className=\"relative flex-1 min-w-0\"\n                      initial={{ opacity: 0, y: 20 }}\n                      animate={{ \n                        opacity: 1, \n                        y: 0,\n                        scale: isSwapping ? 1.1 : 1,\n                      }}\n                      transition={{ \n                        duration: 0.3,\n                        scale: { duration: 0.2 }\n                      }}\n                    >\n                      <motion.div\n                        className=\"w-full rounded-t-lg relative overflow-visible\"\n                        style={{\n                          backgroundColor: isSorted \n                            ? '#00ff00' \n                            : isSwapping \n                            ? '#ff0066' \n                            : isComparing \n                            ? '#ffff00' \n                            : NEON_COLORS[index % NEON_COLORS.length],\n                          boxShadow: isSorted\n                            ? '0 0 20px #00ff00, 0 0 40px #00ff00'\n                            : isSwapping\n                            ? '0 0 30px #ff0066, 0 0 60px #ff0066, 0 0 90px #ff0066'\n                            : isComparing\n                            ? '0 0 25px #ffff00, 0 0 50px #ffff00'\n                            : `0 0 15px ${NEON_COLORS[index % NEON_COLORS.length]}, 0 0 30px ${NEON_COLORS[index % NEON_COLORS.length]}`,\n                        }}\n                        animate={{\n                          height: `${(element.value / 100) * 100}%`,\n                        }}\n                        transition={{\n                          height: { duration: 0.5, ease: 'easeInOut' },\n                        }}\n                      >\n                        {/* Trail effect for swapping */}\n                        {isSwapping && (\n                          <>\n                            <motion.div\n                              className=\"absolute inset-0 rounded-t-lg\"\n                              style={{\n                                backgroundColor: '#ff0066',\n                                opacity: 0.6,\n                              }}\n                              animate={{\n                                opacity: [0.6, 0, 0.6],\n                                scale: [1, 1.2, 1],\n                              }}\n                              transition={{\n                                duration: 0.6,\n                                repeat: Infinity,\n                              }}\n                            />\n                            <motion.div\n                              className=\"absolute -top-2 left-1/2 transform -translate-x-1/2\"\n                              animate={{\n                                y: [-10, -20, -10],\n                                opacity: [1, 0.5, 1],\n                              }}\n                              transition={{\n                                duration: 0.5,\n                                repeat: Infinity,\n                              }}\n                            >\n                              <Zap className=\"w-4 h-4 text-yellow-300\" />\n                            </motion.div>\n                          </>\n                        )}\n                        \n                        {/* Comparison pulse effect */}\n                        {isComparing && !isSwapping && (\n                          <motion.div\n                            className=\"absolute inset-0 rounded-t-lg border-2 border-yellow-300\"\n                            animate={{\n                              opacity: [1, 0.3, 1],\n                            }}\n                            transition={{\n                              duration: 0.8,\n                              repeat: Infinity,\n                            }}\n                          />\n                        )}\n                        \n                        {/* Value label */}\n                        <div className=\"absolute -bottom-6 left-1/2 transform -translate-x-1/2 text-xs text-purple-200/80 font-mono\">\n                          {element.value}\n                        </div>\n                      </motion.div>\n                    </motion.div>\n                  );\n                })\n              )}\n            </div>\n          </div>\n        </div>\n\n                <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.6, delay: 0.4 }}\n          className=\"bg-gray-800/50 backdrop-blur-lg rounded-2xl p-6 border border-purple-500/30 shadow-2xl\"\n        >\n          <div className=\"flex flex-col lg:flex-row items-center gap-6\">\n            {/* Play/Pause and Reset Buttons */}\n            <div className=\"flex items-center gap-3\">\n              <Button\n                onClick={handlePlayPause}\n                disabled={steps.length === 0}\n                className=\"relative group bg-gradient-to-r from-cyan-500 to-blue-500 hover:from-cyan-400 hover:to-blue-400 text-white px-6 py-6 rounded-xl transition-all duration-300 shadow-lg hover:shadow-cyan-500/50 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                <motion.div\n                  whileHover={{ scale: 1.1 }}\n                  whileTap={{ scale: 0.95 }}\n                  className=\"flex items-center gap-2\"\n                >\n                  {isPlaying ? (\n                    <Pause className=\"w-5 h-5\" />\n                  ) : (\n                    <Play className=\"w-5 h-5\" />\n                  )}\n                  <span className=\"font-semibold\">\n                    {isPlaying ? 'Pause' : 'Play'}\n                  </span>\n                </motion.div>\n                <div className=\"absolute inset-0 rounded-xl bg-cyan-400/20 blur-xl group-hover:bg-cyan-400/40 transition-all duration-300\" />\n              </Button>\n\n              <Button\n                onClick={resetVisualization}\n                className=\"relative group bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-400 hover:to-pink-400 text-white px-6 py-6 rounded-xl transition-all duration-300 shadow-lg hover:shadow-purple-500/50\"\n              >\n                <motion.div\n                  whileHover={{ scale: 1.1, rotate: 180 }}\n                  whileTap={{ scale: 0.95 }}\n                  transition={{ duration: 0.3 }}\n                  className=\"flex items-center gap-2\"\n                >\n                  <RotateCcw className=\"w-5 h-5\" />\n                  <span className=\"font-semibold\">Reset</span>\n                </motion.div>\n                <div className=\"absolute inset-0 rounded-xl bg-purple-400/20 blur-xl group-hover:bg-purple-400/40 transition-all duration-300\" />\n              </Button>\n            </div>\n\n            {/* Speed Control */}\n            <div className=\"flex-1 w-full lg:w-auto min-w-[200px]\">\n              <div className=\"flex items-center gap-4\">\n                <div className=\"flex items-center gap-2 text-cyan-400\">\n                  <Zap className=\"w-5 h-5\" />\n                  <span className=\"font-semibold text-sm whitespace-nowrap\">Speed</span>\n                </div>\n                <div className=\"flex-1 relative\">\n                  <Slider\n                    value={speed}\n                    onValueChange={setSpeed}\n                    min={10}\n                    max={100}\n                    step={10}\n                    className=\"cursor-pointer\"\n                  />\n                  <div className=\"absolute -bottom-6 left-0 right-0 flex justify-between text-xs text-gray-400\">\n                    <span>Slow</span>\n                    <span className=\"text-cyan-400 font-semibold\">{speed[0]}%</span>\n                    <span>Fast</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Array Size Control */}\n            <div className=\"flex-1 w-full lg:w-auto min-w-[200px]\">\n              <div className=\"flex items-center gap-4\">\n                <div className=\"flex items-center gap-2 text-purple-400\">\n                  <BarChart3 className=\"w-5 h-5\" />\n                  <span className=\"font-semibold text-sm whitespace-nowrap\">Size</span>\n                </div>\n                <div className=\"flex-1 relative\">\n                  <Slider\n                    value={arraySize}\n                    onValueChange={(value) => {\n                      setArraySize(value);\n                      setSteps([]);\n                      setCurrentStep(0);\n                      setIsPlaying(false);\n                    }}\n                    min={5}\n                    max={50}\n                    step={5}\n                    disabled={isPlaying}\n                    className=\"cursor-pointer\"\n                  />\n                  <div className=\"absolute -bottom-6 left-0 right-0 flex justify-between text-xs text-gray-400\">\n                    <span>5</span>\n                    <span className=\"text-purple-400 font-semibold\">{arraySize[0]}</span>\n                    <span>50</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </motion.div>\n\n                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n          {mockAlgorithms.map((algo) => (\n            <motion.div\n              key={algo.id}\n              whileHover={{ scale: 1.05, y: -5 }}\n              whileTap={{ scale: 0.95 }}\n              onClick={() => {\n                setSelectedAlgorithm(algo.id as AlgorithmType);\n                setCurrentStep(0);\n                setSteps([]);\n                setComparisons(0);\n                setSwaps(0);\n                setIsPlaying(false);\n              }}\n              className={`relative cursor-pointer rounded-xl p-6 transition-all duration-300 ${\n                selectedAlgorithm === algo.id\n                  ? 'bg-gradient-to-br from-cyan-500/20 to-purple-500/20 border-2 border-cyan-400 shadow-[0_0_30px_rgba(0,255,255,0.5)]'\n                  : 'bg-gray-800/50 border-2 border-gray-700 hover:border-purple-500 hover:shadow-[0_0_20px_rgba(168,85,247,0.4)]'\n              }`}\n            >\n              <div className=\"flex flex-col items-center space-y-3\">\n                <div className={`p-3 rounded-lg ${\n                  selectedAlgorithm === algo.id\n                    ? 'bg-cyan-500/20'\n                    : 'bg-purple-500/10'\n                }`}>\n                  <BarChart3 className={`w-6 h-6 ${\n                    selectedAlgorithm === algo.id\n                      ? 'text-cyan-400'\n                      : 'text-purple-400'\n                  }`} />\n                </div>\n                <div className=\"text-center\">\n                  <h3 className={`font-bold text-lg ${\n                    selectedAlgorithm === algo.id\n                      ? 'text-cyan-300'\n                      : 'text-white'\n                  }`}>\n                    {algo.name}\n                  </h3>\n                  <p className={`text-sm mt-1 ${\n                    selectedAlgorithm === algo.id\n                      ? 'text-cyan-400/80'\n                      : 'text-gray-400'\n                  }`}>\n                    {algo.complexity}\n                  </p>\n                </div>\n              </div>\n              {selectedAlgorithm === algo.id && (\n                <motion.div\n                  layoutId=\"selectedIndicator\"\n                  className=\"absolute inset-0 rounded-xl bg-gradient-to-r from-cyan-500/10 to-purple-500/10\"\n                  initial={false}\n                  transition={{ type: 'spring', stiffness: 300, damping: 30 }}\n                />\n              )}\n            </motion.div>\n          ))}\n        </div>\n\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ delay: 0.6, duration: 0.5 }}\n          className=\"bg-gray-800/50 backdrop-blur-lg rounded-2xl p-6 border border-purple-500/30 shadow-2xl\"\n        >\n          <div className=\"flex items-center gap-2 mb-4\">\n            <BarChart3 className=\"w-5 h-5 text-cyan-400\" />\n            <h3 className=\"text-lg font-semibold text-white\">Legend</h3>\n          </div>\n          \n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            <div className=\"flex items-center gap-3\">\n              <div className=\"w-8 h-8 rounded-lg bg-cyan-500/20 border-2 border-cyan-400 shadow-[0_0_15px_rgba(0,255,255,0.5)]\" />\n              <div>\n                <p className=\"text-sm font-medium text-white\">Comparing</p>\n                <p className=\"text-xs text-gray-400\">Active comparison</p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-center gap-3\">\n              <div className=\"w-8 h-8 rounded-lg bg-yellow-500/20 border-2 border-yellow-400 shadow-[0_0_15px_rgba(255,255,0,0.5)]\" />\n              <div>\n                <p className=\"text-sm font-medium text-white\">Swapping</p>\n                <p className=\"text-xs text-gray-400\">Elements swapping</p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-center gap-3\">\n              <div className=\"w-8 h-8 rounded-lg bg-green-500/20 border-2 border-green-400 shadow-[0_0_15px_rgba(0,255,0,0.5)]\" />\n              <div>\n                <p className=\"text-sm font-medium text-white\">Sorted</p>\n                <p className=\"text-xs text-gray-400\">In final position</p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-center gap-3\">\n              <div className=\"w-8 h-8 rounded-lg bg-purple-500/20 border-2 border-purple-400 shadow-[0_0_15px_rgba(168,85,247,0.5)]\" />\n              <div>\n                <p className=\"text-sm font-medium text-white\">Unsorted</p>\n                <p className=\"text-xs text-gray-400\">Awaiting sort</p>\n              </div>\n            </div>\n          </div>\n        </motion.div>\n      </div>\n    </div>\n  );\n}",
      "error": null,
      "overall_score": 59,
      "code_quality_score": 18,
      "architecture_score": 14,
      "performance_score": 16,
      "accessibility_score": 11,
      "metadata": {
        "document_id": "eval_room_e06ec733a067",
        "prompt_category": "creative",
        "prompt_complexity": 9.0
      }
    },
    {
      "prompt_id": "pomodoro_timer",
      "prompt_name": "Pomodoro Timer",
      "mode": "parallel",
      "run_number": 40,
      "timestamp": "2025-10-14T12:14:15.760235",
      "response_time": 214.53827714920044,
      "total_tokens": null,
      "response_content": "import { useState, useCallback, useEffect, useRef } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Play, Pause, RotateCcw, Settings } from 'lucide-react';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { motion, AnimatePresence } from 'framer-motion';\n\ninterface TimerMode {\n  type: 'work' | 'shortBreak' | 'longBreak';\n  duration: number;\n  label: string;\n}\n\ninterface TimerSettings {\n  workDuration: number;\n  shortBreakDuration: number;\n  longBreakDuration: number;\n  longBreakInterval: number;\n}\n\ninterface Particle {\n  id: number;\n  x: number;\n  y: number;\n  size: number;\n  duration: number;\n  delay: number;\n}\n\nconst defaultSettings: TimerSettings = {\n  workDuration: 25,\n  shortBreakDuration: 5,\n  longBreakDuration: 15,\n  longBreakInterval: 4\n};\n\nconst timerModes: Record<string, { colors: string; gradient: string }> = {\n  work: {\n    colors: 'from-rose-500 via-pink-500 to-purple-500',\n    gradient: 'bg-gradient-to-br from-rose-500/20 via-pink-500/20 to-purple-500/20'\n  },\n  shortBreak: {\n    colors: 'from-cyan-500 via-blue-500 to-indigo-500',\n    gradient: 'bg-gradient-to-br from-cyan-500/20 via-blue-500/20 to-indigo-500/20'\n  },\n  longBreak: {\n    colors: 'from-emerald-500 via-teal-500 to-cyan-500',\n    gradient: 'bg-gradient-to-br from-emerald-500/20 via-teal-500/20 to-cyan-500/20'\n  }\n};\n\nexport default function PomodoroTimer() {\n  const [settings, setSettings] = useState<TimerSettings>(defaultSettings);\n  const [currentMode, setCurrentMode] = useState<'work' | 'shortBreak' | 'longBreak'>('work');\n  const [timeLeft, setTimeLeft] = useState(settings.workDuration * 60);\n  const [isRunning, setIsRunning] = useState(false);\n  const [completedPomodoros, setCompletedPomodoros] = useState(0);\n  const [showSettings, setShowSettings] = useState(false);\n  const [showCompletion, setShowCompletion] = useState(false);\n  const [particles, setParticles] = useState<Particle[]>([]);\n  \n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n  const audioRef = useRef<HTMLAudioElement | null>(null);\n  const [tempSettings, setTempSettings] = useState<TimerSettings>(settings);\n\n  const handleSaveSettings = useCallback(() => {\n    setSettings(tempSettings);\n    setShowSettings(false);\n    // Reset timer with new settings\n    const newDuration = currentMode === 'work' \n      ? tempSettings.workDuration * 60 \n      : currentMode === 'shortBreak'\n      ? tempSettings.shortBreakDuration * 60\n      : tempSettings.longBreakDuration * 60;\n    setTimeLeft(newDuration);\n    setIsRunning(false);\n  }, [tempSettings, currentMode]);\n\n  const handleCancelSettings = useCallback(() => {\n    setTempSettings(settings);\n    setShowSettings(false);\n  }, [settings]);\n\n  const totalTime = currentMode === 'work' \n    ? settings.workDuration * 60 \n    : currentMode === 'shortBreak'\n    ? settings.shortBreakDuration * 60\n    : settings.longBreakDuration * 60;\n\n  const progress = ((totalTime - timeLeft) / totalTime) * 100;\n\n  useEffect(() => {\n    const generatedParticles: Particle[] = Array.from({ length: 50 }, (_, i) => ({\n      id: i,\n      x: Math.random() * 100,\n      y: Math.random() * 100,\n      size: Math.random() * 4 + 2,\n      duration: Math.random() * 20 + 10,\n      delay: Math.random() * 5\n    }));\n    setParticles(generatedParticles);\n  }, []);\n\n  useEffect(() => {\n    if (isRunning && timeLeft > 0) {\n      intervalRef.current = setInterval(() => {\n        setTimeLeft((prev) => {\n          if (prev <= 1) {\n            // Timer completed\n            setIsRunning(false);\n            setShowCompletion(true);\n            \n            // Play completion sound\n            if (audioRef.current) {\n              audioRef.current.play().catch(() => {\n                // Ignore audio play errors (browser autoplay policy)\n              });\n            }\n            \n            // Auto-switch to next mode\n            if (currentMode === 'work') {\n              const newCompletedPomodoros = completedPomodoros + 1;\n              setCompletedPomodoros(newCompletedPomodoros);\n              \n              // Check if it's time for long break\n              if (newCompletedPomodoros % settings.longBreakInterval === 0) {\n                setCurrentMode('longBreak');\n                return settings.longBreakDuration * 60;\n              } else {\n                setCurrentMode('shortBreak');\n                return settings.shortBreakDuration * 60;\n              }\n            } else {\n              // Break completed, switch to work\n              setCurrentMode('work');\n              return settings.workDuration * 60;\n            }\n          }\n          return prev - 1;\n        });\n      }, 1000);\n    } else {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n        intervalRef.current = null;\n      }\n    }\n\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, [isRunning, timeLeft, currentMode, completedPomodoros, settings]);\n\n  const handlePlayPause = useCallback(() => {\n    setIsRunning(!isRunning);\n  }, [isRunning]);\n\n  const handleReset = useCallback(() => {\n    setIsRunning(false);\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n    const duration = currentMode === 'work' \n      ? settings.workDuration * 60 \n      : currentMode === 'shortBreak'\n      ? settings.shortBreakDuration * 60\n      : settings.longBreakDuration * 60;\n    setTimeLeft(duration);\n  }, [currentMode, settings]);\n\n  const handleModeSwitch = useCallback((mode: 'work' | 'shortBreak' | 'longBreak') => {\n    setIsRunning(false);\n    setCurrentMode(mode);\n    const newDuration = mode === 'work' \n      ? settings.workDuration * 60 \n      : mode === 'shortBreak'\n      ? settings.shortBreakDuration * 60\n      : settings.longBreakDuration * 60;\n    setTimeLeft(newDuration);\n  }, [settings]);\n\n  const formatTime = useCallback((seconds: number): string => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  }, []);\n\n  return (\n    <div className={`min-h-screen relative overflow-hidden transition-all duration-1000 ${timerModes[currentMode].gradient}`}>\n      <div className=\"absolute inset-0 overflow-hidden pointer-events-none\">\n        {particles.map((particle) => (\n          <motion.div\n            key={particle.id}\n            className=\"absolute rounded-full bg-white/30 backdrop-blur-sm\"\n            style={{\n              left: `${particle.x}%`,\n              top: `${particle.y}%`,\n              width: particle.size,\n              height: particle.size,\n            }}\n            animate={{\n              y: [0, -30, 0],\n              opacity: [0.2, 0.6, 0.2],\n              scale: [1, 1.2, 1],\n            }}\n            transition={{\n              duration: particle.duration,\n              delay: particle.delay,\n              repeat: Infinity,\n              ease: \"easeInOut\",\n            }}\n          />\n        ))}\n      </div>\n      \n      <div className=\"relative z-10 min-h-screen flex flex-col items-center justify-center p-8\">\n        <motion.div\n          initial={{ opacity: 0, y: -20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"w-full max-w-2xl\"\n        >\n          <div className=\"backdrop-blur-xl bg-white/10 rounded-3xl p-8 shadow-2xl border border-white/20\">\n            <div className=\"flex justify-between items-center mb-8\">\n              <h1 className=\"text-4xl font-bold text-white\">Pomodoro Timer</h1>\n              <Button\n                variant=\"ghost\"\n                size=\"icon\"\n                onClick={() => setShowSettings(!showSettings)}\n                className=\"text-white hover:bg-white/20\"\n              >\n                <Settings className=\"w-6 h-6\" />\n              </Button>\n            </div>\n\n            <div className=\"flex gap-2 mb-8\">\n              <Button\n                variant={currentMode === 'work' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('work')}\n                className={`flex-1 transition-all duration-300 ${\n                  currentMode === 'work'\n                    ? 'bg-white text-rose-600 hover:bg-white/90 shadow-lg'\n                    : 'text-white hover:bg-white/20'\n                }`}\n              >\n                Work\n              </Button>\n              <Button\n                variant={currentMode === 'shortBreak' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('shortBreak')}\n                className={`flex-1 transition-all duration-300 ${\n                  currentMode === 'shortBreak'\n                    ? 'bg-white text-cyan-600 hover:bg-white/90 shadow-lg'\n                    : 'text-white hover:bg-white/20'\n                }`}\n              >\n                Short Break\n              </Button>\n              <Button\n                variant={currentMode === 'longBreak' ? 'default' : 'ghost'}\n                onClick={() => handleModeSwitch('longBreak')}\n                className={`flex-1 transition-all duration-300 ${\n                  currentMode === 'longBreak'\n                    ? 'bg-white text-emerald-600 hover:bg-white/90 shadow-lg'\n                    : 'text-white hover:bg-white/20'\n                }`}\n              >\n                Long Break\n              </Button>\n            </div>\n\n            <div className=\"flex justify-center items-center my-12\">\n              <div className=\"relative w-80 h-80\">\n                <svg className=\"w-full h-full transform -rotate-90\" viewBox=\"0 0 320 320\">\n                  {/* Background circle */}\n                  <circle\n                    cx=\"160\"\n                    cy=\"160\"\n                    r=\"140\"\n                    stroke=\"rgba(255, 255, 255, 0.1)\"\n                    strokeWidth=\"12\"\n                    fill=\"none\"\n                  />\n                  {/* Progress circle */}\n                  <motion.circle\n                    cx=\"160\"\n                    cy=\"160\"\n                    r=\"140\"\n                    stroke=\"url(#gradient)\"\n                    strokeWidth=\"12\"\n                    fill=\"none\"\n                    strokeLinecap=\"round\"\n                    strokeDasharray={2 * Math.PI * 140}\n                    strokeDashoffset={2 * Math.PI * 140 * (1 - progress / 100)}\n                    initial={{ strokeDashoffset: 2 * Math.PI * 140 }}\n                    animate={{ strokeDashoffset: 2 * Math.PI * 140 * (1 - progress / 100) }}\n                    transition={{ duration: 0.5, ease: \"easeInOut\" }}\n                  />\n                  <defs>\n                    <linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n                      <stop offset=\"0%\" stopColor={currentMode === 'work' ? '#f43f5e' : currentMode === 'shortBreak' ? '#06b6d4' : '#10b981'} />\n                      <stop offset=\"50%\" stopColor={currentMode === 'work' ? '#ec4899' : currentMode === 'shortBreak' ? '#3b82f6' : '#14b8a6'} />\n                      <stop offset=\"100%\" stopColor={currentMode === 'work' ? '#a855f7' : currentMode === 'shortBreak' ? '#6366f1' : '#06b6d4'} />\n                    </linearGradient>\n                  </defs>\n                </svg>\n                {/* Timer display in center */}\n                <div className=\"absolute inset-0 flex flex-col items-center justify-center\">\n                  <motion.div\n                    key={timeLeft}\n                    initial={{ scale: 1 }}\n                    animate={{ scale: [1, 1.05, 1] }}\n                    transition={{ duration: 0.3 }}\n                    className=\"text-7xl font-bold text-white mb-2\"\n                  >\n                    {formatTime(timeLeft)}\n                  </motion.div>\n                  <div className=\"text-white/70 text-lg font-medium capitalize\">\n                    {currentMode === 'work' ? 'Focus Time' : currentMode === 'shortBreak' ? 'Short Break' : 'Long Break'}\n                  </div>\n                  <div className=\"text-white/50 text-sm mt-2\">\n                    {completedPomodoros} pomodoros completed\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"text-center mb-8\">\n              <motion.div\n                key={timeLeft}\n                initial={{ scale: 1 }}\n                animate={{ scale: [1, 1.05, 1] }}\n                transition={{ duration: 0.3 }}\n                className=\"text-7xl font-bold text-white mb-4\"\n              >\n                {formatTime(timeLeft)}\n              </motion.div>\n              <p className=\"text-white/80 text-xl capitalize\">\n                {currentMode === 'work' ? 'Focus Time' : currentMode === 'shortBreak' ? 'Short Break' : 'Long Break'}\n              </p>\n            </div>\n\n            <div className=\"flex justify-center gap-4 mb-6\">\n              <Button\n                onClick={handlePlayPause}\n                size=\"lg\"\n                className=\"bg-white/20 hover:bg-white/30 text-white backdrop-blur-sm border border-white/30 px-8\"\n              >\n                {isRunning ? (\n                  <>\n                    <Pause className=\"w-5 h-5 mr-2\" />\n                    Pause\n                  </>\n                ) : (\n                  <>\n                    <Play className=\"w-5 h-5 mr-2\" />\n                    Start\n                  </>\n                )}\n              </Button>\n              <Button\n                onClick={handleReset}\n                size=\"lg\"\n                variant=\"ghost\"\n                className=\"text-white hover:bg-white/20\"\n              >\n                <RotateCcw className=\"w-5 h-5 mr-2\" />\n                Reset\n              </Button>\n            </div>\n\n            <div className=\"text-center text-white/60\">\n              <p>Completed Pomodoros: {completedPomodoros}</p>\n            </div>\n          </div>\n\n          <AnimatePresence>\n            {showSettings && (\n              <motion.div\n                initial={{ opacity: 0, y: 20, scale: 0.95 }}\n                animate={{ opacity: 1, y: 0, scale: 1 }}\n                exit={{ opacity: 0, y: 20, scale: 0.95 }}\n                transition={{ duration: 0.3, ease: \"easeOut\" }}\n                className=\"mt-6 backdrop-blur-xl bg-white/10 rounded-3xl p-8 shadow-2xl border border-white/20\"\n              >\n                <h2 className=\"text-2xl font-bold text-white mb-6\">Timer Settings</h2>\n                \n                <div className=\"space-y-6\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"work-duration\" className=\"text-white text-lg\">\n                      Work Duration (minutes)\n                    </Label>\n                    <Input\n                      id=\"work-duration\"\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"60\"\n                      value={tempSettings.workDuration}\n                      onChange={(e) => setTempSettings({ ...tempSettings, workDuration: parseInt(e.target.value) || 1 })}\n                      className=\"bg-white/20 border-white/30 text-white placeholder:text-white/50 backdrop-blur-sm text-lg\"\n                    />\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"short-break-duration\" className=\"text-white text-lg\">\n                      Short Break Duration (minutes)\n                    </Label>\n                    <Input\n                      id=\"short-break-duration\"\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"30\"\n                      value={tempSettings.shortBreakDuration}\n                      onChange={(e) => setTempSettings({ ...tempSettings, shortBreakDuration: parseInt(e.target.value) || 1 })}\n                      className=\"bg-white/20 border-white/30 text-white placeholder:text-white/50 backdrop-blur-sm text-lg\"\n                    />\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"long-break-duration\" className=\"text-white text-lg\">\n                      Long Break Duration (minutes)\n                    </Label>\n                    <Input\n                      id=\"long-break-duration\"\n                      type=\"number\"\n                      min=\"1\"\n                      max=\"60\"\n                      value={tempSettings.longBreakDuration}\n                      onChange={(e) => setTempSettings({ ...tempSettings, longBreakDuration: parseInt(e.target.value) || 1 })}\n                      className=\"bg-white/20 border-white/30 text-white placeholder:text-white/50 backdrop-blur-sm text-lg\"\n                    />\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"long-break-interval\" className=\"text-white text-lg\">\n                      Long Break Interval (pomodoros)\n                    </Label>\n                    <Input\n                      id=\"long-break-interval\"\n                      type=\"number\"\n                      min=\"2\"\n                      max=\"10\"\n                      value={tempSettings.longBreakInterval}\n                      onChange={(e) => setTempSettings({ ...tempSettings, longBreakInterval: parseInt(e.target.value) || 2 })}\n                      className=\"bg-white/20 border-white/30 text-white placeholder:text-white/50 backdrop-blur-sm text-lg\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"flex gap-4 mt-8\">\n                  <Button\n                    onClick={handleSaveSettings}\n                    className=\"flex-1 bg-white/20 hover:bg-white/30 text-white backdrop-blur-sm border border-white/30\"\n                    size=\"lg\"\n                  >\n                    Save Settings\n                  </Button>\n                  <Button\n                    onClick={handleCancelSettings}\n                    variant=\"ghost\"\n                    className=\"flex-1 text-white hover:bg-white/20\"\n                    size=\"lg\"\n                  >\n                    Cancel\n                  </Button>\n                </div>\n              </motion.div>\n            )}\n          </AnimatePresence>\n\n          <AnimatePresence>\n            {showCompletion && (\n              <motion.div\n                initial={{ opacity: 0 }}\n                animate={{ opacity: 1 }}\n                exit={{ opacity: 0 }}\n                className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/50 backdrop-blur-sm\"\n                onClick={() => setShowCompletion(false)}\n              >\n                <motion.div\n                  initial={{ scale: 0, rotate: -180 }}\n                  animate={{ scale: 1, rotate: 0 }}\n                  exit={{ scale: 0, rotate: 180 }}\n                  transition={{ type: \"spring\", duration: 0.6 }}\n                  className=\"bg-white rounded-3xl p-12 shadow-2xl max-w-md mx-4\"\n                  onClick={(e) => e.stopPropagation()}\n                >\n                  <motion.div\n                    initial={{ scale: 0 }}\n                    animate={{ scale: [0, 1.2, 1] }}\n                    transition={{ delay: 0.2, duration: 0.5 }}\n                    className=\"text-center\"\n                  >\n                    <div className=\"text-6xl mb-4\">\ud83c\udf89</div>\n                    <h2 className=\"text-3xl font-bold mb-2 bg-gradient-to-r from-rose-500 via-pink-500 to-purple-500 bg-clip-text text-transparent\">\n                      {currentMode === 'work' ? 'Great Work!' : 'Break Complete!'}\n                    </h2>\n                    <p className=\"text-gray-600 mb-6\">\n                      {currentMode === 'work' \n                        ? 'Time for a well-deserved break!' \n                        : 'Ready to focus again?'}\n                    </p>\n                    <Button\n                      onClick={() => setShowCompletion(false)}\n                      className={`bg-gradient-to-r ${timerModes[currentMode].colors} text-white px-8`}\n                    >\n                      Continue\n                    </Button>\n                  </motion.div>\n                </motion.div>\n\n                {/* Confetti particles */}\n                {Array.from({ length: 100 }).map((_, i) => (\n                  <motion.div\n                    key={i}\n                    className=\"absolute w-3 h-3 rounded-full\"\n                    style={{\n                      left: '50%',\n                      top: '50%',\n                      backgroundColor: [\n                        '#ef4444', '#ec4899', '#a855f7', '#06b6d4', \n                        '#10b981', '#f59e0b', '#3b82f6'\n                      ][i % 7],\n                    }}\n                    initial={{ \n                      x: 0, \n                      y: 0, \n                      opacity: 1,\n                      scale: 0 \n                    }}\n                    animate={{\n                      x: (Math.random() - 0.5) * 1000,\n                      y: Math.random() * -800 + 400,\n                      opacity: 0,\n                      scale: [0, 1, 0.5, 0],\n                      rotate: Math.random() * 720,\n                    }}\n                    transition={{\n                      duration: Math.random() * 2 + 2,\n                      ease: \"easeOut\",\n                    }}\n                  />\n                ))}\n              </motion.div>\n            )}\n          </AnimatePresence>\n\n          {/* Hidden audio element for completion sound */}\n          <audio\n            ref={audioRef}\n            src=\"data:audio/wav;base64,\n        </motion.div>\n      </div>\n    </div>\n  );\n}",
      "error": null,
      "overall_score": 55,
      "code_quality_score": 16,
      "architecture_score": 14,
      "performance_score": 12,
      "accessibility_score": 13,
      "metadata": {
        "document_id": "eval_room_35eb3b5f677e",
        "prompt_category": "productivity",
        "prompt_complexity": 7.0
      }
    }
  ]
}