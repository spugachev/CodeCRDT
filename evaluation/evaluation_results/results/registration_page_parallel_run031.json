{
  "prompt_id": "registration_page",
  "prompt_name": "User Registration Page",
  "mode": "parallel",
  "run_number": 31,
  "timestamp": "2025-10-14T11:55:39.856051",
  "response_time": 49.302061796188354,
  "total_tokens": null,
  "response_content": "import { useState, useCallback } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { motion } from 'framer-motion';\nimport { Mail, Lock, User, Eye, EyeOff, CheckCircle2, AlertCircle }, Loader2 } from 'lucide-react';\n\ninterface FormData {\n  fullName: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\ninterface FormErrors {\n  fullName?: string;\n  email?: string;\n  password?: string;\n  confirmPassword?: string;\n}\n\nexport default function RegistrationPage() {\n  const [formData, setFormData] = useState<FormData>({\n    fullName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n\n  const [errors, setErrors] = useState<FormErrors>({});\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n\n  const handleInputChange = useCallback((field: keyof FormData, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    setErrors(prev => ({ ...prev, [field]: undefined }));\n  }, []);\n\n  const togglePasswordVisibility = useCallback(() => {\n    setShowPassword(prev => !prev);\n  }, []);\n\n  const toggleConfirmPasswordVisibility = useCallback(() => {\n    setShowConfirmPassword(prev => !prev);\n  }, []);\n\n  const handleSubmit = useCallback((e: React.FormEvent) => {\n    e.preventDefault();\n        // Validate form fields\n    const newErrors: FormErrors = {};\n    \n    // Validate full name\n    if (!formData.fullName.trim()) {\n      newErrors.fullName = 'Full name is required';\n    } else if (formData.fullName.trim().length < 2) {\n      newErrors.fullName = 'Full name must be at least 2 characters';\n    }\n    \n    // Validate email\n    if (!formData.email.trim()) {\n      newErrors.email = 'Email is required';\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\n      newErrors.email = 'Please enter a valid email address';\n    }\n    \n    // Validate password\n    if (!formData.password) {\n      newErrors.password = 'Password is required';\n    } else if (formData.password.length < 8) {\n      newErrors.password = 'Password must be at least 8 characters';\n    } else if (!/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/.test(formData.password)) {\n      newErrors.password = 'Password must contain uppercase, lowercase, and number';\n    }\n    \n    // Validate confirm password\n    if (!formData.confirmPassword) {\n      newErrors.confirmPassword = 'Please confirm your password';\n    } else if (formData.password !== formData.confirmPassword) {\n      newErrors.confirmPassword = 'Passwords do not match';\n    }\n    \n    // If there are errors, set them and return\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n    \n    // Simulate form submission\n    setIsSubmitting(true);\n    setErrors({});\n    \n    setTimeout(() => {\n      setIsSubmitting(false);\n      setIsSuccess(true);\n      \n      // Reset form after success\n      setTimeout(() => {\n        setFormData({\n          fullName: '',\n          email: '',\n          password: '',\n          confirmPassword: ''\n        });\n        setIsSuccess(false);\n      }, 3000);\n    }, 2000);\n  }, [formData]);\n\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center p-4 bg-gradient-to-br from-purple-600 via-pink-500 to-orange-400 relative overflow-hidden\">\n      <motion.div\n        className=\"absolute inset-0 overflow-hidden pointer-events-none\"\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ duration: 1 }}\n      >\n        <motion.div\n          className=\"absolute w-96 h-96 bg-purple-400/30 rounded-full blur-3xl\"\n          animate={{\n            x: [0, 100, 0],\n            y: [0, -100, 0],\n            scale: [1, 1.2, 1],\n          }}\n          transition={{\n            duration: 20,\n            repeat: Infinity,\n            ease: \"easeInOut\"\n          }}\n          style={{ top: '10%', left: '10%' }}\n        />\n        <motion.div\n          className=\"absolute w-80 h-80 bg-pink-400/30 rounded-full blur-3xl\"\n          animate={{\n            x: [0, -80, 0],\n            y: [0, 80, 0],\n            scale: [1, 1.3, 1],\n          }}\n          transition={{\n            duration: 15,\n            repeat: Infinity,\n            ease: \"easeInOut\"\n          }}\n          style={{ top: '60%', right: '15%' }}\n        />\n        <motion.div\n          className=\"absolute w-72 h-72 bg-orange-400/30 rounded-full blur-3xl\"\n          animate={{\n            x: [0, 60, 0],\n            y: [0, -60, 0],\n            scale: [1, 1.1, 1],\n          }}\n          transition={{\n            duration: 18,\n            repeat: Infinity,\n            ease: \"easeInOut\"\n          }}\n          style={{ bottom: '10%', left: '50%' }}\n        />\n      </motion.div></parameter>\n</invoke>\n\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.6 }}\n        className=\"w-full max-w-md relative z-10\"\n      >\n        <Card className=\"backdrop-blur-sm bg-white/95 shadow-2xl border-0\">\n          <CardHeader className=\"space-y-1 text-center\">\n            <motion.div\n              initial={{ scale: 0 }}\n              animate={{ scale: 1 }}\n              transition={{ delay: 0.2, type: \"spring\", stiffness: 200 }}\n              className=\"mx-auto w-16 h-16 bg-gradient-to-br from-purple-600 to-pink-500 rounded-full flex items-center justify-center mb-4\"\n            >\n              <User className=\"w-8 h-8 text-white\" />\n            </motion.div>\n            <CardTitle className=\"text-3xl font-bold bg-gradient-to-r from-purple-600 to-pink-500 bg-clip-text text-transparent\">\n              Create Account\n            </CardTitle>\n            <CardDescription className=\"text-base\">\n              Join us today and start your journey\n            </CardDescription>\n          </CardHeader>\n\n          <CardContent>\n            {isSuccess ? (\n              <motion.div\n                initial={{ opacity: 0, scale: 0.8 }}\n                animate={{ opacity: 1, scale: 1 }}\n                className=\"text-center py-8\"\n              >\n                <motion.div\n                  initial={{ scale: 0 }}\n                  animate={{ scale: 1 }}\n                  transition={{ type: \"spring\", stiffness: 200, damping: 15 }}\n                  className=\"mb-6\"\n                >\n                  <div className=\"mx-auto w-20 h-20 bg-gradient-to-br from-green-400 to-emerald-500 rounded-full flex items-center justify-center\">\n                    <CheckCircle2 className=\"w-12 h-12 text-white\" />\n                  </div>\n                </motion.div>\n                <motion.h3\n                  initial={{ opacity: 0, y: 10 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ delay: 0.2 }}\n                  className=\"text-2xl font-bold text-gray-800 mb-2\"\n                >\n                  Welcome Aboard!\n                </motion.h3>\n                <motion.p\n                  initial={{ opacity: 0, y: 10 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ delay: 0.3 }}\n                  className=\"text-gray-600\"\n                >\n                  Your account has been created successfully. We're excited to have you with us!\n                </motion.p>\n              </motion.div>\n            ) : (\n              <form onSubmit={handleSubmit} className=\"space-y-4\">\n                <motion.div\n                  initial={{ opacity: 0, x: -20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ delay: 0.3 }}\n                  className=\"space-y-2\"\n                >\n                  <Label htmlFor=\"fullName\" className=\"text-sm font-medium\">\n                    Full Name\n                  </Label>\n                  <div className=\"relative\">\n                    <User className=\"absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-400\" />\n                    <Input\n                      id=\"fullName\"\n                      type=\"text\"\n                      placeholder=\"John Doe\"\n                      value={formData.fullName}\n                      onChange={(e) => handleInputChange('fullName', e.target.value)}\n                      className=\"pl-10\"\n                    />\n                  </div>\n                  {errors.fullName && (\n                    <motion.div\n                      initial={{ opacity: 0, y: -10 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      exit={{ opacity: 0 }}\n                      className=\"flex items-center gap-1 text-red-500 text-sm\"\n                    >\n                      <AlertCircle className=\"w-4 h-4\" />\n                      <span>{errors.fullName}</span>\n                    </motion.div>\n                  )}\n                </motion.div>\n\n                <motion.div\n                  initial={{ opacity: 0, x: -20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ delay: 0.4 }}\n                  className=\"space-y-2\"\n                >\n                  <Label htmlFor=\"email\" className=\"text-sm font-medium\">\n                    Email Address\n                  </Label>\n                  <div className=\"relative\">\n                    <Mail className=\"absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-400\" />\n                    <Input\n                      id=\"email\"\n                      type=\"email\"\n                      placeholder=\"john@example.com\"\n                      value={formData.email}\n                      onChange={(e) => handleInputChange('email', e.target.value)}\n                      className=\"pl-10\"\n                    />\n                  </div>\n                                    {errors.email && (\n                    <motion.div\n                      initial={{ opacity: 0, y: -10 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      exit={{ opacity: 0 }}\n                      className=\"flex items-center gap-2 text-red-500 text-sm\"\n                    >\n                      <AlertCircle className=\"w-4 h-4\" />\n                      <span>{errors.email}</span>\n                    </motion.div>\n                  )}\n                </motion.div>\n\n                <motion.div\n                  initial={{ opacity: 0, x: -20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ delay: 0.5 }}\n                  className=\"space-y-2\"\n                >\n                  <Label htmlFor=\"password\" className=\"text-sm font-medium\">\n                    Password\n                  </Label>\n                  <div className=\"relative\">\n                    <Lock className=\"absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-400\" />\n                    <Input\n                      id=\"password\"\n                      type={showPassword ? 'text' : 'password'}\n                      placeholder=\"\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\"\n                      value={formData.password}\n                      onChange={(e) => handleInputChange('password', e.target.value)}\n                      className=\"pl-10 pr-10\"\n                    />\n                    <button\n                      type=\"button\"\n                      onClick={togglePasswordVisibility}\n                      className=\"absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-600\"\n                    >\n                      {showPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n                    </button>\n                  </div>\n                  {errors.password && (\n                    <motion.div\n                      initial={{ opacity: 0, y: -10 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      exit={{ opacity: 0 }}\n                      className=\"flex items-center gap-2 text-red-500 text-sm\"\n                    >\n                      <AlertCircle className=\"w-4 h-4\" />\n                      <span>{errors.password}</span>\n                    </motion.div>\n                  )}\n                                    {formData.password && (\n                    <motion.div\n                      initial={{ opacity: 0, height: 0 }}\n                      animate={{ opacity: 1, height: 'auto' }}\n                      exit={{ opacity: 0, height: 0 }}\n                      transition={{ duration: 0.3 }}\n                      className=\"space-y-2 mt-2\"\n                    >\n                      <div className=\"flex items-center justify-between text-xs\">\n                        <span className=\"text-gray-600\">Password Strength</span>\n                        <span className={`font-medium ${\n                          formData.password.length < 4 ? 'text-red-500' :\n                          formData.password.length < 8 ? 'text-orange-500' :\n                          !/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/.test(formData.password) ? 'text-yellow-500' :\n                          'text-green-500'\n                        }`}>\n                          {formData.password.length < 4 ? 'Weak' :\n                           formData.password.length < 8 ? 'Fair' :\n                           !/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/.test(formData.password) ? 'Good' :\n                           'Strong'}\n                        </span>\n                      </div>\n                      <div className=\"flex gap-1\">\n                        {[1, 2, 3, 4].map((bar) => (\n                          <motion.div\n                            key={bar}\n                            initial={{ scaleX: 0 }}\n                            animate={{ scaleX: 1 }}\n                            transition={{ delay: bar * 0.1 }}\n                            className=\"h-1.5 flex-1 rounded-full bg-gray-200 overflow-hidden\"\n                          >\n                            <motion.div\n                              initial={{ width: 0 }}\n                              animate={{\n                                width: formData.password.length < 4 && bar === 1 ? '100%' :\n                                       formData.password.length < 8 && bar <= 2 ? '100%' :\n                                       formData.password.length >= 8 && !/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/.test(formData.password) && bar <= 3 ? '100%' :\n                                       /(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/.test(formData.password) && formData.password.length >= 8 ? '100%' :\n                                       '0%'\n                              }}\n                              transition={{ duration: 0.3 }}\n                              className={`h-full ${\n                                formData.password.length < 4 ? 'bg-red-500' :\n                                formData.password.length < 8 ? 'bg-orange-500' :\n                                !/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/.test(formData.password) ? 'bg-yellow-500' :\n                                'bg-green-500'\n                              }`}\n                            />\n                          </motion.div>\n                        ))}\n                      </div>\n                    </motion.div>\n                  )}</parameter>\n                </motion.div>\n\n                <motion.div\n                  initial={{ opacity: 0, x: -20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ delay: 0.6 }}\n                  className=\"space-y-2\"\n                >\n                  <Label htmlFor=\"confirmPassword\" className=\"text-sm font-medium\">\n                    Confirm Password\n                  </Label>\n                  <div className=\"relative\">\n                    <Lock className=\"absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-400\" />\n                    <Input\n                      id=\"confirmPassword\"\n                      type={showConfirmPassword ? 'text' : 'password'}\n                      placeholder=\"\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\"\n                      value={formData.confirmPassword}\n                      onChange={(e) => handleInputChange('confirmPassword', e.target.value)}\n                      className=\"pl-10 pr-10\"\n                    />\n                    <button\n                      type=\"button\"\n                      onClick={toggleConfirmPasswordVisibility}\n                      className=\"absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-600\"\n                    >\n                      {showConfirmPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n                    </button>\n                  </div>\n                                    {errors.confirmPassword && (\n                    <motion.div\n                      initial={{ opacity: 0, y: -10 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      exit={{ opacity: 0 }}\n                      className=\"flex items-center gap-2 text-red-500 text-sm\"\n                    >\n                      <AlertCircle className=\"w-4 h-4\" />\n                      <span>{errors.confirmPassword}</span>\n                    </motion.div>\n                  )}\n                </motion.div>\n\n                <motion.div\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ delay: 0.7 }}\n                >\n                  <Button\n                    type=\"submit\"\n                    disabled={isSubmitting}\n                    className=\"w-full bg-gradient-to-r from-purple-600 to-pink-500 hover:from-purple-700 hover:to-pink-600 text-white font-semibold py-6 text-base\"\n                  >\n                    {isSubmitting ? (\n                      <>\n                        <Loader2 className=\"w-5 h-5 animate-spin mr-2 inline-block\" />\n                        Creating Account...\n                      </>\n                    ) : (\n                      'Create Account'\n                    )}\n                  </Button>\n                </motion.div>\n              </form>\n            )}\n          </CardContent>\n\n          <CardFooter className=\"flex flex-col space-y-4\">\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ delay: 0.8 }}\n              className=\"text-center text-sm text-gray-600\"\n            >\n              Already have an account?{' '}\n              <a href=\"#\" className=\"text-purple-600 hover:text-purple-700 font-semibold\">\n                Sign in\n              </a>\n            </motion.div>\n          </CardFooter>\n        </Card>\n      </motion.div>\n    </div>\n  );\n}",
  "error": null,
  "overall_score": 73,
  "code_quality_score": 18,
  "architecture_score": 16,
  "performance_score": 19,
  "accessibility_score": 20,
  "metadata": {
    "document_id": "eval_room_240512abb39a",
    "prompt_category": "simple",
    "prompt_complexity": 3.0
  },
  "raw_response": {
    "document_id": "eval_room_240512abb39a",
    "mode": "parallel",
    "prompt": "Generate a beautiful user registration page with form validation, smooth animations, gradient background, and modern design",
    "content": "import { useState, useCallback } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { motion } from 'framer-motion';\nimport { Mail, Lock, User, Eye, EyeOff, CheckCircle2, AlertCircle }, Loader2 } from 'lucide-react';\n\ninterface FormData {\n  fullName: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\ninterface FormErrors {\n  fullName?: string;\n  email?: string;\n  password?: string;\n  confirmPassword?: string;\n}\n\nexport default function RegistrationPage() {\n  const [formData, setFormData] = useState<FormData>({\n    fullName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n\n  const [errors, setErrors] = useState<FormErrors>({});\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n\n  const handleInputChange = useCallback((field: keyof FormData, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n    setErrors(prev => ({ ...prev, [field]: undefined }));\n  }, []);\n\n  const togglePasswordVisibility = useCallback(() => {\n    setShowPassword(prev => !prev);\n  }, []);\n\n  const toggleConfirmPasswordVisibility = useCallback(() => {\n    setShowConfirmPassword(prev => !prev);\n  }, []);\n\n  const handleSubmit = useCallback((e: React.FormEvent) => {\n    e.preventDefault();\n        // Validate form fields\n    const newErrors: FormErrors = {};\n    \n    // Validate full name\n    if (!formData.fullName.trim()) {\n      newErrors.fullName = 'Full name is required';\n    } else if (formData.fullName.trim().length < 2) {\n      newErrors.fullName = 'Full name must be at least 2 characters';\n    }\n    \n    // Validate email\n    if (!formData.email.trim()) {\n      newErrors.email = 'Email is required';\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\n      newErrors.email = 'Please enter a valid email address';\n    }\n    \n    // Validate password\n    if (!formData.password) {\n      newErrors.password = 'Password is required';\n    } else if (formData.password.length < 8) {\n      newErrors.password = 'Password must be at least 8 characters';\n    } else if (!/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/.test(formData.password)) {\n      newErrors.password = 'Password must contain uppercase, lowercase, and number';\n    }\n    \n    // Validate confirm password\n    if (!formData.confirmPassword) {\n      newErrors.confirmPassword = 'Please confirm your password';\n    } else if (formData.password !== formData.confirmPassword) {\n      newErrors.confirmPassword = 'Passwords do not match';\n    }\n    \n    // If there are errors, set them and return\n    if (Object.keys(newErrors).length > 0) {\n      setErrors(newErrors);\n      return;\n    }\n    \n    // Simulate form submission\n    setIsSubmitting(true);\n    setErrors({});\n    \n    setTimeout(() => {\n      setIsSubmitting(false);\n      setIsSuccess(true);\n      \n      // Reset form after success\n      setTimeout(() => {\n        setFormData({\n          fullName: '',\n          email: '',\n          password: '',\n          confirmPassword: ''\n        });\n        setIsSuccess(false);\n      }, 3000);\n    }, 2000);\n  }, [formData]);\n\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center p-4 bg-gradient-to-br from-purple-600 via-pink-500 to-orange-400 relative overflow-hidden\">\n      <motion.div\n        className=\"absolute inset-0 overflow-hidden pointer-events-none\"\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ duration: 1 }}\n      >\n        <motion.div\n          className=\"absolute w-96 h-96 bg-purple-400/30 rounded-full blur-3xl\"\n          animate={{\n            x: [0, 100, 0],\n            y: [0, -100, 0],\n            scale: [1, 1.2, 1],\n          }}\n          transition={{\n            duration: 20,\n            repeat: Infinity,\n            ease: \"easeInOut\"\n          }}\n          style={{ top: '10%', left: '10%' }}\n        />\n        <motion.div\n          className=\"absolute w-80 h-80 bg-pink-400/30 rounded-full blur-3xl\"\n          animate={{\n            x: [0, -80, 0],\n            y: [0, 80, 0],\n            scale: [1, 1.3, 1],\n          }}\n          transition={{\n            duration: 15,\n            repeat: Infinity,\n            ease: \"easeInOut\"\n          }}\n          style={{ top: '60%', right: '15%' }}\n        />\n        <motion.div\n          className=\"absolute w-72 h-72 bg-orange-400/30 rounded-full blur-3xl\"\n          animate={{\n            x: [0, 60, 0],\n            y: [0, -60, 0],\n            scale: [1, 1.1, 1],\n          }}\n          transition={{\n            duration: 18,\n            repeat: Infinity,\n            ease: \"easeInOut\"\n          }}\n          style={{ bottom: '10%', left: '50%' }}\n        />\n      </motion.div></parameter>\n</invoke>\n\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.6 }}\n        className=\"w-full max-w-md relative z-10\"\n      >\n        <Card className=\"backdrop-blur-sm bg-white/95 shadow-2xl border-0\">\n          <CardHeader className=\"space-y-1 text-center\">\n            <motion.div\n              initial={{ scale: 0 }}\n              animate={{ scale: 1 }}\n              transition={{ delay: 0.2, type: \"spring\", stiffness: 200 }}\n              className=\"mx-auto w-16 h-16 bg-gradient-to-br from-purple-600 to-pink-500 rounded-full flex items-center justify-center mb-4\"\n            >\n              <User className=\"w-8 h-8 text-white\" />\n            </motion.div>\n            <CardTitle className=\"text-3xl font-bold bg-gradient-to-r from-purple-600 to-pink-500 bg-clip-text text-transparent\">\n              Create Account\n            </CardTitle>\n            <CardDescription className=\"text-base\">\n              Join us today and start your journey\n            </CardDescription>\n          </CardHeader>\n\n          <CardContent>\n            {isSuccess ? (\n              <motion.div\n                initial={{ opacity: 0, scale: 0.8 }}\n                animate={{ opacity: 1, scale: 1 }}\n                className=\"text-center py-8\"\n              >\n                <motion.div\n                  initial={{ scale: 0 }}\n                  animate={{ scale: 1 }}\n                  transition={{ type: \"spring\", stiffness: 200, damping: 15 }}\n                  className=\"mb-6\"\n                >\n                  <div className=\"mx-auto w-20 h-20 bg-gradient-to-br from-green-400 to-emerald-500 rounded-full flex items-center justify-center\">\n                    <CheckCircle2 className=\"w-12 h-12 text-white\" />\n                  </div>\n                </motion.div>\n                <motion.h3\n                  initial={{ opacity: 0, y: 10 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ delay: 0.2 }}\n                  className=\"text-2xl font-bold text-gray-800 mb-2\"\n                >\n                  Welcome Aboard!\n                </motion.h3>\n                <motion.p\n                  initial={{ opacity: 0, y: 10 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ delay: 0.3 }}\n                  className=\"text-gray-600\"\n                >\n                  Your account has been created successfully. We're excited to have you with us!\n                </motion.p>\n              </motion.div>\n            ) : (\n              <form onSubmit={handleSubmit} className=\"space-y-4\">\n                <motion.div\n                  initial={{ opacity: 0, x: -20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ delay: 0.3 }}\n                  className=\"space-y-2\"\n                >\n                  <Label htmlFor=\"fullName\" className=\"text-sm font-medium\">\n                    Full Name\n                  </Label>\n                  <div className=\"relative\">\n                    <User className=\"absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-400\" />\n                    <Input\n                      id=\"fullName\"\n                      type=\"text\"\n                      placeholder=\"John Doe\"\n                      value={formData.fullName}\n                      onChange={(e) => handleInputChange('fullName', e.target.value)}\n                      className=\"pl-10\"\n                    />\n                  </div>\n                  {errors.fullName && (\n                    <motion.div\n                      initial={{ opacity: 0, y: -10 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      exit={{ opacity: 0 }}\n                      className=\"flex items-center gap-1 text-red-500 text-sm\"\n                    >\n                      <AlertCircle className=\"w-4 h-4\" />\n                      <span>{errors.fullName}</span>\n                    </motion.div>\n                  )}\n                </motion.div>\n\n                <motion.div\n                  initial={{ opacity: 0, x: -20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ delay: 0.4 }}\n                  className=\"space-y-2\"\n                >\n                  <Label htmlFor=\"email\" className=\"text-sm font-medium\">\n                    Email Address\n                  </Label>\n                  <div className=\"relative\">\n                    <Mail className=\"absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-400\" />\n                    <Input\n                      id=\"email\"\n                      type=\"email\"\n                      placeholder=\"john@example.com\"\n                      value={formData.email}\n                      onChange={(e) => handleInputChange('email', e.target.value)}\n                      className=\"pl-10\"\n                    />\n                  </div>\n                                    {errors.email && (\n                    <motion.div\n                      initial={{ opacity: 0, y: -10 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      exit={{ opacity: 0 }}\n                      className=\"flex items-center gap-2 text-red-500 text-sm\"\n                    >\n                      <AlertCircle className=\"w-4 h-4\" />\n                      <span>{errors.email}</span>\n                    </motion.div>\n                  )}\n                </motion.div>\n\n                <motion.div\n                  initial={{ opacity: 0, x: -20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ delay: 0.5 }}\n                  className=\"space-y-2\"\n                >\n                  <Label htmlFor=\"password\" className=\"text-sm font-medium\">\n                    Password\n                  </Label>\n                  <div className=\"relative\">\n                    <Lock className=\"absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-400\" />\n                    <Input\n                      id=\"password\"\n                      type={showPassword ? 'text' : 'password'}\n                      placeholder=\"\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\"\n                      value={formData.password}\n                      onChange={(e) => handleInputChange('password', e.target.value)}\n                      className=\"pl-10 pr-10\"\n                    />\n                    <button\n                      type=\"button\"\n                      onClick={togglePasswordVisibility}\n                      className=\"absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-600\"\n                    >\n                      {showPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n                    </button>\n                  </div>\n                  {errors.password && (\n                    <motion.div\n                      initial={{ opacity: 0, y: -10 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      exit={{ opacity: 0 }}\n                      className=\"flex items-center gap-2 text-red-500 text-sm\"\n                    >\n                      <AlertCircle className=\"w-4 h-4\" />\n                      <span>{errors.password}</span>\n                    </motion.div>\n                  )}\n                                    {formData.password && (\n                    <motion.div\n                      initial={{ opacity: 0, height: 0 }}\n                      animate={{ opacity: 1, height: 'auto' }}\n                      exit={{ opacity: 0, height: 0 }}\n                      transition={{ duration: 0.3 }}\n                      className=\"space-y-2 mt-2\"\n                    >\n                      <div className=\"flex items-center justify-between text-xs\">\n                        <span className=\"text-gray-600\">Password Strength</span>\n                        <span className={`font-medium ${\n                          formData.password.length < 4 ? 'text-red-500' :\n                          formData.password.length < 8 ? 'text-orange-500' :\n                          !/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/.test(formData.password) ? 'text-yellow-500' :\n                          'text-green-500'\n                        }`}>\n                          {formData.password.length < 4 ? 'Weak' :\n                           formData.password.length < 8 ? 'Fair' :\n                           !/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/.test(formData.password) ? 'Good' :\n                           'Strong'}\n                        </span>\n                      </div>\n                      <div className=\"flex gap-1\">\n                        {[1, 2, 3, 4].map((bar) => (\n                          <motion.div\n                            key={bar}\n                            initial={{ scaleX: 0 }}\n                            animate={{ scaleX: 1 }}\n                            transition={{ delay: bar * 0.1 }}\n                            className=\"h-1.5 flex-1 rounded-full bg-gray-200 overflow-hidden\"\n                          >\n                            <motion.div\n                              initial={{ width: 0 }}\n                              animate={{\n                                width: formData.password.length < 4 && bar === 1 ? '100%' :\n                                       formData.password.length < 8 && bar <= 2 ? '100%' :\n                                       formData.password.length >= 8 && !/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/.test(formData.password) && bar <= 3 ? '100%' :\n                                       /(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/.test(formData.password) && formData.password.length >= 8 ? '100%' :\n                                       '0%'\n                              }}\n                              transition={{ duration: 0.3 }}\n                              className={`h-full ${\n                                formData.password.length < 4 ? 'bg-red-500' :\n                                formData.password.length < 8 ? 'bg-orange-500' :\n                                !/(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/.test(formData.password) ? 'bg-yellow-500' :\n                                'bg-green-500'\n                              }`}\n                            />\n                          </motion.div>\n                        ))}\n                      </div>\n                    </motion.div>\n                  )}</parameter>\n                </motion.div>\n\n                <motion.div\n                  initial={{ opacity: 0, x: -20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  transition={{ delay: 0.6 }}\n                  className=\"space-y-2\"\n                >\n                  <Label htmlFor=\"confirmPassword\" className=\"text-sm font-medium\">\n                    Confirm Password\n                  </Label>\n                  <div className=\"relative\">\n                    <Lock className=\"absolute left-3 top-1/2 -translate-y-1/2 w-5 h-5 text-gray-400\" />\n                    <Input\n                      id=\"confirmPassword\"\n                      type={showConfirmPassword ? 'text' : 'password'}\n                      placeholder=\"\u2022\u2022\u2022\u2022\u2022\u2022\u2022\u2022\"\n                      value={formData.confirmPassword}\n                      onChange={(e) => handleInputChange('confirmPassword', e.target.value)}\n                      className=\"pl-10 pr-10\"\n                    />\n                    <button\n                      type=\"button\"\n                      onClick={toggleConfirmPasswordVisibility}\n                      className=\"absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 hover:text-gray-600\"\n                    >\n                      {showConfirmPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n                    </button>\n                  </div>\n                                    {errors.confirmPassword && (\n                    <motion.div\n                      initial={{ opacity: 0, y: -10 }}\n                      animate={{ opacity: 1, y: 0 }}\n                      exit={{ opacity: 0 }}\n                      className=\"flex items-center gap-2 text-red-500 text-sm\"\n                    >\n                      <AlertCircle className=\"w-4 h-4\" />\n                      <span>{errors.confirmPassword}</span>\n                    </motion.div>\n                  )}\n                </motion.div>\n\n                <motion.div\n                  initial={{ opacity: 0, y: 20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  transition={{ delay: 0.7 }}\n                >\n                  <Button\n                    type=\"submit\"\n                    disabled={isSubmitting}\n                    className=\"w-full bg-gradient-to-r from-purple-600 to-pink-500 hover:from-purple-700 hover:to-pink-600 text-white font-semibold py-6 text-base\"\n                  >\n                    {isSubmitting ? (\n                      <>\n                        <Loader2 className=\"w-5 h-5 animate-spin mr-2 inline-block\" />\n                        Creating Account...\n                      </>\n                    ) : (\n                      'Create Account'\n                    )}\n                  </Button>\n                </motion.div>\n              </form>\n            )}\n          </CardContent>\n\n          <CardFooter className=\"flex flex-col space-y-4\">\n            <motion.div\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ delay: 0.8 }}\n              className=\"text-center text-sm text-gray-600\"\n            >\n              Already have an account?{' '}\n              <a href=\"#\" className=\"text-purple-600 hover:text-purple-700 font-semibold\">\n                Sign in\n              </a>\n            </motion.div>\n          </CardFooter>\n        </Card>\n      </motion.div>\n    </div>\n  );\n}",
    "error": null,
    "elapsed_time": 49.302061796188354,
    "success": true
  }
}