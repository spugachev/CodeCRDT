{
  "prompt_id": "markdown_editor",
  "prompt_name": "Premium Markdown Editor",
  "mode": "sequential",
  "run_number": 11,
  "timestamp": "2025-10-14T10:48:15.625278",
  "response_time": 69.33098793029785,
  "total_tokens": null,
  "response_content": "import { useState, useEffect, useRef } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Bold, Italic, Code, List, ListOrdered, Link2, Image, Eye, EyeOff, Heading1, Heading2, Quote } from 'lucide-react';\nimport { motion, AnimatePresence } from 'framer-motion';\n\nexport default function MarkdownEditor() {\n  const [markdown, setMarkdown] = useState(`# Welcome to Premium Markdown Editor\n\n## Features\n- **Bold** and *italic* text\n- \\`Inline code\\` with syntax highlighting\n- Code blocks with VS Code styling\n- Live preview with smooth transitions\n\n### Code Example\n\n\\`\\`\\`javascript\nfunction greet(name) {\n  console.log(\\`Hello, \\${name}!\\`);\n  return true;\n}\n\nconst user = \"Developer\";\ngreet(user);\n\\`\\`\\`\n\n### More Examples\n\n\\`\\`\\`typescript\ninterface User {\n  id: number;\n  name: string;\n  email: string;\n}\n\nconst users: User[] = [\n  { id: 1, name: \"Alice\", email: \"alice@example.com\" },\n  { id: 2, name: \"Bob\", email: \"bob@example.com\" }\n];\n\\`\\`\\`\n\n> This is a blockquote with **bold** text\n\n1. First ordered item\n2. Second ordered item\n3. Third ordered item\n\n- Unordered list item\n- Another item\n- And another\n\n[Link to example](https://example.com)\n\n![Image alt text](https://via.placeholder.com/400x200)\n`);\n  const [showPreview, setShowPreview] = useState(true);\n  const [cursorPosition, setCursorPosition] = useState(0);\n  const [showToolbar, setShowToolbar] = useState(false);\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n  const editorRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      if (textareaRef.current && textareaRef.current.scrollTop > 50) {\n        setShowToolbar(true);\n      } else {\n        setShowToolbar(false);\n      }\n    };\n\n    const textarea = textareaRef.current;\n    textarea?.addEventListener('scroll', handleScroll);\n    return () => textarea?.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  const insertMarkdown = (before: string, after: string = '') => {\n    const textarea = textareaRef.current;\n    if (!textarea) return;\n\n    const start = textarea.selectionStart;\n    const end = textarea.selectionEnd;\n    const selectedText = markdown.substring(start, end);\n    const newText = markdown.substring(0, start) + before + selectedText + after + markdown.substring(end);\n    \n    setMarkdown(newText);\n    \n    setTimeout(() => {\n      textarea.focus();\n      textarea.setSelectionRange(start + before.length, start + before.length + selectedText.length);\n    }, 0);\n  };\n\n  const parseMarkdown = (text: string): string => {\n    let html = text;\n\n    // Code blocks with syntax highlighting\n    html = html.replace(/```(\\w+)?\\n([\\s\\S]*?)```/g, (match, lang, code) => {\n      const highlighted = highlightCode(code.trim(), lang || 'javascript');\n      return `<pre class=\"code-block\"><code class=\"language-${lang || 'javascript'}\">${highlighted}</code></pre>`;\n    });\n\n    // Inline code\n    html = html.replace(/`([^`]+)`/g, '<code class=\"inline-code\">$1</code>');\n\n    // Headers\n    html = html.replace(/^### (.*$)/gim, '<h3>$1</h3>');\n    html = html.replace(/^## (.*$)/gim, '<h2>$1</h2>');\n    html = html.replace(/^# (.*$)/gim, '<h1>$1</h1>');\n\n    // Bold\n    html = html.replace(/\\*\\*(.+?)\\*\\*/g, '<strong>$1</strong>');\n\n    // Italic\n    html = html.replace(/\\*(.+?)\\*/g, '<em>$1</em>');\n\n    // Blockquotes\n    html = html.replace(/^> (.*$)/gim, '<blockquote>$1</blockquote>');\n\n    // Ordered lists\n    html = html.replace(/^\\d+\\.\\s(.+)$/gim, '<li class=\"ordered\">$1</li>');\n    html = html.replace(/(<li class=\"ordered\">.*<\\/li>)/s, '<ol>$1</ol>');\n\n    // Unordered lists\n    html = html.replace(/^[-*]\\s(.+)$/gim, '<li class=\"unordered\">$1</li>');\n    html = html.replace(/(<li class=\"unordered\">.*<\\/li>)/s, '<ul>$1</ul>');\n\n    // Links\n    html = html.replace(/\\[([^\\]]+)\\]\\(([^)]+)\\)/g, '<a href=\"$2\" target=\"_blank\" rel=\"noopener noreferrer\">$1</a>');\n\n    // Images\n    html = html.replace(/!\\[([^\\]]*)\\]\\(([^)]+)\\)/g, '<img src=\"$2\" alt=\"$1\" />');\n\n    // Line breaks\n    html = html.replace(/\\n/g, '<br />');\n\n    return html;\n  };\n\n  const highlightCode = (code: string, lang: string): string => {\n    const keywords = ['function', 'const', 'let', 'var', 'return', 'if', 'else', 'for', 'while', 'class', 'interface', 'type', 'import', 'export', 'default', 'async', 'await', 'new', 'this', 'extends', 'implements'];\n    const types = ['string', 'number', 'boolean', 'void', 'any', 'unknown', 'never', 'User', 'Array'];\n    \n    let highlighted = code;\n\n    // Comments\n    highlighted = highlighted.replace(/(\\/\\/.*$)/gm, '<span class=\"token-comment\">$1</span>');\n    highlighted = highlighted.replace(/(\\/\\*[\\s\\S]*?\\*\\/)/g, '<span class=\"token-comment\">$1</span>');\n\n    // Strings\n    highlighted = highlighted.replace(/(\".*?\"|'.*?'|`.*?`)/g, '<span class=\"token-string\">$1</span>');\n\n    // Numbers\n    highlighted = highlighted.replace(/\\b(\\d+)\\b/g, '<span class=\"token-number\">$1</span>');\n\n    // Keywords\n    keywords.forEach(keyword => {\n      const regex = new RegExp(`\\\\b(${keyword})\\\\b`, 'g');\n      highlighted = highlighted.replace(regex, '<span class=\"token-keyword\">$1</span>');\n    });\n\n    // Types\n    types.forEach(type => {\n      const regex = new RegExp(`\\\\b(${type})\\\\b`, 'g');\n      highlighted = highlighted.replace(regex, '<span class=\"token-type\">$1</span>');\n    });\n\n    // Functions\n    highlighted = highlighted.replace(/\\b([a-zA-Z_]\\w*)\\s*\\(/g, '<span class=\"token-function\">$1</span>(');\n\n    return highlighted;\n  };\n\n  return (\n    <div className=\"min-h-screen bg-[#0d1117] text-gray-100\">\n      <div className=\"max-w-[1800px] mx-auto p-6\">\n        <div className=\"mb-6 flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-3xl font-bold bg-gradient-to-r from-blue-400 via-purple-400 to-pink-400 bg-clip-text text-transparent\">\n              Premium Markdown Editor\n            </h1>\n            <p className=\"text-gray-400 mt-1\">Write beautiful markdown with live preview</p>\n          </div>\n          <Button\n            onClick={() => setShowPreview(!showPreview)}\n            className=\"bg-[#21262d] hover:bg-[#30363d] text-gray-100 border border-[#30363d]\"\n          >\n            {showPreview ? <EyeOff className=\"w-4 h-4 mr-2\" /> : <Eye className=\"w-4 h-4 mr-2\" />}\n            {showPreview ? 'Hide Preview' : 'Show Preview'}\n          </Button>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {/* Editor Section */}\n          <div className=\"relative\" ref={editorRef}>\n            <AnimatePresence>\n              {showToolbar && (\n                <motion.div\n                  initial={{ opacity: 0, y: -20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  exit={{ opacity: 0, y: -20 }}\n                  className=\"absolute top-4 left-4 right-4 z-10 bg-[#161b22] border border-[#30363d] rounded-lg p-2 shadow-2xl backdrop-blur-sm\"\n                >\n                  <div className=\"flex items-center gap-1 flex-wrap\">\n                    <Button\n                      size=\"sm\"\n                      variant=\"ghost\"\n                      onClick={() => insertMarkdown('# ', '')}\n                      className=\"hover:bg-[#21262d] hover:text-blue-400 transition-colors\"\n                      title=\"Heading 1\"\n                    >\n                      <Heading1 className=\"w-4 h-4\" />\n                    </Button>\n                    <Button\n                      size=\"sm\"\n                      variant=\"ghost\"\n                      onClick={() => insertMarkdown('## ', '')}\n                      className=\"hover:bg-[#21262d] hover:text-blue-400 transition-colors\"\n                      title=\"Heading 2\"\n                    >\n                      <Heading2 className=\"w-4 h-4\" />\n                    </Button>\n                    <div className=\"w-px h-6 bg-[#30363d] mx-1\" />\n                    <Button\n                      size=\"sm\"\n                      variant=\"ghost\"\n                      onClick={() => insertMarkdown('**', '**')}\n                      className=\"hover:bg-[#21262d] hover:text-yellow-400 transition-colors\"\n                      title=\"Bold\"\n                    >\n                      <Bold className=\"w-4 h-4\" />\n                    </Button>\n                    <Button\n                      size=\"sm\"\n                      variant=\"ghost\"\n                      onClick={() => insertMarkdown('*', '*')}\n                      className=\"hover:bg-[#21262d] hover:text-yellow-400 transition-colors\"\n                      title=\"Italic\"\n                    >\n                      <Italic className=\"w-4 h-4\" />\n                    </Button>\n                    <Button\n                      size=\"sm\"\n                      variant=\"ghost\"\n                      onClick={() => insertMarkdown('`', '`')}\n                      className=\"hover:bg-[#21262d] hover:text-green-400 transition-colors\"\n                      title=\"Inline Code\"\n                    >\n                      <Code className=\"w-4 h-4\" />\n                    </Button>\n                    <div className=\"w-px h-6 bg-[#30363d] mx-1\" />\n                    <Button\n                      size=\"sm\"\n                      variant=\"ghost\"\n                      onClick={() => insertMarkdown('> ', '')}\n                      className=\"hover:bg-[#21262d] hover:text-purple-400 transition-colors\"\n                      title=\"Quote\"\n                    >\n                      <Quote className=\"w-4 h-4\" />\n                    </Button>\n                    <Button\n                      size=\"sm\"\n                      variant=\"ghost\"\n                      onClick={() => insertMarkdown('- ', '')}\n                      className=\"hover:bg-[#21262d] hover:text-pink-400 transition-colors\"\n                      title=\"Unordered List\"\n                    >\n                      <List className=\"w-4 h-4\" />\n                    </Button>\n                    <Button\n                      size=\"sm\"\n                      variant=\"ghost\"\n                      onClick={() => insertMarkdown('1. ', '')}\n                      className=\"hover:bg-[#21262d] hover:text-pink-400 transition-colors\"\n                      title=\"Ordered List\"\n                    >\n                      <ListOrdered className=\"w-4 h-4\" />\n                    </Button>\n                    <div className=\"w-px h-6 bg-[#30363d] mx-1\" />\n                    <Button\n                      size=\"sm\"\n                      variant=\"ghost\"\n                      onClick={() => insertMarkdown('[', '](url)')}\n                      className=\"hover:bg-[#21262d] hover:text-cyan-400 transition-colors\"\n                      title=\"Link\"\n                    >\n                      <Link2 className=\"w-4 h-4\" />\n                    </Button>\n                    <Button\n                      size=\"sm\"\n                      variant=\"ghost\"\n                      onClick={() => insertMarkdown('![alt](', ')')}\n                      className=\"hover:bg-[#21262d] hover:text-cyan-400 transition-colors\"\n                      title=\"Image\"\n                    >\n                      <Image className=\"w-4 h-4\" />\n                    </Button>\n                  </div>\n                </motion.div>\n              )}\n            </AnimatePresence>\n\n            <div className=\"bg-[#0d1117] border border-[#30363d] rounded-lg overflow-hidden shadow-2xl\">\n              <div className=\"bg-[#161b22] border-b border-[#30363d] px-4 py-3 flex items-center justify-between\">\n                <span className=\"text-sm font-medium text-gray-300\">Editor</span>\n                <div className=\"flex gap-2\">\n                  <div className=\"w-3 h-3 rounded-full bg-red-500/80\" />\n                  <div className=\"w-3 h-3 rounded-full bg-yellow-500/80\" />\n                  <div className=\"w-3 h-3 rounded-full bg-green-500/80\" />\n                </div>\n              </div>\n              <textarea\n                ref={textareaRef}\n                value={markdown}\n                onChange={(e) => setMarkdown(e.target.value)}\n                onSelect={(e) => setCursorPosition(e.currentTarget.selectionStart)}\n                className=\"w-full h-[calc(100vh-280px)] p-6 bg-[#0d1117] text-gray-100 font-mono text-sm resize-none focus:outline-none leading-relaxed\"\n                placeholder=\"Start writing your markdown here...\"\n                spellCheck={false}\n              />\n              <div className=\"bg-[#161b22] border-t border-[#30363d] px-4 py-2 text-xs text-gray-400\">\n                {markdown.split('\\n').length} lines \u00b7 {markdown.length} characters\n              </div>\n            </div>\n          </div>\n\n          {/* Preview Section */}\n          <AnimatePresence mode=\"wait\">\n            {showPreview && (\n              <motion.div\n                initial={{ opacity: 0, x: 20 }}\n                animate={{ opacity: 1, x: 0 }}\n                exit={{ opacity: 0, x: 20 }}\n                transition={{ duration: 0.3 }}\n                className=\"bg-[#0d1117] border border-[#30363d] rounded-lg overflow-hidden shadow-2xl\"\n              >\n                <div className=\"bg-[#161b22] border-b border-[#30363d] px-4 py-3 flex items-center justify-between\">\n                  <span className=\"text-sm font-medium text-gray-300\">Preview</span>\n                  <div className=\"flex gap-2\">\n                    <div className=\"w-3 h-3 rounded-full bg-red-500/80\" />\n                    <div className=\"w-3 h-3 rounded-full bg-yellow-500/80\" />\n                    <div className=\"w-3 h-3 rounded-full bg-green-500/80\" />\n                  </div>\n                </div>\n                <motion.div\n                  key={markdown}\n                  initial={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                  transition={{ duration: 0.2 }}\n                  className=\"p-6 h-[calc(100vh-280px)] overflow-y-auto markdown-preview\"\n                  dangerouslySetInnerHTML={{ __html: parseMarkdown(markdown) }}\n                />\n              </motion.div>\n            )}\n          </AnimatePresence>\n        </div>\n      </div>\n\n      <style jsx global>{`\n        .markdown-preview {\n          color: #c9d1d9;\n          line-height: 1.6;\n        }\n\n        .markdown-preview h1 {\n          font-size: 2em;\n          font-weight: 700;\n          margin: 0.67em 0;\n          padding-bottom: 0.3em;\n          border-bottom: 1px solid #21262d;\n          color: #58a6ff;\n        }\n\n        .markdown-preview h2 {\n          font-size: 1.5em;\n          font-weight: 700;\n          margin: 0.75em 0 0.5em 0;\n          padding-bottom: 0.3em;\n          border-bottom: 1px solid #21262d;\n          color: #79c0ff;\n        }\n\n        .markdown-preview h3 {\n          font-size: 1.25em;\n          font-weight: 700;\n          margin: 0.75em 0 0.5em 0;\n          color: #a5d6ff;\n        }\n\n        .markdown-preview strong {\n          font-weight: 700;\n          color: #ffd700;\n        }\n\n        .markdown-preview em {\n          font-style: italic;\n          color: #ffa657;\n        }\n\n        .markdown-preview code.inline-code {\n          background: #161b22;\n          border: 1px solid #30363d;\n          border-radius: 6px;\n          padding: 0.2em 0.4em;\n          font-family: 'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace;\n          font-size: 0.85em;\n          color: #79c0ff;\n        }\n\n        .markdown-preview pre.code-block {\n          background: #161b22;\n          border: 1px solid #30363d;\n          border-radius: 8px;\n          padding: 16px;\n          margin: 16px 0;\n          overflow-x: auto;\n          box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.3);\n        }\n\n        .markdown-preview pre.code-block code {\n          font-family: 'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace;\n          font-size: 0.875em;\n          line-height: 1.6;\n          color: #c9d1d9;\n          display: block;\n        }\n\n        .markdown-preview .token-keyword {\n          color: #ff7b72;\n          font-weight: 600;\n        }\n\n        .markdown-preview .token-string {\n          color: #a5d6ff;\n        }\n\n        .markdown-preview .token-number {\n          color: #79c0ff;\n        }\n\n        .markdown-preview .token-function {\n          color: #d2a8ff;\n          font-weight: 600;\n        }\n\n        .markdown-preview .token-comment {\n          color: #8b949e;\n          font-style: italic;\n        }\n\n        .markdown-preview .token-type {\n          color: #ffa657;\n          font-weight: 600;\n        }\n\n        .markdown-preview blockquote {\n          border-left: 4px solid #58a6ff;\n          padding-left: 16px;\n          margin: 16px 0;\n          color: #8b949e;\n          background: #161b22;\n          padding: 12px 16px;\n          border-radius: 4px;\n        }\n\n        .markdown-preview ul, .markdown-preview ol {\n          margin: 16px 0;\n          padding-left: 32px;\n        }\n\n        .markdown-preview li {\n          margin: 8px 0;\n          color: #c9d1d9;\n        }\n\n        .markdown-preview li.ordered {\n          list-style-type: decimal;\n        }\n\n        .markdown-preview li.unordered {\n          list-style-type: disc;\n        }\n\n        .markdown-preview a {\n          color: #58a6ff;\n          text-decoration: none;\n          border-bottom: 1px solid transparent;\n          transition: all 0.2s;\n        }\n\n        .markdown-preview a:hover {\n          border-bottom-color: #58a6ff;\n        }\n\n        .markdown-preview img {\n          max-width: 100%;\n          height: auto;\n          border-radius: 8px;\n          margin: 16px 0;\n          border: 1px solid #30363d;\n        }\n\n        .markdown-preview br {\n          display: block;\n          content: \"\";\n          margin: 0.5em 0;\n        }\n\n        /* Scrollbar styling */\n        .markdown-preview::-webkit-scrollbar,\n        textarea::-webkit-scrollbar {\n          width: 12px;\n        }\n\n        .markdown-preview::-webkit-scrollbar-track,\n        textarea::-webkit-scrollbar-track {\n          background: #0d1117;\n        }\n\n        .markdown-preview::-webkit-scrollbar-thumb,\n        textarea::-webkit-scrollbar-thumb {\n          background: #30363d;\n          border-radius: 6px;\n          border: 2px solid #0d1117;\n        }\n\n        .markdown-preview::-webkit-scrollbar-thumb:hover,\n        textarea::-webkit-scrollbar-thumb:hover {\n          background: #484f58;\n        }\n      `}</style>\n    </div>\n  );\n}",
  "error": null,
  "overall_score": 49,
  "code_quality_score": 15,
  "architecture_score": 12,
  "performance_score": 8,
  "accessibility_score": 14,
  "metadata": {
    "document_id": "eval_room_ce7488c8cf1b",
    "prompt_category": "productivity",
    "prompt_complexity": 8.0
  },
  "raw_response": {
    "document_id": "eval_room_ce7488c8cf1b",
    "mode": "sequential",
    "prompt": "Create a premium markdown editor with dark theme, syntax highlighting with vibrant colors, smooth live preview transitions, floating toolbar with hover effects, and code block styling like VS Code",
    "content": "import { useState, useEffect, useRef } from 'react';\nimport { Button } from '@/components/ui/button';\nimport { Bold, Italic, Code, List, ListOrdered, Link2, Image, Eye, EyeOff, Heading1, Heading2, Quote } from 'lucide-react';\nimport { motion, AnimatePresence } from 'framer-motion';\n\nexport default function MarkdownEditor() {\n  const [markdown, setMarkdown] = useState(`# Welcome to Premium Markdown Editor\n\n## Features\n- **Bold** and *italic* text\n- \\`Inline code\\` with syntax highlighting\n- Code blocks with VS Code styling\n- Live preview with smooth transitions\n\n### Code Example\n\n\\`\\`\\`javascript\nfunction greet(name) {\n  console.log(\\`Hello, \\${name}!\\`);\n  return true;\n}\n\nconst user = \"Developer\";\ngreet(user);\n\\`\\`\\`\n\n### More Examples\n\n\\`\\`\\`typescript\ninterface User {\n  id: number;\n  name: string;\n  email: string;\n}\n\nconst users: User[] = [\n  { id: 1, name: \"Alice\", email: \"alice@example.com\" },\n  { id: 2, name: \"Bob\", email: \"bob@example.com\" }\n];\n\\`\\`\\`\n\n> This is a blockquote with **bold** text\n\n1. First ordered item\n2. Second ordered item\n3. Third ordered item\n\n- Unordered list item\n- Another item\n- And another\n\n[Link to example](https://example.com)\n\n![Image alt text](https://via.placeholder.com/400x200)\n`);\n  const [showPreview, setShowPreview] = useState(true);\n  const [cursorPosition, setCursorPosition] = useState(0);\n  const [showToolbar, setShowToolbar] = useState(false);\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n  const editorRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      if (textareaRef.current && textareaRef.current.scrollTop > 50) {\n        setShowToolbar(true);\n      } else {\n        setShowToolbar(false);\n      }\n    };\n\n    const textarea = textareaRef.current;\n    textarea?.addEventListener('scroll', handleScroll);\n    return () => textarea?.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  const insertMarkdown = (before: string, after: string = '') => {\n    const textarea = textareaRef.current;\n    if (!textarea) return;\n\n    const start = textarea.selectionStart;\n    const end = textarea.selectionEnd;\n    const selectedText = markdown.substring(start, end);\n    const newText = markdown.substring(0, start) + before + selectedText + after + markdown.substring(end);\n    \n    setMarkdown(newText);\n    \n    setTimeout(() => {\n      textarea.focus();\n      textarea.setSelectionRange(start + before.length, start + before.length + selectedText.length);\n    }, 0);\n  };\n\n  const parseMarkdown = (text: string): string => {\n    let html = text;\n\n    // Code blocks with syntax highlighting\n    html = html.replace(/```(\\w+)?\\n([\\s\\S]*?)```/g, (match, lang, code) => {\n      const highlighted = highlightCode(code.trim(), lang || 'javascript');\n      return `<pre class=\"code-block\"><code class=\"language-${lang || 'javascript'}\">${highlighted}</code></pre>`;\n    });\n\n    // Inline code\n    html = html.replace(/`([^`]+)`/g, '<code class=\"inline-code\">$1</code>');\n\n    // Headers\n    html = html.replace(/^### (.*$)/gim, '<h3>$1</h3>');\n    html = html.replace(/^## (.*$)/gim, '<h2>$1</h2>');\n    html = html.replace(/^# (.*$)/gim, '<h1>$1</h1>');\n\n    // Bold\n    html = html.replace(/\\*\\*(.+?)\\*\\*/g, '<strong>$1</strong>');\n\n    // Italic\n    html = html.replace(/\\*(.+?)\\*/g, '<em>$1</em>');\n\n    // Blockquotes\n    html = html.replace(/^> (.*$)/gim, '<blockquote>$1</blockquote>');\n\n    // Ordered lists\n    html = html.replace(/^\\d+\\.\\s(.+)$/gim, '<li class=\"ordered\">$1</li>');\n    html = html.replace(/(<li class=\"ordered\">.*<\\/li>)/s, '<ol>$1</ol>');\n\n    // Unordered lists\n    html = html.replace(/^[-*]\\s(.+)$/gim, '<li class=\"unordered\">$1</li>');\n    html = html.replace(/(<li class=\"unordered\">.*<\\/li>)/s, '<ul>$1</ul>');\n\n    // Links\n    html = html.replace(/\\[([^\\]]+)\\]\\(([^)]+)\\)/g, '<a href=\"$2\" target=\"_blank\" rel=\"noopener noreferrer\">$1</a>');\n\n    // Images\n    html = html.replace(/!\\[([^\\]]*)\\]\\(([^)]+)\\)/g, '<img src=\"$2\" alt=\"$1\" />');\n\n    // Line breaks\n    html = html.replace(/\\n/g, '<br />');\n\n    return html;\n  };\n\n  const highlightCode = (code: string, lang: string): string => {\n    const keywords = ['function', 'const', 'let', 'var', 'return', 'if', 'else', 'for', 'while', 'class', 'interface', 'type', 'import', 'export', 'default', 'async', 'await', 'new', 'this', 'extends', 'implements'];\n    const types = ['string', 'number', 'boolean', 'void', 'any', 'unknown', 'never', 'User', 'Array'];\n    \n    let highlighted = code;\n\n    // Comments\n    highlighted = highlighted.replace(/(\\/\\/.*$)/gm, '<span class=\"token-comment\">$1</span>');\n    highlighted = highlighted.replace(/(\\/\\*[\\s\\S]*?\\*\\/)/g, '<span class=\"token-comment\">$1</span>');\n\n    // Strings\n    highlighted = highlighted.replace(/(\".*?\"|'.*?'|`.*?`)/g, '<span class=\"token-string\">$1</span>');\n\n    // Numbers\n    highlighted = highlighted.replace(/\\b(\\d+)\\b/g, '<span class=\"token-number\">$1</span>');\n\n    // Keywords\n    keywords.forEach(keyword => {\n      const regex = new RegExp(`\\\\b(${keyword})\\\\b`, 'g');\n      highlighted = highlighted.replace(regex, '<span class=\"token-keyword\">$1</span>');\n    });\n\n    // Types\n    types.forEach(type => {\n      const regex = new RegExp(`\\\\b(${type})\\\\b`, 'g');\n      highlighted = highlighted.replace(regex, '<span class=\"token-type\">$1</span>');\n    });\n\n    // Functions\n    highlighted = highlighted.replace(/\\b([a-zA-Z_]\\w*)\\s*\\(/g, '<span class=\"token-function\">$1</span>(');\n\n    return highlighted;\n  };\n\n  return (\n    <div className=\"min-h-screen bg-[#0d1117] text-gray-100\">\n      <div className=\"max-w-[1800px] mx-auto p-6\">\n        <div className=\"mb-6 flex items-center justify-between\">\n          <div>\n            <h1 className=\"text-3xl font-bold bg-gradient-to-r from-blue-400 via-purple-400 to-pink-400 bg-clip-text text-transparent\">\n              Premium Markdown Editor\n            </h1>\n            <p className=\"text-gray-400 mt-1\">Write beautiful markdown with live preview</p>\n          </div>\n          <Button\n            onClick={() => setShowPreview(!showPreview)}\n            className=\"bg-[#21262d] hover:bg-[#30363d] text-gray-100 border border-[#30363d]\"\n          >\n            {showPreview ? <EyeOff className=\"w-4 h-4 mr-2\" /> : <Eye className=\"w-4 h-4 mr-2\" />}\n            {showPreview ? 'Hide Preview' : 'Show Preview'}\n          </Button>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {/* Editor Section */}\n          <div className=\"relative\" ref={editorRef}>\n            <AnimatePresence>\n              {showToolbar && (\n                <motion.div\n                  initial={{ opacity: 0, y: -20 }}\n                  animate={{ opacity: 1, y: 0 }}\n                  exit={{ opacity: 0, y: -20 }}\n                  className=\"absolute top-4 left-4 right-4 z-10 bg-[#161b22] border border-[#30363d] rounded-lg p-2 shadow-2xl backdrop-blur-sm\"\n                >\n                  <div className=\"flex items-center gap-1 flex-wrap\">\n                    <Button\n                      size=\"sm\"\n                      variant=\"ghost\"\n                      onClick={() => insertMarkdown('# ', '')}\n                      className=\"hover:bg-[#21262d] hover:text-blue-400 transition-colors\"\n                      title=\"Heading 1\"\n                    >\n                      <Heading1 className=\"w-4 h-4\" />\n                    </Button>\n                    <Button\n                      size=\"sm\"\n                      variant=\"ghost\"\n                      onClick={() => insertMarkdown('## ', '')}\n                      className=\"hover:bg-[#21262d] hover:text-blue-400 transition-colors\"\n                      title=\"Heading 2\"\n                    >\n                      <Heading2 className=\"w-4 h-4\" />\n                    </Button>\n                    <div className=\"w-px h-6 bg-[#30363d] mx-1\" />\n                    <Button\n                      size=\"sm\"\n                      variant=\"ghost\"\n                      onClick={() => insertMarkdown('**', '**')}\n                      className=\"hover:bg-[#21262d] hover:text-yellow-400 transition-colors\"\n                      title=\"Bold\"\n                    >\n                      <Bold className=\"w-4 h-4\" />\n                    </Button>\n                    <Button\n                      size=\"sm\"\n                      variant=\"ghost\"\n                      onClick={() => insertMarkdown('*', '*')}\n                      className=\"hover:bg-[#21262d] hover:text-yellow-400 transition-colors\"\n                      title=\"Italic\"\n                    >\n                      <Italic className=\"w-4 h-4\" />\n                    </Button>\n                    <Button\n                      size=\"sm\"\n                      variant=\"ghost\"\n                      onClick={() => insertMarkdown('`', '`')}\n                      className=\"hover:bg-[#21262d] hover:text-green-400 transition-colors\"\n                      title=\"Inline Code\"\n                    >\n                      <Code className=\"w-4 h-4\" />\n                    </Button>\n                    <div className=\"w-px h-6 bg-[#30363d] mx-1\" />\n                    <Button\n                      size=\"sm\"\n                      variant=\"ghost\"\n                      onClick={() => insertMarkdown('> ', '')}\n                      className=\"hover:bg-[#21262d] hover:text-purple-400 transition-colors\"\n                      title=\"Quote\"\n                    >\n                      <Quote className=\"w-4 h-4\" />\n                    </Button>\n                    <Button\n                      size=\"sm\"\n                      variant=\"ghost\"\n                      onClick={() => insertMarkdown('- ', '')}\n                      className=\"hover:bg-[#21262d] hover:text-pink-400 transition-colors\"\n                      title=\"Unordered List\"\n                    >\n                      <List className=\"w-4 h-4\" />\n                    </Button>\n                    <Button\n                      size=\"sm\"\n                      variant=\"ghost\"\n                      onClick={() => insertMarkdown('1. ', '')}\n                      className=\"hover:bg-[#21262d] hover:text-pink-400 transition-colors\"\n                      title=\"Ordered List\"\n                    >\n                      <ListOrdered className=\"w-4 h-4\" />\n                    </Button>\n                    <div className=\"w-px h-6 bg-[#30363d] mx-1\" />\n                    <Button\n                      size=\"sm\"\n                      variant=\"ghost\"\n                      onClick={() => insertMarkdown('[', '](url)')}\n                      className=\"hover:bg-[#21262d] hover:text-cyan-400 transition-colors\"\n                      title=\"Link\"\n                    >\n                      <Link2 className=\"w-4 h-4\" />\n                    </Button>\n                    <Button\n                      size=\"sm\"\n                      variant=\"ghost\"\n                      onClick={() => insertMarkdown('![alt](', ')')}\n                      className=\"hover:bg-[#21262d] hover:text-cyan-400 transition-colors\"\n                      title=\"Image\"\n                    >\n                      <Image className=\"w-4 h-4\" />\n                    </Button>\n                  </div>\n                </motion.div>\n              )}\n            </AnimatePresence>\n\n            <div className=\"bg-[#0d1117] border border-[#30363d] rounded-lg overflow-hidden shadow-2xl\">\n              <div className=\"bg-[#161b22] border-b border-[#30363d] px-4 py-3 flex items-center justify-between\">\n                <span className=\"text-sm font-medium text-gray-300\">Editor</span>\n                <div className=\"flex gap-2\">\n                  <div className=\"w-3 h-3 rounded-full bg-red-500/80\" />\n                  <div className=\"w-3 h-3 rounded-full bg-yellow-500/80\" />\n                  <div className=\"w-3 h-3 rounded-full bg-green-500/80\" />\n                </div>\n              </div>\n              <textarea\n                ref={textareaRef}\n                value={markdown}\n                onChange={(e) => setMarkdown(e.target.value)}\n                onSelect={(e) => setCursorPosition(e.currentTarget.selectionStart)}\n                className=\"w-full h-[calc(100vh-280px)] p-6 bg-[#0d1117] text-gray-100 font-mono text-sm resize-none focus:outline-none leading-relaxed\"\n                placeholder=\"Start writing your markdown here...\"\n                spellCheck={false}\n              />\n              <div className=\"bg-[#161b22] border-t border-[#30363d] px-4 py-2 text-xs text-gray-400\">\n                {markdown.split('\\n').length} lines \u00b7 {markdown.length} characters\n              </div>\n            </div>\n          </div>\n\n          {/* Preview Section */}\n          <AnimatePresence mode=\"wait\">\n            {showPreview && (\n              <motion.div\n                initial={{ opacity: 0, x: 20 }}\n                animate={{ opacity: 1, x: 0 }}\n                exit={{ opacity: 0, x: 20 }}\n                transition={{ duration: 0.3 }}\n                className=\"bg-[#0d1117] border border-[#30363d] rounded-lg overflow-hidden shadow-2xl\"\n              >\n                <div className=\"bg-[#161b22] border-b border-[#30363d] px-4 py-3 flex items-center justify-between\">\n                  <span className=\"text-sm font-medium text-gray-300\">Preview</span>\n                  <div className=\"flex gap-2\">\n                    <div className=\"w-3 h-3 rounded-full bg-red-500/80\" />\n                    <div className=\"w-3 h-3 rounded-full bg-yellow-500/80\" />\n                    <div className=\"w-3 h-3 rounded-full bg-green-500/80\" />\n                  </div>\n                </div>\n                <motion.div\n                  key={markdown}\n                  initial={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                  transition={{ duration: 0.2 }}\n                  className=\"p-6 h-[calc(100vh-280px)] overflow-y-auto markdown-preview\"\n                  dangerouslySetInnerHTML={{ __html: parseMarkdown(markdown) }}\n                />\n              </motion.div>\n            )}\n          </AnimatePresence>\n        </div>\n      </div>\n\n      <style jsx global>{`\n        .markdown-preview {\n          color: #c9d1d9;\n          line-height: 1.6;\n        }\n\n        .markdown-preview h1 {\n          font-size: 2em;\n          font-weight: 700;\n          margin: 0.67em 0;\n          padding-bottom: 0.3em;\n          border-bottom: 1px solid #21262d;\n          color: #58a6ff;\n        }\n\n        .markdown-preview h2 {\n          font-size: 1.5em;\n          font-weight: 700;\n          margin: 0.75em 0 0.5em 0;\n          padding-bottom: 0.3em;\n          border-bottom: 1px solid #21262d;\n          color: #79c0ff;\n        }\n\n        .markdown-preview h3 {\n          font-size: 1.25em;\n          font-weight: 700;\n          margin: 0.75em 0 0.5em 0;\n          color: #a5d6ff;\n        }\n\n        .markdown-preview strong {\n          font-weight: 700;\n          color: #ffd700;\n        }\n\n        .markdown-preview em {\n          font-style: italic;\n          color: #ffa657;\n        }\n\n        .markdown-preview code.inline-code {\n          background: #161b22;\n          border: 1px solid #30363d;\n          border-radius: 6px;\n          padding: 0.2em 0.4em;\n          font-family: 'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace;\n          font-size: 0.85em;\n          color: #79c0ff;\n        }\n\n        .markdown-preview pre.code-block {\n          background: #161b22;\n          border: 1px solid #30363d;\n          border-radius: 8px;\n          padding: 16px;\n          margin: 16px 0;\n          overflow-x: auto;\n          box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.3);\n        }\n\n        .markdown-preview pre.code-block code {\n          font-family: 'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace;\n          font-size: 0.875em;\n          line-height: 1.6;\n          color: #c9d1d9;\n          display: block;\n        }\n\n        .markdown-preview .token-keyword {\n          color: #ff7b72;\n          font-weight: 600;\n        }\n\n        .markdown-preview .token-string {\n          color: #a5d6ff;\n        }\n\n        .markdown-preview .token-number {\n          color: #79c0ff;\n        }\n\n        .markdown-preview .token-function {\n          color: #d2a8ff;\n          font-weight: 600;\n        }\n\n        .markdown-preview .token-comment {\n          color: #8b949e;\n          font-style: italic;\n        }\n\n        .markdown-preview .token-type {\n          color: #ffa657;\n          font-weight: 600;\n        }\n\n        .markdown-preview blockquote {\n          border-left: 4px solid #58a6ff;\n          padding-left: 16px;\n          margin: 16px 0;\n          color: #8b949e;\n          background: #161b22;\n          padding: 12px 16px;\n          border-radius: 4px;\n        }\n\n        .markdown-preview ul, .markdown-preview ol {\n          margin: 16px 0;\n          padding-left: 32px;\n        }\n\n        .markdown-preview li {\n          margin: 8px 0;\n          color: #c9d1d9;\n        }\n\n        .markdown-preview li.ordered {\n          list-style-type: decimal;\n        }\n\n        .markdown-preview li.unordered {\n          list-style-type: disc;\n        }\n\n        .markdown-preview a {\n          color: #58a6ff;\n          text-decoration: none;\n          border-bottom: 1px solid transparent;\n          transition: all 0.2s;\n        }\n\n        .markdown-preview a:hover {\n          border-bottom-color: #58a6ff;\n        }\n\n        .markdown-preview img {\n          max-width: 100%;\n          height: auto;\n          border-radius: 8px;\n          margin: 16px 0;\n          border: 1px solid #30363d;\n        }\n\n        .markdown-preview br {\n          display: block;\n          content: \"\";\n          margin: 0.5em 0;\n        }\n\n        /* Scrollbar styling */\n        .markdown-preview::-webkit-scrollbar,\n        textarea::-webkit-scrollbar {\n          width: 12px;\n        }\n\n        .markdown-preview::-webkit-scrollbar-track,\n        textarea::-webkit-scrollbar-track {\n          background: #0d1117;\n        }\n\n        .markdown-preview::-webkit-scrollbar-thumb,\n        textarea::-webkit-scrollbar-thumb {\n          background: #30363d;\n          border-radius: 6px;\n          border: 2px solid #0d1117;\n        }\n\n        .markdown-preview::-webkit-scrollbar-thumb:hover,\n        textarea::-webkit-scrollbar-thumb:hover {\n          background: #484f58;\n        }\n      `}</style>\n    </div>\n  );\n}",
    "error": null,
    "elapsed_time": 69.33098793029785,
    "success": true
  }
}